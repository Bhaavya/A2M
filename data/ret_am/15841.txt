{"src_spec_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Matrices in Sudoku</b>", "url": "https://sudoku.com.au/Matrices-in-Sudoku-Puzzles.aspx", "isFamilyFriendly": true, "displayUrl": "https://<b>sudoku</b>.com.au/<b>Matrices-in-Sudoku</b>-<b>Puzzles</b>.aspx", "snippet": "Note that (1)r6c6 reverts cleanly back to <b>matrix</b> column 1 with a 3x3 Triangular <b>matrix</b>, whilst (6) r6c6 leaves in its wake a 9x9 Triangular <b>matrix</b>. They both overlap with the first <b>matrix</b> row. The primary keys to finding the deduction are the first four <b>matrix</b> rows and the last <b>matrix</b> row. The rest of the deduction is relatively easy (for that <b>puzzle</b>, I mean!) once one sees those parts.", "dateLastCrawled": "2022-01-30T02:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Linear Algebra Semester Project By Tim VanAusdal and Erik Martinez ...", "url": "https://www.math.utah.edu/~gustafso/s2018/2270/projects-2018/submittedprojects/vanausdal-martinez/Sudoku%20Semester%20project%20pdf.pdf", "isFamilyFriendly": true, "displayUrl": "https://www.math.utah.edu/~gustafso/s2018/2270/projects-2018/submittedprojects...", "snippet": "variable, for example, column 1 represented the <b>item</b> in row 1 column 1 of the <b>puzzle</b>, and we had 81 rows where from the 27 equations that we could gather from the constraints of the <b>sudoku</b> <b>puzzle</b> we would use relationship equation 3 times and would represent the members of the equation in the appropriate column. In the 82nd column we represented what each equation was equal to. For there to be a unique solution, which is what makes a <b>sudoku</b> <b>puzzle</b>, we would need all 81 pivot columns, which ...", "dateLastCrawled": "2022-01-25T06:39:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Valid Sudoku Checker in Python</b> - CSEstack", "url": "https://www.csestack.org/valid-sudoku-python/", "isFamilyFriendly": true, "displayUrl": "https://www.csestack.org/valid-<b>sudoku</b>-python", "snippet": "<b>Valid Sudoku Checker in Python</b>. Problem statement: You have given <b>sudoku</b> as <b>matrix</b>. For example, If below three condition are valid then its a valid <b>sudoku</b>. Each row will have items from 1 to 9. Each column will have items from 1 to 9. Each 3*3 cell (9 elements) will have items from 1 to 9.", "dateLastCrawled": "2022-02-01T23:03:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Generic Sudoku Using Randomization</b> | Verification Academy", "url": "https://verificationacademy.com/forums/systemverilog/generic-sudoku-using-randomization", "isFamilyFriendly": true, "displayUrl": "https://verificationacademy.com/forums/systemverilog/<b>generic-sudoku-using-randomization</b>", "snippet": "you can find the below logic that contains constraints for solving <b>sudoku</b> <b>puzzle</b> with 9 * 9 size. you can use this logic to come with a generic logic for other sizes as well. Please find the below code. class <b>sudoku</b>; rand int unsigned <b>item</b> [9] [9]; int unsigned problem [9] [9]; // the problem data (9*9 <b>matrix</b> with 0 in the blank spaces) constraint c1 {foreach (<b>item</b> [i, j]) <b>item</b> [i] [j] inside {[1: 9]};} constraint c2 {foreach (<b>item</b> [i, j]) // this constraint is for getting unique elements in ...", "dateLastCrawled": "2022-01-30T17:21:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Sudoku</b> <b>Swordfish</b> Technique with Examples", "url": "https://sudoku.com.au/swordfish-technique.aspx", "isFamilyFriendly": true, "displayUrl": "https://<b>sudoku</b>.com.au/<b>swordfish</b>-technique.aspx", "snippet": "Each row has at least one <b>item</b> that must be true, by examination of the <b>puzzle</b> grid; Each column has no more than one <b>item</b> that can be true, by the rules of the game (no need to consult the grid) Conclusion: The table has at least three truths (at each row) The table has no more than three truths (at each column) Thus, the table has exactly three truths; Further, each table column has exactly one truth; One can now clearly see that, for example, c8=5 is forbidden. In fact, c125789,d125789 ...", "dateLastCrawled": "2022-01-31T09:37:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Dyalog APL - Solution vector for <b>Sudoku</b> problem", "url": "http://dfns.dyalog.com/n_sudoku.htm", "isFamilyFriendly": true, "displayUrl": "dfns.dyalog.com/n_<b>sudoku</b>.htm", "snippet": "The result is a vector of all solution matrices. Technical notes: This solution was supplied by Veli-Matti Jantunen, who says: \u237a may be used to denote the <b>sudoku</b> rectangle, the default is 2/ (\u2191\u2374\u2375)*0.5 (eg. if &quot;mat&quot; is a 6x6 <b>matrix</b> and the sub area is 2 3, the call must be 2 3 <b>sudoku</b> mat). The result is a vector of all the solutions ...", "dateLastCrawled": "2021-12-02T02:18:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Sudoku Solver in</b> C++ - <b>Tutorialspoint</b>", "url": "https://www.tutorialspoint.com/sudoku-solver-in-cplusplus", "isFamilyFriendly": true, "displayUrl": "https://<b>www.tutorialspoint.com</b>/<b>sudoku-solver-in</b>-cplusplus", "snippet": "<b>Sudoku Solver in</b> C++. C++ Server Side Programming Programming. Suppose we have a <b>Sudoku</b> grid and we have to solve this famous number maze problem, <b>Sudoku</b>. We know that <b>Sudoku</b> is a 9 x 9 number grid, and the whole grid are also divided into 3 x 3 boxes There are some rules to solve the <b>Sudoku</b>. We have to use digits 1 to 9 for solving this problem.", "dateLastCrawled": "2022-02-03T00:08:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "OpenCV - How to extract a (<b>Sudoku</b>)grid from an Image : learnpython", "url": "https://www.reddit.com/r/learnpython/comments/cb2dyh/opencv_how_to_extract_a_sudokugrid_from_an_image/", "isFamilyFriendly": true, "displayUrl": "https://<b>www.reddit.com</b>/r/learnpython/comments/cb2dyh/opencv_how_to_extract_a_<b>sudoku</b>...", "snippet": "Back at the top of the loop, you think you&#39;re getting the next <b>item</b>, but at index 1 now is the original third <b>item</b>, because you&#39;ve modified the list. User: kyber has responded with a really simple fix, which is to create a new object of the original list to iterate through by selecting all indexes with &#39;my_list[:]&#39; so I am not iterating through the list I am editing.", "dateLastCrawled": "2022-01-05T00:08:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "The fastest <b>Sudoku</b> solver - Code Golf Stack Exchange", "url": "https://codegolf.stackexchange.com/questions/190727/the-fastest-sudoku-solver", "isFamilyFriendly": true, "displayUrl": "https://codegolf.stackexchange.com/questions/190727/the-fastest-<b>sudoku</b>-solver", "snippet": "It can be found here. The file contains 49151 <b>Sudoku</b> puzzles. The first line of the file is the number of puzzles, and every line after that is 81 characters long and represents a <b>puzzle</b>. The unknown cells are 0, and the known cells are 1-9. Your program should be able to take the filename as an argument, or have the file input from STDIN, to ...", "dateLastCrawled": "2022-01-22T17:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Logic Grid Puzzles</b> - Brainzilla", "url": "https://www.brainzilla.com/logic/logic-grid/", "isFamilyFriendly": true, "displayUrl": "https://www.brainzilla.com/logic/logic-grid", "snippet": "This is the perfect <b>puzzle</b> to anyone who never has solved a logic grid <b>puzzle</b>. Basic 2. You will probably find this <b>puzzle</b> as easy as the first basic one. Basic 3. This logic problem will require nearly two minutes to be solved. Learn how to play . Play these basic <b>logic grid puzzles</b> to learn how to solve more difficult ones. Basic Logic Grid <b>Puzzle</b> 1; Basic Logic Grid <b>Puzzle</b> 2; Basic Logic Grid <b>Puzzle</b> 3; Step by step guide. Aha! Puzzles has a great step by step guide on how to solve a logic ...", "dateLastCrawled": "2022-02-02T05:00:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Matrices in Sudoku</b>", "url": "https://sudoku.com.au/Matrices-in-Sudoku-Puzzles.aspx", "isFamilyFriendly": true, "displayUrl": "https://<b>sudoku</b>.com.au/<b>Matrices-in-Sudoku</b>-<b>Puzzles</b>.aspx", "snippet": "Note that (1)r6c6 reverts cleanly back to <b>matrix</b> column 1 with a 3x3 Triangular <b>matrix</b>, whilst (6) r6c6 leaves in its wake a 9x9 Triangular <b>matrix</b>. They both overlap with the first <b>matrix</b> row. The primary keys to finding the deduction are the first four <b>matrix</b> rows and the last <b>matrix</b> row. The rest of the deduction is relatively easy (for that <b>puzzle</b>, I mean!) once one sees those parts.", "dateLastCrawled": "2022-01-30T02:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Strategies and Algorithms of <b>Sudoku</b>", "url": "https://digitalcommons.latech.edu/cgi/viewcontent.cgi?article=1012&context=mathematics-senior-capstone-papers", "isFamilyFriendly": true, "displayUrl": "https://digitalcommons.latech.edu/cgi/viewcontent.cgi?article=1012&amp;context=mathematics...", "snippet": "rectly relate <b>to Sudoku</b> with algorithms to <b>similar</b> combinatorial problems such as the Traveling Salesman problem and more. With the study of game theory becoming more popular, these strategies have also been shown to help students in various ways in the classroom. To understand <b>Sudoku</b> on a deeper level, this paper demonstrates ways to model a <b>puzzle</b> by using permutation matrices and di erent symmetries. Keywords: <b>sudoku</b>, strategies, algorithms, permutation <b>matrix</b>, symmetry, education 1 ...", "dateLastCrawled": "2022-02-01T17:59:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "contractualRules": [{"_type": "ContractualRules/LicenseAttribution", "targetPropertyName": "snippet", "targetPropertyIndex": 2, "mustBeCloseToContent": true, "license": {"name": "CC-BY-SA", "url": "http://creativecommons.org/licenses/by-sa/3.0/"}, "licenseNotice": "Text under CC-BY-SA license"}], "name": "<b>Sudoku solving algorithms</b> - <b>Wikipedia</b>", "url": "https://en.wikipedia.org/wiki/Sudoku_solving_algorithms", "isFamilyFriendly": true, "displayUrl": "https://<b>en.wikipedia.org</b>/wiki/<b>Sudoku_solving_algorithms</b>", "snippet": "A typical <b>Sudoku</b> <b>puzzle</b>. A standard <b>Sudoku</b> contains 81 cells, in a 9\u00d79 grid, and has 9 boxes, each box being the intersection of the first, middle, or last 3 rows, and the first, middle, or last 3 columns. Each cell may contain a number from one to nine, and each number can only occur once in each row, column, and box. A <b>Sudoku</b> starts with some cells containing numbers clues), and the goal is to solve the remaining cells. Proper Sudokus have one solution. Players and investigators use a ...", "dateLastCrawled": "2022-02-02T18:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "matrices - <b>Sudoku with special properties</b> - <b>Mathematics Stack Exchange</b>", "url": "https://math.stackexchange.com/questions/1795047/sudoku-with-special-properties", "isFamilyFriendly": true, "displayUrl": "https://math.stackexchange.com/questions/1795047", "snippet": "<b>Sudoku</b> is a <b>puzzle</b>, with the objective is to fill a 9\u00d79 grid with digits so that each column, each row, and each of the nine 3\u00d73 sub-grids that compose the grid (also &quot;<b>sudoku</b>-blocks&quot;) contains all of the digits from 1 to 9.", "dateLastCrawled": "2022-01-11T08:25:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "rKWE7f-pS3OlhO3_qbtzYQ_054b23e1efcc4341a2f2221f6aa1efe1_Pseudoku.pdf ...", "url": "https://www.coursehero.com/file/123693661/rKWE7f-pS3OlhO3-qbtzYQ-054b23e1efcc4341a2f2221f6aa1efe1-Pseudokupdf/", "isFamilyFriendly": true, "displayUrl": "https://www.coursehero.com/file/123693661/rKWE7f-pS3OlhO3-qbtzYQ-054b23e1efcc4341a2f...", "snippet": "A typical <b>Sudoku</b> <b>puzzle</b> will then look something like this: To solve this <b>puzzle</b>, all the squares must be filled with numbers from 1 to 9 such that the following are satisfied: 1. every row has all integers from 1 to 9 (with each appearing only once) 2. every column has all integers from 1 to 9 (with each appearing only once) 3. every 3-by-3 sub-grid, or block (with bold outlines around them going from top-left to bottom-right) has all integers from 1 to 9 In this coursework, we won\u2019t be ...", "dateLastCrawled": "2022-02-02T12:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Using <b>Matrix</b> <b>Puzzles to Assess Student Understanding in Economics</b> ...", "url": "https://www.sciencedirect.com/science/article/abs/pii/S1477388020300207", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/abs/pii/S1477388020300207", "snippet": "A <b>matrix</b> <b>puzzle</b> is presented as an alternative method to assess student comprehension in economics. It uses rows to denote changes in an economic situation and columns to denote the outcomes affected by the changes. Students use Y (yes) or N (no) to answer each cell in the <b>matrix</b>, which requires students to relate the change to a particular outcome. Examples of <b>matrix</b> puzzles are provided with some results from university classes and suggestions for constructing other <b>matrix</b> puzzles. A major ...", "dateLastCrawled": "2022-01-25T13:52:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Sudoku</b> Solver 2 - Appendix 2 - <b>Complete Solution #blog #bernard</b> \u00b7 GitHub", "url": "https://gist.github.com/mineshpatel1/209038c64c19d5e78e0a878320797631", "isFamilyFriendly": true, "displayUrl": "https://gist.github.com/mineshpatel1/209038c64c19d5e78e0a878320797631", "snippet": "if img. <b>item</b> (y, x) == 64: # Hide anything that isn&#39;t the main feature: cv2. floodFill (img, mask, (x, y), 0) # Find the bounding parameters : if img. <b>item</b> (y, x) == 255: top = y if y &lt; top else top: bottom = y if y &gt; bottom else bottom: left = x if x &lt; left else left: right = x if x &gt; right else right: bbox = [[left, top], [right, bottom]] return img, np. array (bbox, dtype = &#39;float32&#39;), seed_point: def extract_digit (img, rect, size): &quot;&quot;&quot;Extracts a digit (if one exists) from a <b>Sudoku</b> ...", "dateLastCrawled": "2022-01-29T07:39:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "OpenCV - How to extract a (<b>Sudoku</b>)grid from an Image : learnpython", "url": "https://www.reddit.com/r/learnpython/comments/cb2dyh/opencv_how_to_extract_a_sudokugrid_from_an_image/", "isFamilyFriendly": true, "displayUrl": "https://<b>www.reddit.com</b>/r/learnpython/comments/cb2dyh/opencv_how_to_extract_a_<b>sudoku</b>...", "snippet": "Back at the top of the loop, you think you&#39;re getting the next <b>item</b>, but at index 1 now is the original third <b>item</b>, because you&#39;ve modified the list. User: kyber has responded with a really simple fix, which is to create a new object of the original list to iterate through by selecting all indexes with &#39;my_list[:]&#39; so I am not iterating through the list I am editing.", "dateLastCrawled": "2022-01-05T00:08:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "The fastest <b>Sudoku</b> solver - Code Golf Stack Exchange", "url": "https://codegolf.stackexchange.com/questions/190727/the-fastest-sudoku-solver", "isFamilyFriendly": true, "displayUrl": "https://codegolf.stackexchange.com/questions/190727/the-fastest-<b>sudoku</b>-solver", "snippet": "It can be found here. The file contains 49151 <b>Sudoku</b> puzzles. The first line of the file is the number of puzzles, and every line after that is 81 characters long and represents a <b>puzzle</b>. The unknown cells are 0, and the known cells are 1-9. Your program should be able to take the filename as an argument, or have the file input from STDIN, to ...", "dateLastCrawled": "2022-01-22T17:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Logic Grid Puzzles</b> - Brainzilla", "url": "https://www.brainzilla.com/logic/logic-grid/", "isFamilyFriendly": true, "displayUrl": "https://www.brainzilla.com/logic/logic-grid", "snippet": "This is the perfect <b>puzzle</b> to anyone who never has solved a logic grid <b>puzzle</b>. Basic 2. You will probably find this <b>puzzle</b> as easy as the first basic one. Basic 3. This logic problem will require nearly two minutes to be solved. Learn how to play . Play these basic <b>logic grid puzzles</b> to learn how to solve more difficult ones. Basic Logic Grid <b>Puzzle</b> 1; Basic Logic Grid <b>Puzzle</b> 2; Basic Logic Grid <b>Puzzle</b> 3; Step by step guide. Aha! Puzzles has a great step by step guide on how to solve a logic ...", "dateLastCrawled": "2022-02-02T05:00:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Matrices in Sudoku</b>", "url": "https://sudoku.com.au/Matrices-in-Sudoku-Puzzles.aspx", "isFamilyFriendly": true, "displayUrl": "https://<b>sudoku</b>.com.au/<b>Matrices-in-Sudoku</b>-<b>Puzzles</b>.aspx", "snippet": "The first step that I took in the Easter Monster <b>puzzle</b> <b>can</b> also be written as such a <b>matrix</b>. The advantage, in the case of symmetric pigeonhole matrices, is that little regard needs to be applied to figuring out how to build one. So, to build a <b>matrix</b> to prove that Easter Monster step, one need only start listing the strong sets considered. One need then only place the row items in a column such that they meet the weak inference requirement.", "dateLastCrawled": "2022-01-30T02:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "contractualRules": [{"_type": "ContractualRules/LicenseAttribution", "targetPropertyName": "snippet", "targetPropertyIndex": 1, "mustBeCloseToContent": true, "license": {"name": "CC-BY-SA", "url": "http://creativecommons.org/licenses/by-sa/3.0/"}, "licenseNotice": "Text under CC-BY-SA license"}], "name": "<b>Sudoku</b> - <b>Wikipedia</b>", "url": "https://en.wikipedia.org/wiki/Sudoku", "isFamilyFriendly": true, "displayUrl": "https://<b>en.wikipedia.org</b>/wiki/<b>Sudoku</b>", "snippet": "<b>Sudoku</b> (/ s u\u02d0 \u02c8 d o\u028a k u\u02d0,-\u02c8 d \u0252 k-, s \u0259-/; Japanese: \u6570\u72ec, romanized: s\u016bdoku, lit. &#39;digit-single&#39;; originally called Number Place) is a logic-based, combinatorial number-placement <b>puzzle</b>.In classic <b>sudoku</b>, the objective is to fill a 9 \u00d7 9 grid with digits so that each column, each row, and each of the nine 3 \u00d7 3 subgrids that compose the grid (also called &quot;boxes&quot;, &quot;blocks&quot;, or &quot;regions&quot;) contain all of the digits from 1 to 9.", "dateLastCrawled": "2022-02-07T09:52:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "java - <b>Code explanation of Sudoku Solver</b> - Stack Overflow", "url": "https://stackoverflow.com/questions/15182546/code-explanation-of-sudoku-solver", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/15182546", "snippet": "I have question about the following code snippet: It is a <b>sudoku</b> solver which solves a <b>Sudoku</b> <b>puzzle</b> by filling the empty cells. I <b>can</b> not really get the logic behind the solver method. Why does it return false after trying k=1-9 and return true after looping over all cells. What I <b>thought</b> is we recursively get into solver() method and once the <b>sudoku</b> is done, it will return true back as invoking order and finally the first invoked solver() will return true. I think I must omit some ...", "dateLastCrawled": "2022-01-12T07:34:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Generating (and Solving!) Sudokus in</b> CSS | <b>CSS-Tricks</b>", "url": "https://css-tricks.com/generating-and-solving-sudokus-in-css/", "isFamilyFriendly": true, "displayUrl": "https://<b>css-tricks.com</b>/<b>generating-and-solving-sudokus-in</b>-css", "snippet": "Doctor Google tells us that even with only 16 squares, there are four billion possible combinations of four numbers. But a program that brute forces all these combinations and outputs the ones that are valid according to the rules of <b>Sudoku</b> shows that there are only 288 valid solutions in 4\u00d74 <b>Sudoku</b>, which is a big difference from the number of possible valid solutions in a 9\u00d79 grid.With only 288 possible solutions, this is where Sass <b>can</b> really come into its own.", "dateLastCrawled": "2022-01-29T08:57:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Sudoku</b> Y Wing Technique with Examples", "url": "https://sudoku.com.au/Y-wings.aspx", "isFamilyFriendly": true, "displayUrl": "https://<b>sudoku</b>.com.au/Y-wings.aspx", "snippet": "Putting the concept into use in a <b>puzzle</b> - not so easy. The crux to logically solving <b>sudoku</b> puzzles, after getting through the techniques discussed first in this blog - is really finding the chains. Understanding them - not that hard. Finding them - that is vexing. Using a program like Simple <b>Sudoku</b> that allows you to highlight cells <b>can</b> help.", "dateLastCrawled": "2022-01-31T17:29:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Sudoku Solver</b> : matlab - <b>reddit</b>", "url": "https://www.reddit.com/r/matlab/comments/17iymq/sudoku_solver/", "isFamilyFriendly": true, "displayUrl": "https://<b>www.reddit.com</b>/r/matlab/comments/17iymq/<b>sudoku_solver</b>", "snippet": "And I was wondering what people <b>thought</b> of it, and ways to improve code style or speed. I use both recursion and a semi-smart solver, and two example problems are found in the help. This is my first try at a <b>sudoku solver</b>, and I just went with what seemed natural, so there may be a more efficient approach out there (in particular, it seems to be that the candidate solutions to a cell and the restrictions are duals) function B = SolveSudoku(B,Groups) % SOLVESUDOKU <b>Sudoku Solver</b> % % B ...", "dateLastCrawled": "2021-11-08T11:21:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Object Oriented Sudoku Solver in Python</b> - <b>Code Review Stack Exchange</b>", "url": "https://codereview.stackexchange.com/questions/204187/object-oriented-sudoku-solver-in-python", "isFamilyFriendly": true, "displayUrl": "https://codereview.stackexchange.com/questions/204187", "snippet": "I am also trying to learn unit testing. I <b>thought</b> it is a good idea to ask for suggestions before I start with GUI. I would appreciate any help. There are several classes: Cell - one cell of <b>sudoku</b> board. Region - holds several cells (normally 9) that should have unique values. It <b>can</b> be row, column or rectangle.", "dateLastCrawled": "2022-01-27T19:17:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Coming Back to Old Problems: How I Finally Wrote a <b>Sudoku</b> Solving ...", "url": "https://dev.to/aspittel/how-i-finally-wrote-a-sudoku-solver-177g", "isFamilyFriendly": true, "displayUrl": "https://dev.to/aspittel/how-i-finally-wrote-a-<b>sudoku</b>-solver-177g", "snippet": "In case you haven&#39;t played <b>Sudoku</b> puzzles before, they are number puzzles in which each row, column, and 3x3 square in the <b>puzzle</b> must have the numbers 1-9 represented exactly once. There are lots of approaches to solving these puzzles, many of which <b>can</b> be duplicated by a computer instead of a person.", "dateLastCrawled": "2022-02-01T02:24:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "OpenCV - How to extract a (<b>Sudoku</b>)grid from an Image : learnpython", "url": "https://www.reddit.com/r/learnpython/comments/cb2dyh/opencv_how_to_extract_a_sudokugrid_from_an_image/", "isFamilyFriendly": true, "displayUrl": "https://<b>www.reddit.com</b>/r/learnpython/comments/cb2dyh/opencv_how_to_extract_a_<b>sudoku</b>...", "snippet": "Once you have a 2d array or whatever of the values, you <b>can</b> just do normal <b>sudoku</b> solver things. But to get to the 2d array of values...you need to know what indices to put each number you detect in that array. You need to know which box they were in, so you need to know where they are at relative to the board, so you need to know where the board is. It is true that you don&#39;t need the 9x9 grid, but you do need the exterior box.", "dateLastCrawled": "2022-01-05T00:08:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Puzzle Resources</b> - Geocacher&#39;s Compass", "url": "https://www.geocacherscompass.com/puzzle-resources/", "isFamilyFriendly": true, "displayUrl": "https://www.geocacherscompass.com/<b>puzzle-resources</b>", "snippet": "SudokuWiki \u2013 <b>Sudoku</b>, Jigsaw, Windoku solvers and more! ROT13 \u2013 Encoder/Decoder; Iterative Anagram Solver \u2013 Decode multi-word anagrams word by word; dCode \u2013 A HUGE source of solvers for your <b>puzzle</b> needs. Searchable ; Geocaching Toolbox \u2013 Solvers for text, coordinates, and encrypted puzzles; HangingHyena \u2013 Word game solvers, cryptography tools, Jumble solver and a guide to basic cryptography; Guballa \u2013 Online cryptogram solver; Robert Eisele \u2013 You <b>can</b> never have too many ...", "dateLastCrawled": "2022-02-02T11:06:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "contractualRules": [{"_type": "ContractualRules/LicenseAttribution", "targetPropertyName": "snippet", "targetPropertyIndex": 0, "mustBeCloseToContent": true, "license": {"name": "CC-BY-SA", "url": "http://creativecommons.org/licenses/by-sa/3.0/"}, "licenseNotice": "Text under CC-BY-SA license"}], "name": "<b>Mathematics of Sudoku</b> - <b>Wikipedia</b>", "url": "https://en.wikipedia.org/wiki/Mathematics_of_Sudoku", "isFamilyFriendly": true, "displayUrl": "https://<b>en.wikipedia.org</b>/wiki/<b>Mathematics_of_Sudoku</b>", "snippet": "<b>Sudoku</b> puzzles <b>can</b> be studied mathematically to answer questions such as &quot;How many filled <b>Sudoku</b> grids are there?&quot;, &quot;What is the minimal number of clues in a valid <b>puzzle</b>?&quot; and &quot;In what ways <b>can</b> <b>Sudoku</b> grids be symmetric?&quot; through the use of combinatorics and group theory.. The main results are that for the classical <b>Sudoku</b> the number of filled grids is 6,670,903,752,021,072,936,960 (6.67 \u00d7 10 21), which reduces to 5,472,730,538 essentially different groups under the validity preserving ...", "dateLastCrawled": "2022-01-29T20:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "contractualRules": [{"_type": "ContractualRules/LicenseAttribution", "targetPropertyName": "snippet", "targetPropertyIndex": 1, "mustBeCloseToContent": true, "license": {"name": "CC-BY-SA", "url": "http://creativecommons.org/licenses/by-sa/3.0/"}, "licenseNotice": "Text under CC-BY-SA license"}], "name": "<b>Sudoku solving algorithms</b> - <b>Wikipedia</b>", "url": "https://en.wikipedia.org/wiki/Sudoku_solving_algorithms", "isFamilyFriendly": true, "displayUrl": "https://<b>en.wikipedia.org</b>/wiki/<b>Sudoku_solving_algorithms</b>", "snippet": "<b>Sudoku</b> <b>can</b> be solved using stochastic (random-based) algorithms. An example of this method is to: Randomly assign numbers to the blank cells in the grid. Calculate the number of errors. &quot;Shuffle&quot; the inserted numbers until the number of mistakes is reduced to zero. A solution to the <b>puzzle</b> is then found. Approaches for shuffling the numbers include simulated annealing, genetic algorithm and tabu search. Stochastic-based algorithms are known to be fast, though perhaps not as fast as deductive ...", "dateLastCrawled": "2022-02-02T18:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>javascript</b> - <b>Sudoku</b> solver in JS - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/42736648/sudoku-solver-in-js", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/42736648", "snippet": "I&#39;m trying to write an algorithm that <b>can</b> solve <b>sudoku</b>. For now, my code works till supplyGrid is out of numbers. When it happens it should go back and try another number, right? To be honest I hav...", "dateLastCrawled": "2022-01-27T23:55:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "python - How <b>to detect Sudoku grid board in OpenCV</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/57636399/how-to-detect-sudoku-grid-board-in-opencv", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/57636399", "snippet": "I&#39;m working on a personal project using opencv in python. Want to detect a <b>sudoku</b> grid. So far I have created this: Then tried to select a big blob. Result may be similar to this: import cv2 import numpy as np def find_biggest_blob (outerBox): max = -1 maxPt = (0, 0) h, w = outerBox.shape [:2] mask = np.zeros ( (h + 2, w + 2), np.uint8) for y ...", "dateLastCrawled": "2022-01-20T18:08:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Generating (and Solving!) Sudokus in</b> CSS | <b>CSS-Tricks</b>", "url": "https://css-tricks.com/generating-and-solving-sudokus-in-css/", "isFamilyFriendly": true, "displayUrl": "https://<b>css-tricks.com</b>/<b>generating-and-solving-sudokus-in</b>-css", "snippet": "Doctor Google tells us that even with only 16 squares, there are four billion possible combinations of four numbers. But a program that brute forces all these combinations and outputs the ones that are valid according to the rules of <b>Sudoku</b> shows that there are only 288 valid solutions in 4\u00d74 <b>Sudoku</b>, which is a big difference from the number of possible valid solutions in a 9\u00d79 grid.With only 288 possible solutions, this is where Sass <b>can</b> really come into its own.", "dateLastCrawled": "2022-01-29T08:57:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "A novel hybrid genetic algorithm for solving <b>Sudoku</b> puzzles", "url": "https://www.researchgate.net/publication/257697497_A_novel_hybrid_genetic_algorithm_for_solving_Sudoku_puzzles", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/257697497_A_novel_hybrid_genetic_algorithm...", "snippet": "<b>Sudoku</b> is a number <b>puzzle</b> that has recently become a worldwide phenomenon. <b>Sudoku</b> <b>can</b> be regarded as a constraint satisfaction problem. When solved with genetic algorithms it <b>can</b> be handled as a ...", "dateLastCrawled": "2021-12-15T23:17:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "OpenCV - How to extract a (<b>Sudoku</b>)grid from an Image : learnpython", "url": "https://www.reddit.com/r/learnpython/comments/cb2dyh/opencv_how_to_extract_a_sudokugrid_from_an_image/", "isFamilyFriendly": true, "displayUrl": "https://<b>www.reddit.com</b>/r/learnpython/comments/cb2dyh/opencv_how_to_extract_a_<b>sudoku</b>...", "snippet": "Once you have a 2d array or whatever of the values, you <b>can</b> just do normal <b>sudoku</b> solver things. But to get to the 2d array of values...you need to know what indices to put each number you detect in that array. You need to know which box they were in, so you need to know where they are at relative to the board, so you need to know where the board is. It is true that you don&#39;t need the 9x9 grid, but you do need the exterior box.", "dateLastCrawled": "2022-01-05T00:08:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "2.2. More Complex Models \u2014 The MiniZinc Handbook 2.5.5", "url": "https://www.minizinc.org/doc-2.5.5/en/modelling2.html", "isFamilyFriendly": true, "displayUrl": "https://www.minizinc.org/doc-2.5.5/en/modelling2.html", "snippet": "They <b>can</b> <b>be compared</b>, they are ordered, by the order they appear in the enumerated type definition, they <b>can</b> be iterated over, they <b>can</b> appear as indices of arrays, in fact they <b>can</b> appear anywhere an integer <b>can</b> appear. In the example data file we have initialized the array using a list of integers. Products = {BananaCake, ChocolateCake}; profit = [400,450]; meaning the profit for a banana cake is 400, while for a chocolate cake it is 450. Internally BananaCake will be treated like the ...", "dateLastCrawled": "2022-02-03T16:45:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Artificial Intelligence Nanodegree Term 1</b> \u2013 Luke Schoen \u2013 Web Developer ...", "url": "https://ltfschoen.github.io/Artificial-Intelligence-Term1/", "isFamilyFriendly": true, "displayUrl": "https://ltfschoen.github.io/Artificial-Intelligence-Term1", "snippet": "Given a <b>Sudoku</b> <b>puzzle</b> partially completed with some boxes with possibilities for their values. If there are two boxes in the same row or column that both contain the same two values i.e. 23 and 23, then we know for sure that 2 and 3 <b>can</b> only occur in those boes in that unit (column 3), so: Remove 2 and 3 from possible values in that column; Diagonal <b>Sudoku</b> (by modifying the algorithm) Project 1: Added Python Debugging functionality from main.py file (see my Gists on GitHub) Added assertions ...", "dateLastCrawled": "2022-02-01T12:34:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "Using <b>Matrix</b> <b>Puzzles to Assess Student Understanding in Economics</b> ...", "url": "https://www.sciencedirect.com/science/article/abs/pii/S1477388020300207", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/abs/pii/S1477388020300207", "snippet": "The features of each <b>puzzle</b> are described to demonstrate the great flexibility of the <b>matrix</b> <b>puzzle</b> for assessing student understanding of a variety of economic concepts and relationships. The summary statistics from an administration of each <b>puzzle</b> in a course illustrate how economics instructors <b>can</b> use results from a <b>matrix</b> <b>puzzle</b> to provide individual or classroom feedback to students that will improve economic understanding. Further insights are offered on how <b>matrix</b> puzzles <b>can</b> be ...", "dateLastCrawled": "2022-01-25T13:52:00.0000000Z", "language": "en", "isNavigational": false}]], "gen_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "A Gentle Introduction to <b>Matrix</b> Factorization for <b>Machine</b> <b>Learning</b>", "url": "https://machinelearningmastery.com/introduction-to-matrix-decompositions-for-machine-learning/", "isFamilyFriendly": true, "displayUrl": "https://<b>machinelearning</b>mastery.com/introduction-to-<b>matrix</b>-decompositions-for-<b>machine</b>...", "snippet": "A common <b>analogy</b> for <b>matrix</b> decomposition is the factoring of numbers, such as the factoring of 10 into 2 x 5. For this reason, <b>matrix</b> decomposition is also called <b>matrix</b> factorization. Like factoring real values, there are many ways to decompose a <b>matrix</b>, hence there are a range of different <b>matrix</b> decomposition techniques. Two simple and widely used <b>matrix</b> decomposition methods are the LU <b>matrix</b> decomposition and the QR <b>matrix</b> decomposition. Next, we will take a closer look at each of ...", "dateLastCrawled": "2022-02-03T04:31:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "An evaluation of scanpath-comparison and <b>machine</b>-<b>learning</b> ...", "url": "https://link.springer.com/article/10.3758/s13428-016-0788-z", "isFamilyFriendly": true, "displayUrl": "https://link.springer.com/article/10.3758/s13428-016-0788-z", "snippet": "In recent years, eyetracking has begun to be used to study the dynamics of <b>analogy</b> making. Numerous scanpath-comparison algorithms and <b>machine</b>-<b>learning</b> techniques are available that can be applied to the raw eyetracking data. We show how scanpath-comparison algorithms, combined with multidimensional scaling and a classification algorithm, can be used to resolve an outstanding question in <b>analogy</b> making\u2014namely, whether or not children\u2019s and adults\u2019 strategies in solving <b>analogy</b> problems ...", "dateLastCrawled": "2021-11-05T03:24:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "(PDF) <b>Eigenvalue analogy for confidence estimation</b> in <b>item</b>-based ...", "url": "https://www.researchgate.net/publication/327496103_Eigenvalue_analogy_for_confidence_estimation_in_item-based_recommender_systems", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/327496103_Eigenvalue_<b>analogy</b>_for_confidence...", "snippet": "Deep <b>learning</b> techniques have become the method of choice for researchers working on algorithmic aspects of recommender systems. With the strongly increased interest in <b>machine</b> <b>learning</b> in general ...", "dateLastCrawled": "2022-01-16T11:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Automatic <b>Item</b> Generation of Figural <b>Analogy</b> Problems: A Review and Outlook", "url": "https://advancesincognitivesystems.github.io/acs2021/data/slides/paper02-slides-yang.pdf", "isFamilyFriendly": true, "displayUrl": "https://advancesincognitivesystems.github.io/acs2021/data/slides/paper02-slides-yang.pdf", "snippet": "\u2022Automatic <b>Item</b> Generation (AIG) 2\u00d72 Progressive <b>Matrix</b> (Kunda et al., 2013) 3\u00d73 Progressive <b>Matrix</b> (Kunda et al., 2013) 2+2 Geometric <b>Analogy</b> (Lovett et al., 2009) 4\u00d71 Figural Series (Sekh et al., 2020) Examples. Motivation of our work <b>Item</b> A \u2026 <b>Item</b> A1 <b>Item</b> A2 <b>Item</b> An \u2026 Human Intelligence Tests Training and Testing Data-Driven AI Models AIG. AIG of FAP For Human Intelligence Tests Existing test (normed) Cognitive Processing Model Stimulus Features Psychometric Model Generated Items ...", "dateLastCrawled": "2021-12-18T22:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Titanic \u2014 Predicting Survival rates using <b>Machine</b> <b>Learning</b> | by Punith ...", "url": "https://medium.com/codex/titanic-predicting-survival-rates-using-machine-learning-3e83c56af29f", "isFamilyFriendly": true, "displayUrl": "https://medium.com/codex/titanic-predicting-survival-rates-using-<b>machine</b>-<b>learning</b>-3e83...", "snippet": "<b>Machine</b> <b>learning</b> algorithms can then decide in a better way on how those labels must be operated. It is an important preprocessing step for the structured dataset in supervised <b>learning</b>.", "dateLastCrawled": "2022-02-03T01:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "GitHub - sinthushan/MovieRecommendation: Testing the accuracy of ...", "url": "https://github.com/sinthushan/MovieRecommendation", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/sinthushan/MovieRecommendation", "snippet": "Recommending a Movie Recommender System using different techniques like correlation <b>matrix</b>, <b>machine</b> <b>learning</b> SVD (Singular Value Decomposition) and ALS (Alternating Least Squre) method. Group 3 Project-3 (UofT FinTech Bootcamp) Title: Recommender System using three different techniques and their comparison Group members: Amar M, Nitesh Jain, Sinthushan Sooriyakuamar, Veldurai Lakshmanan . 1. Introduction of the Project. Most internet products we use today are powered by recommender systems ...", "dateLastCrawled": "2021-08-26T19:50:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Machine Learning and its Applications</b> - SlideShare", "url": "https://www.slideshare.net/ganeshn9/machine-learning-and-its-applications-138639251", "isFamilyFriendly": true, "displayUrl": "https://www.slideshare.net/ganeshn9/<b>machine-learning-and-its-applications</b>-138639251", "snippet": "<b>Machine</b> <b>Learning</b> Definition - Recap \u2022 \u201c<b>Machine</b> <b>learning</b> is the science of getting computers to act without being explicitly programmed.\u201d \u2014Stanford University \u2022 It\u2019s a subset of AI which uses statistical methods to enable machines to improve with experience \u2022 It enables a computer to act and take data driven decisions to carry out ...", "dateLastCrawled": "2022-01-30T19:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Matrix Factorization</b> Intuition for Movie Recommender System | by Himang ...", "url": "https://medium.com/skyshidigital/matrix-factorization-intuition-for-movie-recommender-system-f25804836327", "isFamilyFriendly": true, "displayUrl": "https://medium.com/skyshidigital/<b>matrix-factorization</b>-intuition-for-movie-recommender...", "snippet": "If you are familiar with <b>machine</b> <b>learning</b> you must have at least heard the term feature. Feature is basically a set of number that describe the characteristic of <b>item</b> in our data and like I said ...", "dateLastCrawled": "2021-12-12T13:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>machine</b> <b>learning</b> - Meaning of <b>latent</b> features? - Cross Validated", "url": "https://stats.stackexchange.com/questions/108059/meaning-of-latent-features", "isFamilyFriendly": true, "displayUrl": "https://stats.stackexchange.com/questions/108059", "snippet": "$\\begingroup$ @JackTwain the correct PCA <b>analogy</b> is that the <b>latent</b> features are the eigenvectors. The principal components are the weights assigned to each observation for the principal eigenvectors. In other <b>matrix</b> factorisation models the <b>latent</b> features play the role of the eigenvectors. This may sound pedantic, but the mistake creates no end of confusion for people. $\\endgroup$ \u2013 conjectures. Mar 6 &#39;17 at 18:29. Add a comment | 4 $\\begingroup$ In the context of Factorization Method ...", "dateLastCrawled": "2022-02-02T15:28:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Ultimate Tutorial On Recommender Systems</b> From Scratch (With Case Study ...", "url": "https://datasciencebeginners.com/2018/10/31/ultimate-guide-on-how-to-build-recommender-systems-with-case-study/", "isFamilyFriendly": true, "displayUrl": "https://datasciencebeginners.com/2018/10/31/ultimate-guide-on-how-to-build-recommender...", "snippet": "<b>Item</b>-based systems are also called <b>item</b>-to-<b>item</b> systems. They generate recommendations based on ratings given by the user to similar items. Think of this as the recommendations given to you by e-commerce websites stating people who purchased this also purchased A, B, and C items. For example, User X and Y have given a high rating to a mobile phone and the charger from brand XX. Then you purchased the same Mobile phone and gave a high score to the phone. Now based upon the similarity of ...", "dateLastCrawled": "2022-01-29T04:18:00.0000000Z", "language": "en", "isNavigational": false}], [], [], [], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "A gentle introduction to <b>deep learning</b> for graphs - ScienceDirect", "url": "https://www.sciencedirect.com/science/article/pii/S0893608020302197", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/pii/S0893608020302197", "snippet": "Many <b>machine</b> <b>learning</b> problems can be tackled with these techniques, for example Laplacian smoothing (Sadhanala, ... For example, the typical user\u2013<b>item matrix can be thought of as</b> a bipartite graph, while user\u2013user and item\u2013item matrices can be represented as standard undirected graphs. Recommending an item to a user is a \u201cmatrix completion\u201d task, i.e., <b>learning</b> to fill the unknown entries of the user\u2013item matrix, which can be equivalently formulated as a link prediction task ...", "dateLastCrawled": "2022-02-02T18:43:00.0000000Z", "language": "en", "isNavigational": false}], []], "all_bing_queries": ["+(item matrix)  is like +(Sudoku puzzle)", "+(item matrix) is similar to +(Sudoku puzzle)", "+(item matrix) can be thought of as +(Sudoku puzzle)", "+(item matrix) can be compared to +(Sudoku puzzle)", "machine learning +(item matrix AND analogy)", "machine learning +(\"item matrix is like\")", "machine learning +(\"item matrix is similar\")", "machine learning +(\"just as item matrix\")", "machine learning +(\"item matrix can be thought of as\")", "machine learning +(\"item matrix can be compared to\")"]}