{"src_spec_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "GPT-3 \u2014 A revolution in AI. \u201cIf the Computer was <b>like</b> <b>a bicycle</b> for ...", "url": "https://medium.com/analytics-vidhya/gpt-3-a-revolution-in-ai-103546558d76", "isFamilyFriendly": true, "displayUrl": "https://medium.com/analytics-vidhya/gpt-3-a-revolution-in-ai-103546558d76", "snippet": "GPT-3 is a 3rd generation language prediction <b>model</b> which is part of the GPT-n series. It stands for Generative <b>Pre-trained</b> Transformer-3. It was developed by OpenAI, the biggest AI research lab ...", "dateLastCrawled": "2022-01-12T14:29:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Use a Pre-trained OpenVINO model</b> \u2014 DepthAI documentation | Luxonis", "url": "https://docs.luxonis.com/en/latest/pages/tutorials/pretrained_openvino.html", "isFamilyFriendly": true, "displayUrl": "https://docs.luxonis.com/en/latest/pages/tutorials/<b>pretrained</b>_openvino.html", "snippet": "<b>Use a Pre-trained OpenVINO model</b> ... Vehicle: airplane, <b>bicycle</b>, boat, bus, car, motorbike, train. Indoor: bottle, chair, dining table, potted plant, sofa, TV/monitor. I ran this on my laptop with an OAK-D sitting on my desk pointing upwards randomly - and it makes out the corner of my laptop screen and correctly identifies it as tvmonitor: Run <b>model</b>\u00b6 Now that we\u2019ve got this verified, let\u2019s move on to trying out other models, starting with face-detection-retail-0004. To use this <b>model</b> ...", "dateLastCrawled": "2022-01-30T04:04:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Prepare dataset from public and custom sources to retrain a less class ...", "url": "https://forums.developer.nvidia.com/t/prepare-dataset-from-public-and-custom-sources-to-retrain-a-less-class-object-detection-model/196328", "isFamilyFriendly": true, "displayUrl": "https://forums.developer.nvidia.com/t/prepare-dataset-from-public-and-custom-sources...", "snippet": "My purpose is to retrain an object detection <b>model</b> that can detect classes: <b>bicycle</b> motocycle people custom doorsign I was told to do it on a <b>pre-trained</b> unpruned NGC <b>model</b>, <b>like</b> trafficcamnet. The question is, I can prepare the dataset only for custom doorsign, the other 3 common classes will be from public dataset <b>like</b> PASCAL VOC or MS COCO ...", "dateLastCrawled": "2022-01-02T08:48:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Deploying a pretrained GPT-2 model on</b> AWS", "url": "https://francescopochetti.com/deploying-a-pretrained-gpt-2-model-on-aws/", "isFamilyFriendly": true, "displayUrl": "https://francescopochetti.com/<b>deploying-a-pretrained-gpt-2-model-on</b>-aws", "snippet": "This post attempts to summarize my recent detour into NLP, describing how I exposed a Huggingface <b>pre-trained</b> Language <b>Model</b> (LM) on an AWS-based web application. First, let\u2019s get a sneak peek into how the service I built looks <b>like</b>. You can check it out on VisualNeurons.com or find below a quick demo. As you can see it all boils down to ...", "dateLastCrawled": "2021-12-07T05:47:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "ML | <b>Introduction to Transfer Learning - GeeksforGeeks</b>", "url": "https://www.geeksforgeeks.org/ml-introduction-to-transfer-learning/", "isFamilyFriendly": true, "displayUrl": "https://www.geeksforgeeks.org/ml-introduction-to-transfer-learning", "snippet": "When we use transfer learning in solving a problem, we select a <b>pre-trained</b> <b>model</b> as our base <b>model</b>. Now, there are two possible approaches to use knowledge from the <b>pre-trained</b> <b>model</b>. First way is to freeze a few layers of <b>pre-trained</b> <b>model</b> and train other layers on our new dataset for the new task. Second way is to make a new <b>model</b>, but also take out some features from the layers in the <b>pre-trained</b> <b>model</b> and use them in a newly created <b>model</b>. In both cases, we take out some of the learned ...", "dateLastCrawled": "2022-01-29T23:02:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Pre trained model and Inference</b> \u00b7 Issue #10 \u00b7 QingyongHu/RandLA-Net ...", "url": "https://github.com/QingyongHu/RandLA-Net/issues/10", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/QingyongHu/RandLA-Net/issues/10", "snippet": "@morpheus1820 @Yang7879 @QingyongHu Hi thanks for opensourcing the source code , i have following queries. Can you share the <b>pre-trained</b> <b>model</b> for semantic kitti dataset i want to check the output on the custom dataset 2.how to obtain the list of classes predicted from the <b>model</b> from the inference code", "dateLastCrawled": "2022-02-02T22:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Transfer Learning</b> in 2022: <b>What it is &amp; How it works</b>", "url": "https://research.aimultiple.com/transfer-learning/", "isFamilyFriendly": true, "displayUrl": "https://research.aimultiple.com/<b>transfer-learning</b>", "snippet": "If you learn how to ride <b>a bicycle</b>, you can learn how to drive other two-wheeled vehicles more easily. Similarly, a <b>model</b> trained for autonomous driving of cars can be used for autonomous driving of trucks. Wikipedia defines <b>transfer learning</b> as follows: <b>Transfer learning</b> is a research problem in machine learning that focuses on storing knowledge gained while solving one problem and applying it to a different but related problem. This technique is applicable to many machine learning models ...", "dateLastCrawled": "2022-02-02T20:40:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Object Detection using RetinaNet with PyTorch</b> and Deep ... - DebuggerCafe", "url": "https://debuggercafe.com/object-detection-using-retinanet-with-pytorch-and-deep-learning/", "isFamilyFriendly": true, "displayUrl": "https://debuggercafe.com/<b>object-detection-using-retinanet-with-pytorch</b>-and-deep-learning", "snippet": "Basically, we will use a PyTorch <b>pre-trained</b> <b>model</b> that has been on the COCO dataset. We will use the RetinaNet deep learning <b>model</b> to carry out inference in images and videos and analyze the results as well. Now, you may be asking, what kind of results are we expecting to get after going through this tutorial? To get a brief answer to that, let\u2019s take a look at an image. Figure 1. <b>Object Detection using RetinaNet with PyTorch</b> and Deep Learning. Example of what you can expect to achieve ...", "dateLastCrawled": "2022-01-29T00:24:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Best <b>pre trained</b> <b>model</b> for object detection \u2014 best <b>pre-trained</b> models ...", "url": "https://nasta-boden.com/exploring-opencvs-deep-learning-object-detection-library-e51fe7c82246osv-18621kobkzc", "isFamilyFriendly": true, "displayUrl": "https://nasta-boden.com/exploring-opencvs-deep-learning-object-detection-library-e51fe...", "snippet": "Best <b>pre trained</b> <b>model</b> for object detection <b>PreTrained</b> Deep Learning Models Computer Visio . Mask R-CNN is a flexible framework developed for the purpose of object instance segmentation. This <b>pretrained</b> <b>model</b> is an implementation of this Mask R-CNN technique on Python and Keras. It generates bounding boxes and segmentation masks for each instance of an object in a given image (<b>like</b> the one shown above) There are many <b>pre-trained</b> object detection models available in the <b>model</b> zoo. In order to ...", "dateLastCrawled": "2022-01-14T02:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "Question about fine tuning a fcn_resnet101 <b>model</b> with 2 classes ...", "url": "https://discuss.pytorch.org/t/question-about-fine-tuning-a-fcn-resnet101-model-with-2-classes/66330", "isFamilyFriendly": true, "displayUrl": "https://discuss.pytorch.org/t/question-about-fine-tuning-a-fcn-resnet101-<b>model</b>-with-2...", "snippet": "In some of those unlabeled images, I have objects in the background <b>like</b> a \u2018chair\u2019 or \u2018bird\u2019 that are classes in the original <b>pre-trained</b> <b>model</b>, but in my masked images I mark them as background because I don\u2019t care about those classes. Would doing this (masking objects that belonged to a different class in the original <b>pre-trained</b> <b>model</b> as background) confuse the <b>model</b> and cause a loss in accuracy?", "dateLastCrawled": "2022-01-09T09:05:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Deep view on <b>transfer learning with iamge classification pytorch</b> ...", "url": "https://purnasai.github.io/Deep-view-on-Transfer-learning-with-Iamge-classification-Pytorch/", "isFamilyFriendly": true, "displayUrl": "https://purnasai.github.io/Deep-view-on-<b>Transfer-learning-with-Iamge-classification</b>-Py...", "snippet": "<b>Pre-trained</b> <b>model</b>: <b>Pre-trained</b> models(VGG, ... might be dog breed classification. A commonly used technique in deep learning is transfer learning, which adapts a <b>model</b> trained for a <b>similar</b> task to the task at hand. Compared with training a new <b>model</b> from ground-up, transfer learning requires substantially less data and resources. Example: Might be funny , but yeah! if you learn to <b>bicycle</b> then its easy to ride a bike with the knowledge or learning of features like balancing, handling ...", "dateLastCrawled": "2022-01-21T04:10:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>The art of transfer learning</b> (Part-I) | by Harish Dasari | Analytics ...", "url": "https://medium.com/analytics-vidhya/the-art-of-transfer-learning-e6aea8fc0b8c", "isFamilyFriendly": true, "displayUrl": "https://medium.com/analytics-vidhya/<b>the-art-of-transfer-learning</b>-e6aea8fc0b8c", "snippet": "First, we will gather enough data on the <b>bicycle</b> and motorcycle label it and then training the <b>model</b> on the dataset. A <b>similar</b> process is followed for the second task, only this time, collecting ...", "dateLastCrawled": "2021-10-23T17:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "ML | <b>Introduction to Transfer Learning - GeeksforGeeks</b>", "url": "https://www.geeksforgeeks.org/ml-introduction-to-transfer-learning/", "isFamilyFriendly": true, "displayUrl": "https://www.geeksforgeeks.org/ml-introduction-to-transfer-learning", "snippet": "Target dataset is large and <b>similar</b> to base training dataset : In such case when the dataset is large and it can hold <b>pre-trained</b> <b>model</b> there will be no chance of overfitting. Here, also the last full-connected layer is removed, and a new fully-connected layer is added with the proper number of classes. Now, the entire <b>model</b> is trained on a new dataset. This makes sure to tune <b>model</b> on new large dataset keeping the <b>model</b> architecture same.", "dateLastCrawled": "2022-01-29T23:02:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Transfer Learning</b> in 2022: <b>What it is &amp; How it works</b>", "url": "https://research.aimultiple.com/transfer-learning/", "isFamilyFriendly": true, "displayUrl": "https://research.aimultiple.com/<b>transfer-learning</b>", "snippet": "There are 2 <b>similar</b> approaches: Using a <b>pre-trained</b> <b>model</b>. Here is how <b>transfer learning</b> works: Select source <b>model</b>: A <b>pre-trained</b> source <b>model</b> is chosen for transferring its knowledge to the target <b>model</b>. Adapting the source <b>model</b> to create the target <b>model</b>: Some features of the source <b>model</b> can differ from the training data of the target ...", "dateLastCrawled": "2022-02-02T20:40:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Best <b>pre trained</b> <b>model</b> for object detection \u2014 best <b>pre-trained</b> models ...", "url": "https://nasta-boden.com/exploring-opencvs-deep-learning-object-detection-library-e51fe7c82246osv-18621kobkzc", "isFamilyFriendly": true, "displayUrl": "https://nasta-boden.com/exploring-opencvs-deep-learning-object-detection-library-e51fe...", "snippet": "A <b>pre-trained</b> <b>model</b> is an already created deep learning <b>model</b> that accomplishes tasks <b>similar</b> to the one we want to perform. We do not have to build a <b>model</b> from scratch as it uses a trained <b>model</b> based on our data. A <b>pre-trained</b> <b>model</b> may not 100% comply with all of our tasks, but it offers significant time and. Before the renaissance of neural networks, the best detection methods combined robust low-level features (SIFT, HOG etc) and compositional <b>model</b> that is elastic to object ...", "dateLastCrawled": "2022-01-14T02:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "The Brains Behind <b>AI: How Psychology Influenced Transfer Learning</b>", "url": "https://analyticsindiamag.com/the-brains-behind-ai-how-psychology-influenced-transfer-learning/", "isFamilyFriendly": true, "displayUrl": "https://analyticsindiamag.com/the-brains-behind-<b>ai-how-psychology-influenced-transfer</b>...", "snippet": "Use A <b>Pre-Trained</b> <b>Model</b>: The rise of transfer learning has caused the availability of <b>pre-trained</b> models to grow. These models can be picked for a general task such as image processing, NLP, and more, with training for the specific use-case creating accurate weights. Then, this <b>model</b> can be trained on the problem dataset, which then results in the solution being found. The problem dataset can also be sparse, which is why the last few layers of the <b>pre-trained</b> <b>model</b> must be removed to prevent ...", "dateLastCrawled": "2022-01-18T12:04:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "OpenCV\u2019s DNN Module and Deep Learning (<b>a definitive guide</b>)", "url": "https://learnopencv.com/deep-learning-with-opencvs-dnn-module-a-definitive-guide/", "isFamilyFriendly": true, "displayUrl": "https://learnopencv.com/deep-learning-with-opencvs-dnn-module-<b>a-definitive-guide</b>", "snippet": "To use a <b>pre-trained</b> Caffe <b>model</b> with OpenCV DNN, we need two things. One is the <b>model</b>.caffemodel file that contains the <b>pre-trained</b> weights. The other one is the <b>model</b> architecture file which has a .prototxt extension. It is like a plain text file with a JSON like structure containing all the neural network layers\u2019 definitions. To get a clear idea of how this file looks, please visit", "dateLastCrawled": "2022-02-02T15:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "GitHub - rmunro/<b>bicycle</b>_detection: Practical example from Human-in-the ...", "url": "https://github.com/rmunro/bicycle_detection", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/rmunro/<b>bicycle</b>_detection", "snippet": "Bounding-box annotation (See 11.5.2): For images containing bicycles if the <b>model</b> cannot predict that <b>bicycle</b> correctly, the annotator can highlight the <b>bicycle</b>. That image can be used as a cropped training data example to help guide the <b>model</b> on <b>similar</b> examples. Annotation Quality Control", "dateLastCrawled": "2022-01-26T18:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "gensim: <b>Word2Vec</b> <b>Model</b>", "url": "https://radimrehurek.com/gensim_3.8.3/auto_examples/tutorials/run_word2vec.html", "isFamilyFriendly": true, "displayUrl": "https://radimrehurek.com/gensim_3.8.3/auto_examples/tutorials/run_<b>word2vec</b>.html", "snippet": "Continuous-bag-of-words <b>Word2vec</b> is very <b>similar</b> to the skip-gram <b>model</b>. It is also a 1-hidden-layer neural network. The synthetic training task now uses the average of multiple input context words, rather than a single word as in skip-gram, to predict the center word. Again, the projection weights that turn one-hot words into averageable vectors, of the same width as the hidden layer, are interpreted as the word embeddings. <b>Word2Vec</b> Demo\u00b6 To see what <b>Word2Vec</b> can do, let\u2019s download a pre ...", "dateLastCrawled": "2022-01-29T21:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Word2Vec</b> <b>Model</b> \u2014 gensim", "url": "https://radimrehurek.com/gensim_4.0.0/auto_examples/tutorials/run_word2vec.html", "isFamilyFriendly": true, "displayUrl": "https://radimrehurek.com/gensim_4.0.0/auto_examples/tutorials/run_<b>word2vec</b>.html", "snippet": "Continuous-bag-of-words <b>Word2vec</b> is very <b>similar</b> to the skip-gram <b>model</b>. It is also a 1-hidden-layer neural network. The synthetic training task now uses the average of multiple input context words, rather than a single word as in skip-gram, to predict the center word. Again, the projection weights that turn one-hot words into averageable vectors, of the same width as the hidden layer, are interpreted as the word embeddings. <b>Word2Vec</b> Demo\u00b6 To see what <b>Word2Vec</b> can do, let\u2019s download a pre ...", "dateLastCrawled": "2022-02-03T11:24:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "GPT-3 \u2014 A revolution in AI. \u201cIf the Computer was like a <b>bicycle</b> for ...", "url": "https://medium.com/analytics-vidhya/gpt-3-a-revolution-in-ai-103546558d76", "isFamilyFriendly": true, "displayUrl": "https://medium.com/analytics-vidhya/gpt-3-a-revolution-in-ai-103546558d76", "snippet": "GPT-3 is a 3rd generation language prediction <b>model</b> which is part of the GPT-n series. It stands for Generative <b>Pre-trained</b> Transformer-3. It was developed by OpenAI, the biggest AI research lab ...", "dateLastCrawled": "2022-01-12T14:29:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Deploying a pretrained GPT-2 model on</b> AWS", "url": "https://francescopochetti.com/deploying-a-pretrained-gpt-2-model-on-aws/", "isFamilyFriendly": true, "displayUrl": "https://francescopochetti.com/<b>deploying-a-pretrained-gpt-2-model-on</b>-aws", "snippet": "Reading Time: 12 minutes Links to code: frontend side (HTML + JS). Lambda. Running inference with Huggingface. Introduction In the Deep Learning (DL) world, I have always preferred Computer Vision (CV) to the rest. I find working with images a lot more fulfilling than anything else as I <b>can</b> inspect what gets in and out of my models by\u2026 Read More \u00bb<b>Deploying a pretrained GPT-2 model on</b> AWS", "dateLastCrawled": "2021-12-07T05:47:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Pre trained model and Inference</b> \u00b7 Issue #10 \u00b7 QingyongHu/RandLA-Net ...", "url": "https://github.com/QingyongHu/RandLA-Net/issues/10", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/QingyongHu/RandLA-Net/issues/10", "snippet": "<b>Can</b> you share the <b>pre-trained</b> <b>model</b> for semantic kitti dataset i want to check the output on the custom dataset 2.how to obtain the list of classes predicted from the <b>model</b> from the inference code 3.<b>can</b> we get the location of the predicted objects or draw cuboids around them THanks in advance; The text was updated successfully, but these errors were encountered: Copy link Owner QingyongHu commented Mar 4, 2020. Hi, @abhigoku10, thx for your interest in our work! Please find the <b>pre-trained</b> ...", "dateLastCrawled": "2022-02-02T22:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>The art of transfer learning</b> (Part-I) | by Harish Dasari | Analytics ...", "url": "https://medium.com/analytics-vidhya/the-art-of-transfer-learning-e6aea8fc0b8c", "isFamilyFriendly": true, "displayUrl": "https://medium.com/analytics-vidhya/<b>the-art-of-transfer-learning</b>-e6aea8fc0b8c", "snippet": "VGG16 network architecture as a feature extractor. which is a standard VGG16 architecture or <b>can</b> be considered as a standard <b>pre-trained</b> <b>model</b> over the Imagenet dataset. The left side of the image ...", "dateLastCrawled": "2021-10-23T17:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "CIFAR 100: Transfer Learning using <b>EfficientNet</b> | Towards Data Science", "url": "https://towardsdatascience.com/cifar-100-transfer-learning-using-efficientnet-ed3ed7b89af2", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/cifar-100-transfer-learning-using-<b>efficientnet</b>-ed3ed7b89af2", "snippet": "As a state-of-the-art <b>model</b> is trained after spending such a huge amount of resources, researchers <b>thought</b> that the benefits of such investments should be reaped many times and thus aroused the concept of transfer learning. The best part of transfer learning is that we <b>can</b> either re-use the entire <b>model</b> or a certain part of it. Umm, intelligent! \ud83d\ude0e This way we don\u2019t have to train the whole <b>model</b>. In particular, transfer learning saves time and gives better performance. For instance ...", "dateLastCrawled": "2022-02-03T00:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "GitHub - jrderek/Deploying-Image-Classification-<b>model</b>-to-AWS-EC2-and-Django", "url": "https://github.com/jrderek/Deploying-Image-Classification-model-to-AWS-EC2-and-Django", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/jrderek/Deploying-Image-Classification-<b>model</b>-to-AWS-EC2-and-Django", "snippet": "Classification: We use <b>pre-trained</b> VGG <b>model</b> with Keras. Details <b>can</b> be found in this colab. The user loads and image, and gets a class representing the most dominant object class in the image, according to ImageNet dataset classes. cls. Semantic segmentaion: We use <b>pre-trained</b> FCN <b>model</b> from torchvision. Details <b>can</b> be found in this colab. The ...", "dateLastCrawled": "2022-02-02T17:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "Best <b>pre trained</b> <b>model</b> for object detection \u2014 best <b>pre-trained</b> models ...", "url": "https://nasta-boden.com/exploring-opencvs-deep-learning-object-detection-library-e51fe7c82246osv-18621kobkzc", "isFamilyFriendly": true, "displayUrl": "https://nasta-boden.com/exploring-opencvs-deep-learning-object-detection-library-e51fe...", "snippet": "Training the <b>model</b>, using the <b>pre-trained</b> weights as a starting point to help the <b>model</b> learn faster; Using fine-tune we <b>can</b> obtain a higher accuracy <b>model</b>, typically with much less effort, data, and training time. As a practical application, we fine-tuned ResNet on a dataset of camouflage vs. noncamouflage clothes images <b>Model</b> Training. Instead of training the <b>model</b> from scratch, we used a version of ResNet <b>pre-trained</b> on the ImageNet dataset. ImageNet is a dataset of over 15 million ...", "dateLastCrawled": "2022-01-14T02:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>YOLO object detection using deep learning OpenCV</b> | Real-time - ThinkInfi", "url": "https://thinkinfi.com/yolo-object-detection-using-python-opencv/", "isFamilyFriendly": true, "displayUrl": "https://thinkinfi.com/yolo-object-detection-using-python-opencv", "snippet": "Since YOLO object detection <b>model</b> is trained on COCO dataset (you <b>can</b> see in the image), we need to download name of the objects or names or the labels (for example: car, person etc.) which coco dataset is using.So you need to download coco.names file.. Note: There are total 80 object names in coco dataset. To wind up this section you need to download total three files for yolo object detection python code:. yolov3.weights: <b>Pre-trained</b> YOLO <b>model</b>; yolov3.cfg: Configuration/ setting file of ...", "dateLastCrawled": "2022-01-30T03:24:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Object Detection using PyTorch and SSD300</b> with VGG16 ... - DebuggerCafe", "url": "https://debuggercafe.com/object-detection-using-pytorch-and-ssd300-with-vgg16-backbone/", "isFamilyFriendly": true, "displayUrl": "https://debuggercafe.com/<b>object-detection-using-pytorch-and-ssd300-with-vgg16-backbone</b>", "snippet": "Therefore I <b>thought</b>, let\u2019s start a bit small. Let\u2019s use a <b>pre-trained</b> deep learning object detector that is open source and fully fine-tunable on custom dataset. But instead of training, let\u2019s first go through the <b>pre-trained</b> <b>model</b>\u2019s inference capabilities by detecting objects in images and videos. And that is exactly what we will be doing in this tutorial. What Will We be Learning in this Article? In this section, we will go in a bit detail of all the things that we will learn in ...", "dateLastCrawled": "2022-01-30T05:10:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Object Detection and Segmentation in Python</b> with Mask-RCNN", "url": "http://bradsliz.com/2017-11-06-object-segmentation/", "isFamilyFriendly": true, "displayUrl": "bradsliz.com/2017-11-06-object-segmentation", "snippet": "Since I was in need of a <b>pre-trained</b> object detection <b>model</b> for work, I decided to take it for a test drive, and check out its segmentation performance too. Installation. Installation was not exactly simple, but also not not too complicated. I started with the instructions on the GitHub page, but found I needed a bit more. I went through the steps generally as follows: clone the Mask_RCNN repository; download the <b>pre-trained</b> COCO weights (mask_rcnn_coco.h5) from the repository\u2019s releases ...", "dateLastCrawled": "2022-01-29T21:05:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "CIFAR 100: Transfer Learning using <b>EfficientNet</b> | Towards Data Science", "url": "https://towardsdatascience.com/cifar-100-transfer-learning-using-efficientnet-ed3ed7b89af2", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/cifar-100-transfer-learning-using-<b>efficientnet</b>-ed3ed7b89af2", "snippet": "In particular, transfer learning saves time and gives better performance. For instance, using a <b>pre-trained</b> <b>model</b> which <b>can</b> recognize cars to now recognize trucks. Let us now know a bit about the state-of-the-art <b>model</b> we will be using here. <b>EfficientNet</b>-B0: State-of-the-art <b>model</b>. <b>EfficientNet</b> is a family of CNN&#39;s built by Google. \ufe0fThese CNNs not only provide better accuracy but also improve the efficiency of the models by reducing the number of parameters as <b>compared</b> to the other state ...", "dateLastCrawled": "2022-02-03T00:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Vision-based Bicycle Detection and Tracking using</b> a Deformable Part ...", "url": "https://www.ri.cmu.edu/pub_files/2010/7/ChoRybskiZhang-ITSC2010.pdf", "isFamilyFriendly": true, "displayUrl": "https://www.ri.cmu.edu/pub_files/2010/7/ChoRybskiZhang-ITSC2010.pdf", "snippet": "PART-BASED <b>MODEL</b> <b>Bicycle</b> detection is challenging in that a <b>bicycle</b> presents dramatic appearance changes according to camera viewpoints and also has a intra-class variability (e.g., mountain bikes vs. racing cycles). One of the common solutions to tackle this problem is to establish part-based <b>model</b> for an object of interest. Rather than trying to capture a global pattern of an object with one template, part-based models focus on parts of an object and, in consequence, provide more \ufb02exible ...", "dateLastCrawled": "2022-02-02T23:18:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "ImageNet <b>pretrained</b> <b>ResNet50</b> backbones are different between Pytorch ...", "url": "https://stackoverflow.com/questions/67365237/imagenet-pretrained-resnet50-backbones-are-different-between-pytorch-and-tensorf", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/67365237", "snippet": "Take the two <b>pre-trained</b> basenets (before the average pooling layer) and feed them with the same image, you will notice that the output features don&#39;t follow the same distribution. Specifically, TensorFlow&#39;s backbone has more inhibited features by the ReLU <b>compared</b> to Pytorch&#39;s backbone. Additionally, as shows in the third figure, the dynamic range is different between the two frameworks. Of course, this difference is absorbed by the dense layer addressing the classification task, but: <b>Can</b> ...", "dateLastCrawled": "2022-02-03T17:37:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "ML | <b>Introduction to Transfer Learning - GeeksforGeeks</b>", "url": "https://www.geeksforgeeks.org/ml-introduction-to-transfer-learning/", "isFamilyFriendly": true, "displayUrl": "https://www.geeksforgeeks.org/ml-introduction-to-transfer-learning", "snippet": "When we use transfer learning in solving a problem, we select a <b>pre-trained</b> <b>model</b> as our base <b>model</b>. Now, there are two possible approaches to use knowledge from the <b>pre-trained</b> <b>model</b>. First way is to freeze a few layers of <b>pre-trained</b> <b>model</b> and train other layers on our new dataset for the new task. Second way is to make a new <b>model</b>, but also take out some features from the layers in the <b>pre-trained</b> <b>model</b> and use them in a newly created <b>model</b>. In both cases, we take out some of the learned ...", "dateLastCrawled": "2022-01-29T23:02:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Fine-tune a DeepFake video classifier: PyTorchVideo, Lightning, W&amp;B ...", "url": "https://francescopochetti.com/fine-tune-a-deepfake-video-classifier-pytorchvideo-lightning-wb-and-amazon-sagemaker-in-action/", "isFamilyFriendly": true, "displayUrl": "https://francescopochetti.com/fine-tune-a-deepfake-video-classifier-pytorchvideo...", "snippet": "The <b>pre-trained</b> <b>model</b>. The first step is to choose the <b>model</b> you are interested in from the PTV\u2019s <b>model</b> zoo. I picked the X3D family, given it is the smallest in size (M of params), allowing a (hopefully) faster prototyping cycle. Once selected the <b>model</b>, the two following points must be addressed:", "dateLastCrawled": "2022-01-25T09:21:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "OpenCV\u2019s DNN Module and Deep Learning (<b>a definitive guide</b>)", "url": "https://learnopencv.com/deep-learning-with-opencvs-dnn-module-a-definitive-guide/", "isFamilyFriendly": true, "displayUrl": "https://learnopencv.com/deep-learning-with-opencvs-dnn-module-<b>a-definitive-guide</b>", "snippet": "To use a <b>pre-trained</b> Caffe <b>model</b> with OpenCV DNN, we need two things. One is the <b>model</b>.caffemodel file that contains the <b>pre-trained</b> weights. The other one is the <b>model</b> architecture file which has a .prototxt extension. It is like a plain text file with a JSON like structure containing all the neural network layers\u2019 definitions. To get a clear idea of how this file looks, please visit", "dateLastCrawled": "2022-02-02T15:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Vision-based Bicycle Detection and Tracking using</b> a Deformable Part ...", "url": "https://www.researchgate.net/publication/224190608_Vision-based_Bicycle_Detection_and_Tracking_using_a_Deformable_Part_Model_and_an_EKF_Algorithm", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/224190608_<b>Vision-based_Bicycle_Detection_and</b>...", "snippet": "The <b>pre-trained</b> Faster R-CNN <b>model</b> achieves an F1 score of 68% outperforming the hybrid <b>model</b>, which achieves 58 %. Based in the good results obtained by a two stage detector as Faster R-CNN, we ...", "dateLastCrawled": "2021-12-17T03:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>YOLO object detection using deep learning OpenCV</b> | Real-time - ThinkInfi", "url": "https://thinkinfi.com/yolo-object-detection-using-python-opencv/", "isFamilyFriendly": true, "displayUrl": "https://thinkinfi.com/yolo-object-detection-using-python-opencv", "snippet": "Since YOLO object detection <b>model</b> is trained on COCO dataset (you <b>can</b> see in the image), we need to download name of the objects or names or the labels (for example: car, person etc.) which coco dataset is using.So you need to download coco.names file.. Note: There are total 80 object names in coco dataset. To wind up this section you need to download total three files for yolo object detection python code:. yolov3.weights: <b>Pre-trained</b> YOLO <b>model</b>; yolov3.cfg: Configuration/ setting file of ...", "dateLastCrawled": "2022-01-30T03:24:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>YOLOv3: Real-Time Object Detection Algorithm (What</b>&#39;s New?) - viso.ai", "url": "https://viso.ai/deep-learning/yolov3-overview/", "isFamilyFriendly": true, "displayUrl": "https://viso.ai/deep-learning/yolov3-overview", "snippet": "The YOLOv3 AP does indicate a trade-off between speed and accuracy for using YOLO when <b>compared</b> to RetinaNet since RetinaNet ... You <b>can</b> also (more easily) use YOLO\u2019s COCO <b>pretrained</b> weights by initializing the <b>model</b> with <b>model</b> = YOLOv3(). Using COCO\u2019s <b>pre-trained</b> weights means that you <b>can</b> only use YOLO for object detection with any of the 80 <b>pretrained</b> classes that come with the COCO dataset. This is a good option for beginners because it requires the least amount of new code and ...", "dateLastCrawled": "2022-02-02T06:26:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Identify toxic online comments with scikit-learn</b> and Gluon NLP", "url": "https://francescopochetti.com/identify-toxic-online-comments-with-scikit-learn-and-gluon-nlp/", "isFamilyFriendly": true, "displayUrl": "https://francescopochetti.com/<b>identify-toxic-online-comments-with-scikit-learn</b>-and...", "snippet": "Logistic Regression on top of <b>pre-trained</b> GloVe Word Embeddings. This is something I always try whenever I have to do with a NLP task. It is just too easy not to give it a shot. The approach consists in: Downloading GloVe <b>pre-trained</b> embeddings. I generally go for the 6B Wikipedia + Gigaword ones. This time I opted for the 300-dimensional vectors; Tokenize the dataset; Loop through each comment and lookup the corresponding embedding from the GloVe dictionary, defaulting to an array of zeros ...", "dateLastCrawled": "2022-01-20T11:47:00.0000000Z", "language": "en", "isNavigational": false}]], "gen_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Pre-trained</b> Models - Value <b>Machine</b> <b>Learning</b> and Deep <b>Learning</b> Technology", "url": "https://valueml.com/transfer-learning-approach-pre-trained-models-classifying-imagenet-classes-with-resnet50-in-python/", "isFamilyFriendly": true, "displayUrl": "https://valueml.com/transfer-<b>learning</b>-<b>approach-pre-trained-models-classifying</b>-imagenet...", "snippet": "Transfer <b>Learning</b> enables us to use the <b>pre-trained</b> models from other people by making small relevant changes. Basically, Transfer <b>Learning</b> (TL) is a <b>Machine</b> <b>Learning</b> technique that trains a new <b>model</b> for a particular problem based on the knowledge gained by solving some other problem. For example, the knowledge gained while <b>learning</b> to recognize trucks could be applied to recognize cars.", "dateLastCrawled": "2022-01-21T09:23:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Finding the Word <b>Analogy</b> from given words using Word2Vec embeddings ...", "url": "https://www.geeksforgeeks.org/finding-the-word-analogy-from-given-words-using-word2vec-embeddings/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>geeksforgeeks</b>.org/finding-the-word-<b>analogy</b>-from-given-words-using-word2vec...", "snippet": "In the word <b>analogy</b> task, we complete the sentence ... What if we can use a <b>Machine</b> <b>Learning</b> algorithm to automate this task of finding the word <b>analogy</b>. In this tutorial, we will be using Word2Vec <b>model</b> and a <b>pre-trained</b> <b>model</b> named \u2018GoogleNews-vectors-negative300.bin\u2018 which is trained on over 50 Billion words by Google. Each word inside the <b>pre-trained</b> dataset is embedded in a 300-dimensional space and the words which are similar in context/meaning are placed closer to each other in ...", "dateLastCrawled": "2022-01-26T14:53:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Should I Learn Machine Learning</b>? | GenUI", "url": "https://www.genui.com/resources/ml-for-developers", "isFamilyFriendly": true, "displayUrl": "https://www.genui.com/resources/ml-for-developers", "snippet": "But it will almost always be best to start with a <b>pre-trained</b> <b>model</b>, from a more general dataset, and then fine-tune it to fit your specific domain. For example, most image recognition models are based on <b>pre-trained</b> models from ImageNet, a dataset of more than 14 million, hand-labeled images divided into over 20,000 classes (like \u201cbicycle\u201d, \u201cstrawberry\u201d, \u201csky\u201d).", "dateLastCrawled": "2022-01-30T18:48:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "SE3M: A <b>Model</b> for Software Effort Estimation Using <b>Pre-trained</b> ...", "url": "https://deepai.org/publication/se3m-a-model-for-software-effort-estimation-using-pre-trained-embedding-models", "isFamilyFriendly": true, "displayUrl": "https://deepai.org/publication/se3m-a-<b>model</b>-for-software-effort-estimation-using-pre...", "snippet": "Idri and Abran (Idri et al., 2016b) also classify a technique by <b>analogy</b> as a <b>machine</b> <b>learning</b> technique. These authors further point out that <b>machine</b> <b>learning</b> models have also gained significant attention for effort estimation purposes, as they can <b>model</b> the complex relationship between effort and software attributes (cost factors), especially when this relationship is not linear, and it does not appear to have any predetermined form. Analog-based reasoning approaches have proven to be ...", "dateLastCrawled": "2021-12-25T16:39:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Word2Vec in Gensim Explained for Creating Word Embedding Models ...", "url": "https://machinelearningknowledge.ai/word2vec-in-gensim-explained-for-creating-word-embedding-models-pretrained-and-custom/", "isFamilyFriendly": true, "displayUrl": "https://<b>machinelearning</b>knowledge.ai/word2vec-in-gensim-explained-for-creating-word...", "snippet": "<b>Machine</b> <b>learning</b> and ... This is another way putting that word2vec can draw the <b>analogy</b> that if Man is to Woman then Kind is to Queen! The publicly released <b>model</b> of word2vec by Google consists of 300 features and the <b>model</b> is trained in the Google news dataset. The vocabulary size of the <b>model</b> is around 1.6 billion words. However, this might have taken a huge time for the <b>model</b> to be trained on but they have applied a method of simple subsampling approach to optimize the time. Word2Vec ...", "dateLastCrawled": "2022-02-02T15:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Using Deep <b>Learning</b> for Image Analogies | by Tomer Amit | Towards Data ...", "url": "https://towardsdatascience.com/using-deep-learning-for-image-analogies-aa2e7d7af337", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/using-deep-<b>learning</b>-for-image-analogies-aa2e7d7af337", "snippet": "I will use the <b>pre-trained</b> VGG16 image classification <b>model</b>. The <b>model</b> consists of CNN layers stacked one after another, connected by max pooling layers. The input of the network is a 244\u00d7244\u00d73 image (i.e image width and length are 244 pixels, and 3 channels), and after applying all the convolutional layers, we get a 7\u00d77\u00d7512 array. (diagram taken from deeplearning.ai course by Andrew Ng, \u201cConvolutional Neural Networks\u201d) At the end of the network we have an additional flattening layer ...", "dateLastCrawled": "2022-01-19T03:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "Transfer <b>Learning</b>: The Highest Leverage Deep <b>Learning</b> Skill You Can Learn", "url": "https://www.the-analytics.club/transfer-learning", "isFamilyFriendly": true, "displayUrl": "https://www.the-analytics.club/transfer-<b>learning</b>", "snippet": "Transfer <b>learning</b> is a <b>machine</b> <b>learning</b> technique in which a <b>model</b> trained on a specific task is reused as part of the training process for another, different task. Here is a simple <b>analogy</b> to help you understand how transfer <b>learning</b> works: imagine that one person has learned everything there is to know about dogs. In contrast, another person has learned everything about cats. If both people are asked, \u201cWhat\u2019s an animal with four legs, a tail, and barks?\u201d The person who knows all ...", "dateLastCrawled": "2022-01-29T09:03:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Classifying and completing word analogies by <b>machine</b> <b>learning</b> | Request PDF", "url": "https://www.researchgate.net/publication/349152012_Classifying_and_completing_word_analogies_by_machine_learning", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/349152012_Classifying_and_completing_word...", "snippet": "In this paper, we depart from this assumption to adopt a <b>machine</b> <b>learning</b> approach, i.e., <b>learning</b> a substitute of the parallelogram <b>model</b>. To achieve our goal, we first review the formal modeling ...", "dateLastCrawled": "2021-11-11T17:41:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Transfer <b>Learning to solve a Classification Problem</b> :: InBlog", "url": "https://inblog.in/Transfer-Learning-to-solve-a-Classification-Problem-9bihoVsKsV", "isFamilyFriendly": true, "displayUrl": "https://inblog.in/Transfer-<b>Learning-to-solve-a-Classification-Problem</b>-9bihoVsKsV", "snippet": "Why we need <b>pre-Trained</b> <b>Model</b>? Transfer <b>Learning</b> via VGG16; Building a <b>Model</b>; Code Walk Through; Result and Evaluation; Introduction: Neural networks are very different type of the <b>model</b> as compared to the Supervised <b>Learning</b>,. The most important things about deep <b>learning</b> <b>model</b> is it is very hard to train. It requires lots of the resources that a small company can\u2019t bear. RAM on a <b>machine</b> is cheap and is available in plenty. You need hundreds of GB\u2019s of RAM to run a super complex ...", "dateLastCrawled": "2021-11-25T02:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>machine</b> <b>learning</b> - <b>Merging pretrained models in Word2Vec</b>? - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/30482669/merging-pretrained-models-in-word2vec", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/30482669", "snippet": "How do i merge these two huge <b>pre-trained</b> vectors? or how do i train a new <b>model</b> and update vectors on top of another? I see that C based word2vec does not support batch training. I am looking to compute word <b>analogy</b> from these two models. I believe that vectors learned from these two sources will produce pretty good results. <b>machine</b>-<b>learning</b> word2vec. Share. Follow edited May 28 &#39;15 at 14:04. pbu. asked May 27 &#39;15 at 12:37. pbu pbu. 2,706 7 7 gold badges 37 37 silver badges 62 62 bronze ...", "dateLastCrawled": "2022-01-22T22:47:00.0000000Z", "language": "en", "isNavigational": false}], [], [], [], [], []], "all_bing_queries": ["+(pre-trained model)  is like +(a bicycle)", "+(pre-trained model) is similar to +(a bicycle)", "+(pre-trained model) can be thought of as +(a bicycle)", "+(pre-trained model) can be compared to +(a bicycle)", "machine learning +(pre-trained model AND analogy)", "machine learning +(\"pre-trained model is like\")", "machine learning +(\"pre-trained model is similar\")", "machine learning +(\"just as pre-trained model\")", "machine learning +(\"pre-trained model can be thought of as\")", "machine learning +(\"pre-trained model can be compared to\")"]}