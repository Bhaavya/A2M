{"src_spec_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Bucketing in Spark</b>. Spark job optimization using <b>Bucketing</b> | by Pawan ...", "url": "https://blog.clairvoyantsoft.com/bucketing-in-spark-878d2e02140f", "isFamilyFriendly": true, "displayUrl": "https://blog.clairvoyantsoft.com/<b>bucketing-in-spark</b>-878d2e02140f", "snippet": "<b>Bucketing</b> involves <b>sorting</b> and shuffling the data prior to the operation which needs to be performed on data <b>like</b> joins. <b>Bucketing</b> boosts performance by <b>sorting</b> and shuffling data before performing downstream operations, such as table joins. This technique benefits dimension tables, which are frequently used tables containing primary keys. It\u2019s also beneficial when there are frequent join operations requiring large and small tables. <b>Bucketing</b> is commonly used to optimize the performance of ...", "dateLastCrawled": "2022-02-02T21:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Bucketing</b> - What is <b>Bucketing</b> in Finance Vs. Machine Learning &amp; Data?", "url": "https://daytradrr.com/trading-terms/bucketing-what-is-bucketing-in-finance-vs-machine-learning-data/", "isFamilyFriendly": true, "displayUrl": "https://daytradrr.com/trading-terms/<b>bucketing</b>-what-is-<b>bucketing</b>-in-finance-vs-machine...", "snippet": "<b>Bucketing</b> improves performance by shuffling and <b>sorting</b> data prior to downstream operations such as table joins. The tradeoff is the initial overhead due to shuffling and <b>sorting</b>, but for certain data transformations, this technique can improve performance by avoiding later shuffling and <b>sorting</b>. This technique is useful for dimension tables, which are frequently used tables containing primary keys. It is also useful when there are frequent joint operations involving large and small tables ...", "dateLastCrawled": "2022-01-28T15:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Bucket Sort</b> - GeeksforGeeks", "url": "https://www.geeksforgeeks.org/bucket-sort-2/", "isFamilyFriendly": true, "displayUrl": "https://www.geeksforgeeks.org/<b>bucket-sort</b>-2", "snippet": "<b>Like</b> Article. <b>Bucket Sort</b>. Difficulty Level : Easy; Last Updated : 22 Oct, 2021. <b>Bucket sort</b> is mainly useful when input is uniformly distributed over a range. For example, consider the following problem. Sort a large set of floating point numbers which are in range from 0.0 to 1.0 and are uniformly distributed across the range. How do we sort the numbers efficiently? A simple way is to apply a comparison based <b>sorting</b> algorithm. The lower bound for Comparison based <b>sorting</b> algorithm (Merge ...", "dateLastCrawled": "2022-02-02T05:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Best Practices for <b>Bucketing</b> in <b>Spark</b> SQL | by David Vrba | Towards ...", "url": "https://towardsdatascience.com/best-practices-for-bucketing-in-spark-sql-ea9f23f7dd53", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/best-practices-for-<b>bucketing</b>-in-<b>spark</b>-sql-ea9f23f7dd53", "snippet": "Discard information about <b>sorting</b> (see Jira) \u2014 this is not really an improvement of <b>bucketing</b>, but rather the opposite. After this change, the sort-merge join always requires <b>sorting</b>, no matter if the buckets are already sorted. This was done in favor to have a faster explain command which needed to do file listing to verify if each bucket has only one file. There is a configuration setting that can bring the original behavior back", "dateLastCrawled": "2022-02-03T05:27:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Hive - Sorting &amp; Bucketing</b> | Automated hands-on| CloudxLab", "url": "https://cloudxlab.com/assessment/displayslide/256/hive-sorting-bucketing", "isFamilyFriendly": true, "displayUrl": "https://cloudxlab.com/assessment/displayslide/256/<b>hive-sorting-bucketing</b>", "snippet": "<b>Hive - Sorting &amp; Bucketing</b> Not able to play video? Try with youtube. Let&#39;s understand <b>sorting</b> in the Hive. Order by orders the data and guarantees global ordering. All of the data goes through only a single reducer and <b>sorting</b> happens on that single reducer. For large datasets, this is unacceptable as it will overload the single reducer. Though you will get the sorted file as output but this is unacceptable as it will take a lot of time. ...", "dateLastCrawled": "2022-01-12T02:36:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Hive Partitioning vs <b>Bucketing</b> - Advantages and Disadvantages - DataFlair", "url": "https://data-flair.training/blogs/hive-partitioning-vs-bucketing/", "isFamilyFriendly": true, "displayUrl": "https://data-flair.training/blogs/hive-partition", "snippet": "So, this was all about Hive Partitioning vs <b>Bucketing</b>. Hope you <b>like</b> our explanation. Conclusion. In conclusion to Hive Partitioning vs <b>Bucketing</b>, we can say that both partition and bucket distributes a subset of the table\u2019s data to a subdirectory. Hence, Hive organizes tables into partitions. And it subdivides partition into buckets. If you <b>like</b> this blog or have any query related to Hive Partitioning vs <b>Bucketing</b>, so, please let us know by leaving a comment. Tags: apache hive hive Hive ...", "dateLastCrawled": "2022-02-03T03:56:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Sorting hybrid bucketed schema in MongoDB</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/12055541/sorting-hybrid-bucketed-schema-in-mongodb", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/12055541", "snippet": "Find centralized, trusted content and collaborate around the technologies you use most. Learn more", "dateLastCrawled": "2022-01-18T19:00:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Bucket Sort To Sort <b>an Array with Negative Numbers - GeeksforGeeks</b>", "url": "https://www.geeksforgeeks.org/bucket-sort-to-sort-an-array-with-negative-numbers/", "isFamilyFriendly": true, "displayUrl": "https://www.geeksforgeeks.org/bucket-sort-to-sort-<b>an-array-with-negative-numbers</b>", "snippet": "<b>Like</b> Article. Bucket Sort To Sort <b>an Array with Negative Numbers</b>. Difficulty Level : Medium; Last Updated : 20 Sep, 2021. We have discussed bucket sort in the main post on Bucket Sort . Bucket sort is mainly useful when input is uniformly distributed over a range. For example, consider the problem of <b>sorting</b> a large set of floating point numbers which are in range from 0.0 to 1.0 and are uniformly distributed across the range. In the above post, we have discussed Bucket Sort to sort numbers ...", "dateLastCrawled": "2022-02-02T05:40:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Bucketing</b> in SQL | Blog | Fivetran", "url": "https://www.fivetran.com/blog/bucketing-in-sql", "isFamilyFriendly": true, "displayUrl": "https://www.fivetran.com/blog/<b>bucketing</b>-in-sql", "snippet": "<b>Bucketing</b> Time. <b>Like</b> trunc for numbers, date_trunc is used to bucket dates together. This is particularly useful for tracking user activity, where you\u2019d <b>like</b> to smooth out weekend dips by <b>bucketing</b> weeks together. It accepts a wide variety of fields to truncate against, from microseconds to millennia. select date_trunc(&#39;month&#39;, &#39;2018-11-13&#39;::timestamp); -- returns 2018-11-01 00:00:00 select date_trunc(&#39;week&#39;, &#39;2018-11-13&#39;::timestamp); -- returns 2018-11-12 00:00:00 . Try it out on Numeracy ...", "dateLastCrawled": "2022-02-02T15:31:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "The 5-minute guide to using <b>bucketing</b> in <b>Pyspark</b> - Blog | luminousmen", "url": "https://luminousmen.com/post/the-5-minute-guide-to-using-bucketing-in-pyspark", "isFamilyFriendly": true, "displayUrl": "https://luminousmen.com/post/the-5-minute-guide-to-using-<b>bucketing</b>-in-<b>pyspark</b>", "snippet": "The 5-minute guide to using <b>bucketing</b> in <b>Pyspark</b>. Spark Tips. Partition Tuning. Let&#39;s start with the problem. We&#39;ve got two tables and we do one simple inner join by one column: t1 = spark.table (&#39;unbucketed1&#39;) t2 = spark.table (&#39;unbucketed2&#39;) t1.join (t2, &#39;key&#39;).explain () In the physical plan, what you will get is something <b>like</b> the following:", "dateLastCrawled": "2022-02-03T02:34:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Bucketing in Spark</b>. Spark job optimization using <b>Bucketing</b> | by Pawan ...", "url": "https://blog.clairvoyantsoft.com/bucketing-in-spark-878d2e02140f", "isFamilyFriendly": true, "displayUrl": "https://blog.clairvoyantsoft.com/<b>bucketing-in-spark</b>-878d2e02140f", "snippet": "Spark SQL <b>bucketing</b> requires <b>sorting</b> on reading time which greatly degrades the performance. ... It needs the bucket key set to be <b>similar</b> to the join key set or grouping key set. To remove the above limitations, there has been a series of optimizations added in Apache Spark from the last year so that the new <b>bucketing</b> technique can cover more scenarios. So the new <b>bucketing</b> makes Hive to Spark SQL migration more simple and efficient. List of Transformations. The below transformations will ...", "dateLastCrawled": "2022-02-02T21:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Best Practices for <b>Bucketing</b> in <b>Spark</b> SQL | by David Vrba | Towards ...", "url": "https://towardsdatascience.com/best-practices-for-bucketing-in-spark-sql-ea9f23f7dd53", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/best-practices-for-<b>bucketing</b>-in-<b>spark</b>-sql-ea9f23f7dd53", "snippet": "Discard information about <b>sorting</b> (see Jira) \u2014 this is not really an improvement of <b>bucketing</b>, but rather the opposite. After this change, the sort-merge join always requires <b>sorting</b>, no matter if the buckets are already sorted. This was done in favor to have a faster explain command which needed to do file listing to verify if each bucket has only one file. There is a configuration setting that can bring the original behavior back", "dateLastCrawled": "2022-02-03T05:27:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Understanding <b>bucketing</b> in Spark | Optimizing Databricks Workloads", "url": "https://subscription.packtpub.com/book/mobile/9781801819077/7/ch07lvl1sec42/understanding-bucketing-in-spark", "isFamilyFriendly": true, "displayUrl": "https://subscription.packtpub.com/.../7/ch07lvl1sec42/understanding-<b>bucketing</b>-in-spark", "snippet": "<b>Bucketing</b> is an optimization technique that helps to prevent shuffling and <b>sorting</b> of data during compute-heavy operations such as joins. Based on the <b>bucketing</b> columns we specify, data is collected in a number of bins. <b>Bucketing</b> <b>is similar</b> to partitioning, but in the case of partitioning, we create directories for each partition. In <b>bucketing</b> ...", "dateLastCrawled": "2022-01-24T02:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Bucketing</b> In Hive - <b>Hadoop Online Tutorials</b>", "url": "http://hadooptutorial.info/bucketing-in-hive/", "isFamilyFriendly": true, "displayUrl": "hadooptutorial.info/<b>bucketing</b>-in-hive", "snippet": "<b>Similar</b> to partitioning, bucketed tables provide faster query responses than non-bucketed tables. <b>Bucketing</b> concept also provides the flexibility to keep the records in each bucket to be sorted by one or more columns. This makes map-side joins even more efficient, since the join of each bucket becomes an efficient merge-sort. Limitations . Specifying <b>bucketing</b> doesn\u2019t ensure that the table is properly populated. Data Loading into buckets needs to be handled by our-self. Example Use Case ...", "dateLastCrawled": "2022-02-02T17:37:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "(PDF) <b>Analytic Variations on Bucket Selection and</b> <b>Sorting</b>", "url": "https://www.researchgate.net/publication/220197627_Analytic_Variations_on_Bucket_Selection_and_Sorting", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/220197627_Analytic_Variations_on_Bucket...", "snippet": "Abstract. . We provide complete average-case as well as probabilistic analysis of the cost of bucket selection and <b>sorting</b> algorithms. Two variations of <b>bucketing</b> (and flavors therein) are ...", "dateLastCrawled": "2021-12-19T22:47:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>What is Bucketing and Clustering in Hive</b>? - DataFlair", "url": "https://data-flair.training/forums/topic/what-is-bucketing-and-clustering-in-hive/", "isFamilyFriendly": true, "displayUrl": "https://data-flair.training/forums/topic/<b>what-is-bucketing-and-clustering-in-hive</b>", "snippet": "<b>Bucketing</b> is the way of dividing table data sets into more manageable parts.It is based on (hash function on the bucketed column) mod (total number of buckets).hash function depends on the type of bucketed column. Records with same bucketed column will be stored in same bucket. Each bucket is just a file in table directory and <b>bucketing</b> number is 1-based. <b>Bucketing</b> can be done along with Partitioning on Hive tables and even without partitioning. Bucketed tables will create almost equally ...", "dateLastCrawled": "2022-02-02T21:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "hadoop - What is the difference between partitioning and <b>bucketing</b> a ...", "url": "https://stackoverflow.com/questions/19128940/what-is-the-difference-between-partitioning-and-bucketing-a-table-in-hive", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/19128940", "snippet": "<b>BUCKETING</b>-----<b>Bucketing</b> is used to overcome the cons that I mentioned in the partitioning section. This should be used when there are very few repeating values in a column (example - primary key column). This <b>is similar</b> to the concept of index on primary key column in the RDBMS. In our table, we can take Sales_Id column for <b>bucketing</b>.", "dateLastCrawled": "2022-01-28T20:43:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Binning or Bucketing of column in pandas python</b> - DataScience Made Simple", "url": "https://www.datasciencemadesimple.com/binning-or-bucketing-of-column-in-pandas-python-2/", "isFamilyFriendly": true, "displayUrl": "https://www.datasciencemadesimple.com/<b>binning-or-bucketing-of-column-in-pandas-python</b>-2", "snippet": "Binning or <b>bucketing</b> in pandas python with range values: By binning with the predefined values we will get binning range as a resultant column which is shown below &#39;&#39;&#39; binning or <b>bucketing</b> with range&#39;&#39;&#39; bins = [0, 25, 50, 75, 100] df1[&#39;binned&#39;] = pd.cut(df1[&#39;Score&#39;], bins) print (df1) so the result will be Binning or <b>bucketing</b> in pandas python with labels: We will be assigning label to each bin. So labels will appear in column instead of bin range as shown below &#39;&#39;&#39; binning or <b>bucketing</b> with ...", "dateLastCrawled": "2022-02-02T22:50:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Apache <b>Spark</b> Performance Boosting | by Halil Ertan | Towards Data Science", "url": "https://towardsdatascience.com/apache-spark-performance-boosting-e072a3ec1179", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/apache-<b>spark</b>-performance-boosting-e072a3ec1179", "snippet": "It <b>is similar</b> to partitioning, but partitioning creates a directory for each partition, whereas <b>bucketing</b> distributes data across a fixed number of buckets by a hash on the bucket value. The information about <b>bucketing</b> is stored in the metastore. It might be used with or without partitioning. An important keynote is that partitioning should only be used with columns that have a limited number of values; <b>bucketing</b> works also well when the number of unique values is large. Columns that are ...", "dateLastCrawled": "2022-02-02T03:04:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "can we do partitioning and <b>bucketing</b> on same column", "url": "https://pammetim.com/gxwzygxm/can-we-do-partitioning-and-bucketing-on-same-column.html", "isFamilyFriendly": true, "displayUrl": "https://pammetim.com/gxwzygxm/can-we-do-partitioning-and-<b>bucketing</b>-on-same-column.html", "snippet": "What is distribute by in hive? - Cement Answers Machine Learning", "dateLastCrawled": "2022-01-14T09:31:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Bucket Sort</b> - GeeksforGeeks", "url": "https://www.geeksforgeeks.org/bucket-sort-2/", "isFamilyFriendly": true, "displayUrl": "https://www.geeksforgeeks.org/<b>bucket-sort</b>-2", "snippet": "A simple way is to apply a comparison based <b>sorting</b> algorithm. The lower bound for Comparison based <b>sorting</b> algorithm (Merge Sort, Heap Sort, Quick-Sort .. etc) is \u03a9(n Log n), i.e., they cannot do better than nLogn. <b>Can</b> we sort the array in linear time? Counting sort <b>can</b> not be applied here as we use keys as index in counting sort. Here keys ...", "dateLastCrawled": "2022-02-02T05:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Bucket Sort in Python</b> - Stack Abuse", "url": "https://stackabuse.com/bucket-sort-in-python/", "isFamilyFriendly": true, "displayUrl": "https://stackabuse.com/<b>bucket-sort-in-python</b>", "snippet": "After <b>sorting</b>, the contents of the buckets are appended, forming a sorted collection. Bucket Sort <b>can</b> <b>be thought</b> of as a scatter-order-gather approach towards <b>sorting</b> a list, due to the fact that the elements are first scattered in buckets, ordered within them, and finally gathered into a new, sorted list. We&#39;ll implement <b>Bucket Sort in Python</b> and analyze it&#39;s time complexity. How does Bucket Sort Work? Before jumping into its exact implementation, let&#39;s walk through the algorithm&#39;s steps ...", "dateLastCrawled": "2022-02-03T15:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "algorithm - What make Bucket Sort good? - Stack Overflow", "url": "https://stackoverflow.com/questions/61724010/what-make-bucket-sort-good", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/61724010/what-make-bucket-sort-good", "snippet": "So I stumbled about non-comparison <b>sorting</b> based algorithms bucket sort to be exact and I couldn&#39;t exactly get why it is good. I&#39;ve a <b>thought</b> but I need somebody to confirm it. Let&#39;s assume I wan...", "dateLastCrawled": "2022-01-10T14:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Lecture 9: Linear <b>Sorting</b> Steven Skiena Department of Computer Science ...", "url": "https://www3.cs.stonybrook.edu/~skiena/373/current-lectures/lecture9.pdf", "isFamilyFriendly": true, "displayUrl": "https://www3.cs.stonybrook.edu/~skiena/373/current-lectures/lecture9.pdf", "snippet": "Any comparison-based <b>sorting</b> program <b>can</b> <b>be thought</b> of as de\ufb01ning a decision tree of possible executions. Running the same program twice on the same permutation causes it to do exactly the same thing, but running it on different permutations of the same data causes a different sequence of comparisons to be made on each. (3,2,1) a1 &lt; a2 a2 &lt; a3 a1 &lt; a3 (1,2,3) a1 &lt; a3 a2 &lt; a3 (1,3,2) (2,3,1) (2,1,3) (3,1,2) Claim: the height of this decision tree is the worst-case complexity of <b>sorting</b> ...", "dateLastCrawled": "2022-01-29T03:26:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Consultants love buckets to structure problems - Consultant&#39;s Mind", "url": "https://www.consultantsmind.com/2013/05/16/structuring-problems-consultants-use-buckets/", "isFamilyFriendly": true, "displayUrl": "https://www.consultantsmind.com/2013/05/16/<b>structuring-problems-consultants-use-buckets</b>", "snippet": "Without <b>sorting</b> the pens, candy, receipts, stamps, and take-out menus, it will remain a forever mess. If you buy into the premise that management consultants are hired to sort out complex problems, then some grouping or \u201c<b>bucketing</b>\u201d will be required. Trust me, buckets. A few examples: 1) <b>Bucketing</b> by Time", "dateLastCrawled": "2022-01-30T21:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Order your graphics <b>draw calls</b> around! \u2013 realtimecollisiondetection.net ...", "url": "https://realtimecollisiondetection.net/blog/?p=86", "isFamilyFriendly": true, "displayUrl": "https://realtimecollisiondetection.net/blog/?p=86", "snippet": "Sort-based draw call <b>bucketing</b>. How this works is that we, as we \u201cdraw\u201d the scene, fill up an array of (key, value) pairs, where the key is an unsigned sort key that represents state/context, and the value is a pointer/offset to the actual draw call data. After we have processed all scene objects, we sort this array using a standard <b>sorting</b> ...", "dateLastCrawled": "2022-02-01T21:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "Hive, Tez, clustering, buckets, and Presto", "url": "https://user.hive.apache.narkive.com/Y2lM04Rd/hive-tez-clustering-buckets-and-presto", "isFamilyFriendly": true, "displayUrl": "https://user.hive.apache.narkive.com/Y2lM04Rd/hive-tez-clustering-buckets-and-presto", "snippet": "Is that possible? &quot;hive.enforce.<b>bucketing</b>&quot; appears to have been deprecated as of 2.0 and is always set to &quot;true&quot;, but I <b>can</b>&#39;t seem to find a description of its intent. Anyway, if it&#39;s supposed to force the creation of buckets it&#39;s not working with the Tez engine. ALternately, I was thinking that maybe someone could help me with the ORC file configuration so that r_crs_id was at least row optimized and sorted within the ORC files. I&#39;ve been reading up on ORC and the Hive statements related to ...", "dateLastCrawled": "2021-12-21T15:35:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Lecture 10: Linear <b>Sorting</b> (1997) Steven Skiena Department of Computer ...", "url": "https://www3.cs.stonybrook.edu/~algorith/video-lectures/1997/lecture10.pdf", "isFamilyFriendly": true, "displayUrl": "https://www3.cs.stonybrook.edu/~algorith/video-lectures/1997/lecture10.pdf", "snippet": "Any comparison-based <b>sorting</b> program <b>can</b> <b>be thought</b> of as de\ufb01ning a decision tree of possible executions. Running the same program twice on the same permutation causes it to do exactly the same thing, but running it on different permutations of the same data causes a different sequence of comparisons to be made on each. a1 &lt; a2 ? a2 &lt; a3 ? a1 &lt; a3 ? (1,2,3) (2,1,3) a2 &lt; a3 ?a1 &lt; a3 ? (1,3,2) (3,1,2) (2,3,1) (3,2,1) T F T T T T F F F F Claim: the height of this decision tree is the worst ...", "dateLastCrawled": "2021-08-21T05:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Solved: <b>Hive - Deciding the number of buckets</b> - Cloudera Community - 129310", "url": "https://community.cloudera.com/t5/Support-Questions/Hive-Deciding-the-number-of-buckets/td-p/129310", "isFamilyFriendly": true, "displayUrl": "https://community.cloudera.com/t5/Support-Questions/<b>Hive-Deciding-the-number-of</b>...", "snippet": "Buckets <b>can</b> help with the predicate pushdown since every value belonging to one value will end up in one bucket. So if you bucket by 31 days and filter for one day Hive will be able to more or less disregard 30 buckets. Obviously this doesn&#39;t need to be good since you often WANT parallel execution like aggregations. So it depends on your query if this is good. It might be better to sort by day and bucket by something like customer id if you have to have buckets for some of the other reasons ...", "dateLastCrawled": "2022-01-24T16:39:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Bucketing otherwise than by constructing pivottable</b> on pivot | MrExcel ...", "url": "https://www.mrexcel.com/board/threads/bucketing-otherwise-than-by-constructing-pivottable-on-pivot.19348/", "isFamilyFriendly": true, "displayUrl": "https://<b>www.mrexcel.com</b>/board/threads/<b>bucketing-otherwise-than-by-constructing</b>...", "snippet": "My first <b>thought</b> was to just assemble the information from the list of totals by customer. =SUM(LARGE(rTot_Cust,{1,2,3,4,5})) N.B. I use named ranges since I do not know the location of your data. My second <b>thought</b> was to modify the information in the rank column. Created a lookup table that assigns numbers 1-5 to 1 2-10 as 2 and 11-15 as 3", "dateLastCrawled": "2021-11-24T11:58:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Bucketing in Hive</b> | Complete Guide to <b>Bucketing in Hive</b>", "url": "https://www.educba.com/bucketing-in-hive/", "isFamilyFriendly": true, "displayUrl": "https://www.educba.com/<b>bucketing-in-hive</b>", "snippet": "<b>Bucketing</b> <b>can</b> be followed by partitioning, where partitions <b>can</b> be further divided into buckets. <b>Bucketing</b> comes into play when partitioning hive data sets into segments is not effective and <b>can</b> overcome over partitioning. \u201cCLUSTERED BY\u201d clause is used to do <b>bucketing in Hive</b>. The SORTED BY clause ensures local ordering in each bucket, by keeping the rows in each bucket ordered by one or more columns. The plausible cases when <b>bucketing</b> should be favoured are:", "dateLastCrawled": "2022-02-03T04:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Hive <b>Bucketing</b> in Apache Spark - Databricks", "url": "https://databricks.com/it/session/hive-bucketing-in-apache-spark", "isFamilyFriendly": true, "displayUrl": "https://databricks.com/it/session/hive-<b>bucketing</b>-in-apache-spark", "snippet": "<b>Bucketing</b> is a partitioning technique that <b>can</b> improve performance in certain data transformations by avoiding data shuffling and <b>sorting</b>. The general idea of <b>bucketing</b> is to partition, and optionally sort, the data based on a subset of columns while it is written out (a one-time cost), while making successive reads of the data more performant for downstream jobs if the SQL operators <b>can</b> make use of this property.", "dateLastCrawled": "2022-02-03T09:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "A Faster Convex-Hull Algorithm via <b>Bucketing</b>", "url": "https://backend.orbit.dtu.dk/ws/files/202753725/bucketing.pdf", "isFamilyFriendly": true, "displayUrl": "https://backend.orbit.dtu.dk/ws/files/202753725/<b>bucketing</b>.pdf", "snippet": "<b>bucketing</b> was a clear winner <b>compared</b> to the considered competitors (plane-sweep, divide&amp;conquer, quickhull, and throw-away). Keywords: Computational geometry \u00b7 Convex hull \u00b7 Algorithm \u00b7 Bucket- ing \u00b7 Linear expected time \u00b7 Experimental evaluation 1 Introduction <b>Bucketing</b> is a practical method to improve the e ciency of algorithms. As an example, consider the <b>sorting</b> problem under the assumption that the elem-ents being sorted are integers. In bucketsort [1], the elements are sorted as ...", "dateLastCrawled": "2021-11-30T20:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Hive Partitioning vs <b>Bucketing</b> - Advantages and Disadvantages - DataFlair", "url": "https://data-flair.training/blogs/hive-partitioning-vs-bucketing/", "isFamilyFriendly": true, "displayUrl": "https://data-flair.training/blogs/hive-partition", "snippet": "We have taken a brief look at what is Hive Partitioning and what is Hive <b>Bucketing</b>. You <b>can</b> refer our previous blog on Hive Data Models for the detailed study of <b>Bucketing</b> and Partitioning in Apache Hive. In this section, we will discuss the difference between Hive Partitioning and <b>Bucketing</b> on the basis of different features in detail- i. Partitioning and <b>Bucketing</b> Commands in Hive. a) Partitioning The Hive command for Partitioning is: [php]CREATE TABLE table_name (column1 data_type ...", "dateLastCrawled": "2022-02-03T03:56:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "When should I choose <b>bucket sort</b> over other <b>sorting</b> algorithms? - Stack ...", "url": "https://stackoverflow.com/questions/31633391/when-should-i-choose-bucket-sort-over-other-sorting-algorithms", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/31633391", "snippet": "Another advantage of <b>bucket sort</b> is that you <b>can</b> use it as an external <b>sorting</b> algorithm. If you need to sort a list that is so huge you <b>can</b>&#39;t fit it into memory, you <b>can</b> stream the list through RAM, distribute the items into buckets stored in external files, then sort each file in RAM independently. Here are a few disadvantages of <b>bucket sort</b>: As mentioned above, you <b>can</b>&#39;t apply it to all data types because you need a good <b>bucketing</b> scheme. <b>Bucket sort</b>&#39;s efficiency is sensitive to the ...", "dateLastCrawled": "2022-01-25T05:15:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Bucketing</b> in Hive \u2013 Creation of Bucketed Table in Hive", "url": "https://data-flair.training/blogs/bucketing-in-hive/", "isFamilyFriendly": true, "displayUrl": "https://<b>data-flair</b>.training/blogs/bucketin", "snippet": "Along with Partitioning on Hive tables <b>bucketing</b> <b>can</b> be done and even without partitioning. vi. Moreover, Bucketed tables will create almost equally distributed data file parts. Advantages of <b>Bucketing</b> in Hive. i. On comparing with non-bucketed tables, Bucketed tables offer the efficient sampling. ii. Map-side joins will be faster on bucketed tables than non-bucketed tables, as the data files are equal sized parts. iii. Here also bucketed tables offer faster query responses than non-bucketed ...", "dateLastCrawled": "2022-01-28T12:29:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "Apache <b>Spark</b> Performance Boosting | by Halil Ertan | Towards Data Science", "url": "https://towardsdatascience.com/apache-spark-performance-boosting-e072a3ec1179", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/apache-<b>spark</b>-performance-boosting-e072a3ec1179", "snippet": "<b>Bucketing</b> boosts performance by already <b>sorting</b> and shuffling data before performing sort-merge joins. It is important the have the same number of buckets on both sides of the tables in the join. To use it, the number of the buckets and the key column are specified. Needless to say, we should have a solid insight into the data for deciding the correct number of buckets. In a general manner, joins, groupBy, distinct transformations are benefited from <b>bucketing</b>. df = df.bucketBy(32, \u2018key ...", "dateLastCrawled": "2022-02-02T03:04:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Non Comparison based <b>Sorting</b> Algorithms", "url": "https://iq.opengenus.org/non-comparison-based-sorting/", "isFamilyFriendly": true, "displayUrl": "https://iq.opengenus.org/non-comparison-based-<b>sorting</b>", "snippet": "You need a good <b>bucketing</b> scheme. Radix Sort algorithm . The radix sort algorithm sorts the elements by comparing significant digits from least significant digit to most significant digit. Algorithm. Step 1: Find the maximum value in the given array. Step 2: Calculate no of digits present in the maximum value. Step 3: Traverse each significant place starting from the least significant to the most significant place. Step 4: Sort the elements based on the digit present at the current ...", "dateLastCrawled": "2022-02-02T21:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "About Sort in Spark 3.x. Deep dive into data <b>sorting</b> in Spark\u2026 | by ...", "url": "https://towardsdatascience.com/about-sort-in-spark-3-x-f3699cc31008", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/about-sort-in-spark-3-x-f3699cc31008", "snippet": "The information about data <b>sorting</b> <b>can</b> be inferred also from the query plan. It is represented by the Sort operator and if you check the graphical representation in the SQL tab in Spark UI, you will see there the following operator: Image by author. When hovering the mouse over it, you will see also the smaller black rectangle with some additional information that tells you what columns are used for the <b>sorting</b>. The boolean information true/false is saying whether this sort is global or just ...", "dateLastCrawled": "2022-02-01T11:11:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Analysis of different sorting techniques - GeeksforGeeks</b>", "url": "https://www.geeksforgeeks.org/analysis-of-different-sorting-techniques/", "isFamilyFriendly": true, "displayUrl": "https://www.geeksforgeeks.org/<b>analysis-of-different-sorting-techniques</b>", "snippet": "In non-comparison based <b>sorting</b>, elements of array are not <b>compared</b> with each other to find the sorted array. ... A <b>sorting</b> technique is considered Online if it <b>can</b> accept new data while the procedure is ongoing i.e. complete data is not required to start the <b>sorting</b> operation. Among the comparison based techniques discussed, only Insertion Sort qualifies for this because of the underlying algorithm it uses i.e. it processes the array (not just elements) from left to right and if new ...", "dateLastCrawled": "2022-01-30T20:32:00.0000000Z", "language": "en", "isNavigational": false}]], "gen_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "An Introduction to Hashing in the Era of <b>Machine Learning</b> | by Tyler ...", "url": "https://blog.bradfieldcs.com/an-introduction-to-hashing-in-the-era-of-machine-learning-6039394549b0", "isFamilyFriendly": true, "displayUrl": "https://blog.bradfieldcs.com/an-introduction-to-hashing-in-the-era-of-<b>machine-learning</b>...", "snippet": "Our <b>analogy</b> is not a perfect one; unlike the Dewey Decimal numbers, a ... AlphaGo\u2019s <b>machine learning</b> algorithm accepts as its input vector the state of a Go board (for each position, is there a white stone, a black stone, or no stone) and the label represents which player won the game (white or black). Using that information, across hundreds of thousands of games, a <b>machine learning</b> algorithm decided how to evaluate any particular board state. AlphaGo taught itself which moves will provide ...", "dateLastCrawled": "2022-01-19T13:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Transfer Learning/Fine-Tuning a</b> Deep <b>Learning</b> Model - <b>Machine</b> <b>Learning</b>", "url": "https://datastronomy.com/eli5-transfer-learning-fine-tuning-a-deep-learning-model/", "isFamilyFriendly": true, "displayUrl": "https://datastronomy.com/<b>eli5-transfer-learning-fine-tuning-a</b>-deep-<b>learning</b>-model", "snippet": "You took a trained brain\u2014or stepping back from our <b>analogy</b>, a neural net\u2014and you adapted it to a specialized problem. Transfer <b>learning</b>, or fine-tuning, is a process whereby you take a deep <b>learning</b> model that has been trained on lots of data (1M+ examples) and continue training it on a smaller dataset to \u201coverfit\u201d it to that particular class of problem. The model becomes inferior at its original task and better at the new specific task, but it also performs much better than a model ...", "dateLastCrawled": "2022-01-19T02:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Bias-Variance Decomposition</b> - mlxtend", "url": "http://rasbt.github.io/mlxtend/user_guide/evaluate/bias_variance_decomp/", "isFamilyFriendly": true, "displayUrl": "rasbt.github.io/mlxtend/user_guide/evaluate/bias_variance_decomp", "snippet": "Proceedings of 17th International Conference on <b>Machine</b> <b>Learning</b>. 2000. [2] Dietterich, Thomas G., and Eun Bae Kong. <b>Machine</b> <b>learning</b> bias, statistical bias, and statistical variance of decision tree algorithms. Technical report, Department of Computer Science, Oregon State University, 1995. Example 1 -- <b>Bias Variance Decomposition</b> of a Decision Tree Classifier from mlxtend.evaluate import bias_variance_decomp from sklearn.tree import DecisionTreeClassifier from mlxtend.data import iris_data ...", "dateLastCrawled": "2022-01-31T12:55:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Combinatorics</b> - GitHub Pages", "url": "https://chrispiech.github.io/probabilityForComputerScientists/en/part1/combinatorics/", "isFamilyFriendly": true, "displayUrl": "https://chrispiech.github.io/probabilityForComputerScientists/en/part1/<b>combinatorics</b>", "snippet": "Parameter Estimation Maximum Likelihood Estimation Maximum A Posteriori <b>Machine</b> <b>Learning</b> Na\u00efve Bayes Logistic Regression; Worked Examples. MLE Normal Demo; MLE Mixture Model \u24b8 Chris Piech, Stanford University <b>Combinatorics</b>. Counting problems can be approached from the basic building blocks described in the first section: Counting. However some counting problems are so ubiquitous in the world of probability that it is worth knowing a few higher level counting abstractions. When solving ...", "dateLastCrawled": "2022-02-02T17:48:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Perceptron Learning Algorithm</b> | Guide to <b>Perceptron Learning Algorithm</b>", "url": "https://www.educba.com/perceptron-learning-algorithm/", "isFamilyFriendly": true, "displayUrl": "https://www.educba.com/<b>perceptron-learning-algorithm</b>", "snippet": "Perceptron Algorithm is used in a supervised <b>machine</b> <b>learning</b> domain for classification. In classification, there are two types of linear classification and no-linear classification. Linear classification is nothing but if we can classify the data set by drawing a simple straight line then it can be called a linear binary classifier. Whereas if we cannot classify the data set by drawing a simple straight line then it can be called a non-linear binary classifier. Perceptron Algorithm Block ...", "dateLastCrawled": "2022-01-31T13:47:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "The <b>Most Important Data Science Tool</b> for Market and Customer ...", "url": "https://towardsdatascience.com/the-most-important-data-science-tool-for-market-and-customer-segmentation-c9709ca0b64a", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/the-<b>most-important-data-science-tool</b>-for-market-and...", "snippet": "Unsupervised <b>machine</b> <b>learning</b>: you don\u2019t need to provide labelled data to the algorithm on how to group the customers. It will scan through all information associated with each customer and learn the best way to group them together. A predefined number of groups: you need to tell K-means how many groups to form. This is the only input needed from you. Here is an <b>analogy</b> to the above concepts: Imagine you have some toys and without providing further instruction, you ask your kid to separate ...", "dateLastCrawled": "2022-02-01T11:18:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "A Gentle Introduction to Graph Neural Networks", "url": "https://distill.pub/2021/gnn-intro/", "isFamilyFriendly": true, "displayUrl": "https://distill.pub/2021/gnn-intro", "snippet": "The dataset can be used in other graph problems like unsupervised <b>learning</b>. Following the image <b>analogy</b>, node-level prediction problems are analogous to image segmentation, where we are trying to label the role of each pixel in an image. With text, a similar task would be predicting the parts-of-speech of each word in a sentence (e.g. noun, verb, adverb, etc). Edge-level task. The remaining prediction problem in graphs is edge prediction. One example of edge-level inference is in image scene ...", "dateLastCrawled": "2022-02-02T17:18:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Supervised <b>Learning</b> Interview Questions - Part 1/4 - The Data Monk", "url": "https://thedatamonk.com/supervised-learning-interview-questions/", "isFamilyFriendly": true, "displayUrl": "https://thedatamonk.com/supervised-<b>learning</b>-interview-questions", "snippet": "It\u2019s a bot. This is <b>machine</b> <b>learning</b> e. Driverless car is a direct product of <b>machine</b> <b>learning</b> and artificial intelligence 2. What is Supervised <b>Learning</b>? \u2013 We can go on and on with the basic definition of Supervised <b>learning</b>, but that would defeat the purpose of the book. Supervised means a thing which you can monitor. Supervised <b>learning</b> ...", "dateLastCrawled": "2022-01-17T14:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Apache Arrow Explained by Dremio</b> \u2014 Computer programming \u2014 DATA SCIENCE", "url": "https://datascience.eu/computer-programming/apache-arrow-explained-by-dremio/", "isFamilyFriendly": true, "displayUrl": "https://datascience.eu/computer-programming/<b>apache-arrow-explained-by-dremio</b>", "snippet": "To use an <b>analogy</b>, consider traveling to Europe on vacation before the EU. to go to 5 countries in 7 days, you\u2019ll calculate the very fact that you simply were getting to spend a couple of hours at the border for passport control, and you were getting to lose a number of your money within the currency exchange. this is often how working with data in-memory works without Arrow: enormous inefficiencies exist to serialize and de-serialize data structures, and a replica is formed within the ...", "dateLastCrawled": "2022-02-02T17:40:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>What Is a Decision Tree</b> and How Is It Used?", "url": "https://careerfoundry.com/en/blog/data-analytics/what-is-a-decision-tree/", "isFamilyFriendly": true, "displayUrl": "https://careerfoundry.com/en/blog/data-analytics/<b>what-is-a-decision-tree</b>", "snippet": "Luckily, a lot of decision tree terminology follows the tree <b>analogy</b>, which makes it much easier to remember! Some other terms you might come across will include: Root nodes. In the diagram above, the blue decision node is what we call a \u2018root node.\u2019 This is always the first node in the path. It is the node from which all other decision, chance, and end nodes eventually branch. Leaf nodes. In the diagram above, the lilac end nodes are what we call \u2018leaf nodes.\u2019 These show the end of ...", "dateLastCrawled": "2022-02-02T05:38:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Magnet Shuffle Service: Push-based Shuffle at LinkedIn", "url": "https://www.slideshare.net/databricks/magnet-shuffle-service-pushbased-shuffle-at-linkedin", "isFamilyFriendly": true, "displayUrl": "https://www.slideshare.net/databricks/magnet-shuffle-service-pushbased-shuffle-at-linkedin", "snippet": "Python <b>Machine</b> <b>Learning</b> Sebastian Raschka (4/5) Free. Guerrilla Data Analysis Using Microsoft Excel: 2nd Edition Covering Excel 2010/2013 Oz du Soleil (3/5) Free. Data Model Patterns: A Metadata Map David C. Hay (3/5) Free . Outnumbered: From Facebook and Google to Fake News and Filter-bubbles \u2013 The Algorithms That Control Our Lives David Sumpter (5/5) Free. Dynamic Models in Biology Stephen P. Ellner (4/5) Free. Agent-Based and Individual-Based Modeling: A Practical Introduction, Second ...", "dateLastCrawled": "2021-12-29T02:16:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Buckets Partitioning Vs Bucketing <b>Bucketing is similar</b> to partition ...", "url": "https://www.coursehero.com/file/p2kehm0s/Buckets-Partitioning-Vs-Bucketing-Bucketing-is-similar-to-partition-However/", "isFamilyFriendly": true, "displayUrl": "https://www.coursehero.com/file/p2kehm0s/Buckets-Partitioning-Vs-Bucketing-Bucketing...", "snippet": "<b>Machine</b> <b>Learning</b> Definition Arthur Samuel (1959), <b>Machine</b> <b>Learning</b>: It is a field of study that gives computers the ability to learn without being explicitly programmed. Tom Mitchell (1998), Well-posed <b>Learning</b> Problem: A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its performance on T, as measured by P, improves with experience E. Example Tom\u2019s definition is the latest <b>Machine</b> <b>Learning</b> Definition. According to Tom\u2019s ...", "dateLastCrawled": "2022-01-21T17:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "What is <b>Bucketing in Hive? [Example</b> Included] - <b>Okera</b>", "url": "https://www.okera.com/blogs/using-apache-hive-bucketing-with-okera/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>okera</b>.com/blogs/using-apache-hive-bucketing-with-<b>okera</b>", "snippet": "<b>Bucketing is similar</b> to partitioning \u2013 in both cases, data is segregated and stored \u2013 but there are a few key differences. Partitioning is based on a column that is repeated in the dataset and involves grouping data by a particular value of the partition column. While bucketing organizes data by a range of values, mainly involving primary key or non-repeated values in a dataset. Partitioning is most effective for low volume data, as it carries the possibility of too many small partition ...", "dateLastCrawled": "2022-01-31T03:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Understanding bucketing in Spark | Optimizing Databricks Workloads", "url": "https://subscription.packtpub.com/book/mobile/9781801819077/7/ch07lvl1sec42/understanding-bucketing-in-spark", "isFamilyFriendly": true, "displayUrl": "https://subscription.packtpub.com/book/mobile/9781801819077/7/ch07lvl1sec42/...", "snippet": "Bucketing is an optimization technique that helps to prevent shuffling and sorting of data during compute-heavy operations such as joins. Based on the bucketing columns we specify, data is collected in a number of bins.<b>Bucketing is similar</b> to partitioning, but in the case of partitioning, we create directories for each partition.", "dateLastCrawled": "2022-01-24T02:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Hive Infer Schema From Csv", "url": "https://groups.google.com/g/ze2lrbt/c/_4TqWK58xN0", "isFamilyFriendly": true, "displayUrl": "https://groups.google.com/g/ze2lrbt/c/_4TqWK58xN0", "snippet": "<b>Bucketing is similar</b> to partitioning, they allow you to run some schema update operations while preventing other such operations. All schemas from csv data are creating a new. You can create many tables under a single schema. There is therefore need to terrify the data into mere external table then it refers to perform data file from different original location and the file already contains the data. Occasionally, apps, and to provide you with relevant advertising. Complex grouping ...", "dateLastCrawled": "2022-01-25T09:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Tips and <b>Best Practices to Take Advantage of</b> Spark 2.x | HPE Developer ...", "url": "https://developer.hpe.com/blog/tips-and-best-practices-to-take-advantage-of-spark-2x/", "isFamilyFriendly": true, "displayUrl": "https://developer.hpe.com/blog/tips-and-<b>best-practices-to-take-advantage-of</b>-spark-2x", "snippet": "<b>Bucketing is similar</b> to partitioning, but partitioning creates a directory for each partition, whereas bucketing distributes data across a fixed number of buckets by a hash on the bucket value. Tables can be bucketed on more than one value and bucketing can be used with or without partitioning. As an example with the flight dataset, here is the code to persist a flights DataFrame as a table, consisting of Parquet files partitioned by the src column and bucketed by the dst and carrier columns ...", "dateLastCrawled": "2022-01-30T22:21:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "azure-docs/apache-spark-performance.md at master - <b>GitHub</b>", "url": "https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/synapse-analytics/spark/apache-spark-performance.md", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/MicrosoftDocs/azure-docs/blob/master/articles/synapse-analytics/...", "snippet": "<b>Bucketing is similar</b> to data partitioning, but each bucket can hold a set of column values rather than just one. Bucketing works well for partitioning on large (in the millions or more) numbers of values, such as product identifiers. A bucket is determined by hashing the bucket key of the row. Bucketed tables offer unique optimizations because they store metadata about how they were bucketed and sorted.", "dateLastCrawled": "2021-12-28T18:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "hdinsight-docs/hdinsight-spark-perf.md at master - <b>GitHub</b>", "url": "https://github.com/ZoinerTejada/hdinsight-docs/blob/master/hdinsight-spark-perf.md", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/ZoinerTejada/hdinsight-docs/blob/master/hdinsight-spark-perf.md", "snippet": "<b>Learning</b> Lab \u2192 Open source ... <b>Bucketing is similar</b> to data partitioning, but each bucket can hold a set of column values (bucket), instead of just one. This is great for partitioning on large (in the millions +) number of values, like product Ids. A bucket is determined by hashing the bucket key of the row. Bucketed tables offer unique optimizations because they store metadata about how they were bucketed and sorted. Some advanced bucketing features are: Query optimization based on ...", "dateLastCrawled": "2021-11-02T05:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Elasticsearch explained - Programmer Sought", "url": "https://www.programmersought.com/article/40534519809/", "isFamilyFriendly": true, "displayUrl": "https://www.programmersought.com/article/40534519809", "snippet": "<b>Learning</b> objectives. Install Elasticsearch independently; Will use Rest&#39;s API operation index; Will use Rest&#39;s API to query data; Will use Rest&#39;s API to aggregate data; 1. Introduction and installation of Elasticsearch 1.1. Introduction 1.1.1.Elastic. Elastic&#39;s official website. Elastic has a complete product line and solutions: Elasticsearch, Kibana, Logstash, etc. The three mentioned earlier are the ELK technology stacks that everyone often talks about. 1.1.2.Elasticsearch. Elasticsearch ...", "dateLastCrawled": "2021-05-02T18:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Big data analytics -hive</b>", "url": "https://www.slideshare.net/karthikakarthi9/big-data-analytics-hive", "isFamilyFriendly": true, "displayUrl": "https://www.slideshare.net/karthikakarthi9/<b>big-data-analytics-hive</b>", "snippet": "<b>Learning</b> Python Design Patterns Gennadiy Zlobin (4/5) Free. Guerrilla Data Analysis Using Microsoft Excel: 2nd Edition Covering Excel 2010/2013 Oz du Soleil (3/5) Free. Python <b>Machine</b> <b>Learning</b> Sebastian Raschka (3.5/5) Free. Outnumbered: From Facebook and Google to Fake News and Filter-bubbles \u2013 The Algorithms That Control Our Lives David Sumpter (4.5/5) Free. Data Model Patterns: A Metadata Map David C. Hay (3/5) Free. Data Visualization: a successful design process Andy Kirk (4/5) Free ...", "dateLastCrawled": "2021-10-12T22:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "Data Engineering: Mining, Information and Intelligence (International ...", "url": "https://epdf.pub/data-engineering-mining-information-and-intelligence-international-series-in-ope.html", "isFamilyFriendly": true, "displayUrl": "https://epdf.pub/data-engineering-mining-information-and-intelligence-international...", "snippet": "Data Engineering: Mining, Information and Intelligence (International Series in Operations Research &amp; Management Science) Home ; Data Engineering: Mining, Information and Intelligence (International Series in Operations Research &amp; Management Science)", "dateLastCrawled": "2021-11-21T14:58:00.0000000Z", "language": "en", "isNavigational": false}], [], [], []], "all_bing_queries": ["+(bucketing)  is like +(sorting)", "+(bucketing) is similar to +(sorting)", "+(bucketing) can be thought of as +(sorting)", "+(bucketing) can be compared to +(sorting)", "machine learning +(bucketing AND analogy)", "machine learning +(\"bucketing is like\")", "machine learning +(\"bucketing is similar\")", "machine learning +(\"just as bucketing\")", "machine learning +(\"bucketing can be thought of as\")", "machine learning +(\"bucketing can be compared to\")"]}