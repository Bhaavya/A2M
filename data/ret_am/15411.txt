{"src_spec_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "1X1 <b>Convolution</b>, CNN, CV, Neural Networks | Analytics Vidhya", "url": "https://medium.com/analytics-vidhya/talented-mr-1x1-comprehensive-look-at-1x1-convolution-in-deep-learning-f6b355825578", "isFamilyFriendly": true, "displayUrl": "https://medium.com/analytics-vidhya/talented-mr-1x1-comprehensive-look-at-1x1...", "snippet": "In their paper, He et all explains (page 6) how a bottle neck <b>layer</b> designed using a sequence of 3 <b>convolutional</b> layers with <b>filters</b> the size of 1X1, 3X3, followed by 1X1 respectively to reduce ...", "dateLastCrawled": "2022-02-02T22:42:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Various <b>Types of</b> <b>Convolutional</b> Neural Network | by Himadri Sankar ...", "url": "https://towardsdatascience.com/various-types-of-convolutional-neural-network-8b00c9a08a1b", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/various-<b>types-of</b>-<b>convolutional</b>-neural-network-8b00c9a08a1b", "snippet": "The Third <b>Layer</b> is also a <b>Convolutional</b> <b>layer</b> consisting of 16 <b>filters</b> of size 5 X 5 and stride of 1. The Fourth <b>Layer</b> is again an average-pooling <b>layer</b> of size 2 X 2 and stride of 2. The Fifth <b>Layer</b> is connecting the output of the fourth <b>layer</b> (400 parameters) to a fully connected <b>layer</b> of 120 nodes. The Sixth <b>Layer</b> is a similarly fully-connected <b>layer</b> consisting of 84 nodes, deriving from the outputs of the 120 nodes of the fifth-<b>layer</b>. The Seventh <b>Layer</b> (, or the last <b>layer</b>) consist of ...", "dateLastCrawled": "2022-01-30T22:52:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Visualizing parts of <b>Convolutional</b> Neural Networks using Keras and Cats ...", "url": "https://medium.com/hackernoon/visualizing-parts-of-convolutional-neural-networks-using-keras-and-cats-5cc01b214e59", "isFamilyFriendly": true, "displayUrl": "https://medium.com/hackernoon/visualizing-parts-of-<b>convolutional</b>-neural-networks-using...", "snippet": "So what does he look <b>like</b> after one <b>layer</b> of convolution? 1 convcat Here is the cat with a kernel size of 3x3 and 3 <b>filters</b> (if we have more than 3 filter layers we cant plot a 2d image of the cat.", "dateLastCrawled": "2022-01-12T16:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Understanding Locally Connected Layers In</b> <b>Convolutional</b> Neural Networks ...", "url": "https://prateekvjoshi.com/2016/04/12/understanding-locally-connected-layers-in-convolutional-neural-networks/", "isFamilyFriendly": true, "displayUrl": "https://prateekvjoshi.com/2016/04/12/<b>understanding-locally-connected-layers-in</b>...", "snippet": "Let\u2019s see what a fully connected and <b>convolutional</b> layers look <b>like</b>: The one on the left is the fully connected <b>layer</b>. The figure on the right indicates <b>convolutional</b> <b>layer</b> operating on a 2D image. This gives a lot of freedom for the neural network to train and optimize all the parameters. But at the same time, it\u2019s computationally intensive! So in order to take advantage of the 2D structure of image data, researchers came up with <b>convolutional</b> layers. On each 2D array of data, we train ...", "dateLastCrawled": "2022-02-02T05:00:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Convolutional Neural Networks (CNNs) in</b> 5 minutes - Glass Box", "url": "https://glassboxmedicine.com/2020/08/03/convolutional-neural-networks-cnns-in-5-minutes/", "isFamilyFriendly": true, "displayUrl": "https://glassboxmedicine.com/2020/08/03/<b>convolutional-neural-networks-cnns-in</b>-5-minutes", "snippet": "A <b>convolutional</b> neural network involves applying this convolution operation many time, with many different <b>filters</b>. This figure shows the first <b>layer</b> of a CNN: In the diagram above, a CT scan slice (slice source: Radiopedia) is the input to a CNN. A <b>convolutional</b> filter labeled \u201cfilter 1\u201d is shown in red. This filter slides across the input ...", "dateLastCrawled": "2022-02-03T03:08:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "A <b>Convolutional</b> Neural NetworksConvolutional neural networks CNN are a ...", "url": "https://studyscroll.com/a-convolutional-neural-networksconvolutional-neural-networks-cnn-are-a-kind-of-the-neural-essay", "isFamilyFriendly": true, "displayUrl": "https://studyscroll.com/a-<b>convolutional</b>-neural-networks<b>convolutional</b>-neural-networks...", "snippet": "The picture is handed via a stack of <b>convolutional</b> layers, where we use <b>filters</b> with a really small receptive subject 3 X three (which is the smallest size to capture the notion of left/ proper, up/down, center). Only max pooling is used in VGG-16. The pooling kernel size is all the time 2*2 and the stride is all the time 2 in VGG-16. Fully linked layers are implemented utilizing convolution in VGG-16. Its measurement is shown within the format n1*n2, the place n1 is the dimensions of the ...", "dateLastCrawled": "2022-01-14T23:18:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Visualizing parts of Convolutional Neural Networks</b> using Keras and Cats ...", "url": "https://hackernoon.com/visualizing-parts-of-convolutional-neural-networks-using-keras-and-cats-5cc01b214e59", "isFamilyFriendly": true, "displayUrl": "https://hackernoon.com/<b>visualizing-parts-of-convolutional-neural-networks</b>-using-keras...", "snippet": "There are a <b>bunch</b> of reason that people <b>like</b> relus, but a big one is because they are really cheap to perform, if the number is negative: zero, else: the number. Being cheap makes it faster to train networks. Recap. Three main types of layers in CNNs: <b>Convolutional</b>, Pooling, Activation; <b>Convolutional</b> layers multiply kernel value by the image window and optimize the kernel weights over time using gradient descent; Pooling layers describe a window of an image using a single value which is the ...", "dateLastCrawled": "2022-01-29T17:34:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "How are <b>weights</b> represented in a convolution neural network? - Data ...", "url": "https://datascience.stackexchange.com/questions/18341/how-are-weights-represented-in-a-convolution-neural-network", "isFamilyFriendly": true, "displayUrl": "https://datascience.stackexchange.com/questions/18341", "snippet": "In <b>convolutional</b> layers the <b>weights</b> are represented as the multiplicative factor of the <b>filters</b>. For example, if we have the input 2D matrix in green. with the convolution filter. Each matrix element in the convolution filter is the <b>weights</b> that are being trained. These <b>weights</b> will impact the extracted convolved features as.", "dateLastCrawled": "2022-02-02T05:54:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Visualising Keras CNN final trained filters</b> at each <b>layer</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/54959454/visualising-keras-cnn-final-trained-filters-at-each-layer", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/54959454", "snippet": "the same question was asked by someone : visualize learned <b>filters</b> in keras cnn. But it has no answers, so I asked it again. I know that Keras has default <b>filters</b> at each <b>layer</b> which are then modified and adjusted. After all modification, I want to see how these <b>filters</b> (32 or 64 or any number) look. I know that when prediction of new image ...", "dateLastCrawled": "2022-01-23T03:45:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Reducing Filter Size in Convolutional</b> Neural Network - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/43382499/reducing-filter-size-in-convolutional-neural-network", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/43382499", "snippet": "The picture makes it seem <b>like</b> individually, for every final output pixel, you would slide the original 3x3 convolution around all the right spots for the entire 3x3 intermediate <b>layer</b>, compute the 9-ops weighted sum each time (81 ops overall), and then compute the final 9-ops weighted sum to get a single pixel of output. Then go back to the original, bump the convolutions over by 1 spot, and repeat. But this is not correct, and would not &quot;re-use&quot; the intermediate convolution <b>layer</b>, rather ...", "dateLastCrawled": "2022-01-24T04:48:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Guide to <b>convolutional</b> neural networks", "url": "https://blog.superannotate.com/guide-to-convolutional-neural-networks/", "isFamilyFriendly": true, "displayUrl": "https://blog.superannotate.com/guide-to-<b>convolutional</b>-neural-networks", "snippet": "The <b>convolutional</b> <b>layer</b> serves as a feature extractor. At this level, a CNN performs a convolution, a multiplication of a two-dimensional array of weights \u2014 also referred to as filter or kernel \u2014 and an array of input data. By sliding the filter over the input image, the dot product, the sum of products, is taken between the filter and the parts of the input image with respect to the size of the filter. The output is termed as a feature map, which gives us information about the image ...", "dateLastCrawled": "2022-02-01T15:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Various <b>Types of</b> <b>Convolutional</b> Neural Network | by Himadri Sankar ...", "url": "https://towardsdatascience.com/various-types-of-convolutional-neural-network-8b00c9a08a1b", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/various-<b>types-of</b>-<b>convolutional</b>-neural-network-8b00c9a08a1b", "snippet": "The First <b>Convolutional</b> <b>Layer</b> consist of 6 <b>filters</b> of size 5 X 5 and a stride of 1. The Second <b>Layer</b> is a \u201csub-sampling\u201d or average-pooling <b>layer</b> of size 2 X 2 and a stride of 2. The Third <b>Layer</b> is also a <b>Convolutional</b> <b>layer</b> consisting of 16 <b>filters</b> of size 5 X 5 and stride of 1. The Fourth <b>Layer</b> is again an average-pooling <b>layer</b> of size 2 X 2 and stride of 2. The Fifth <b>Layer</b> is connecting the output of the fourth <b>layer</b> (400 parameters) to a fully connected <b>layer</b> of 120 nodes. The Sixth ...", "dateLastCrawled": "2022-01-30T22:52:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Five Powerful CNN Architectures</b>. Let\u2019s go over some of the powerful ...", "url": "https://medium.datadriveninvestor.com/five-powerful-cnn-architectures-b939c9ddd57b", "isFamilyFriendly": true, "displayUrl": "https://medium.datadriveninvestor.com/<b>five-powerful-cnn-architectures</b>-b939c9ddd57b", "snippet": "<b>Layer</b> 3: <b>Similar</b> to <b>Layer</b> 1, this <b>layer</b> is a <b>convolutional</b> <b>layer</b> with same configuration except it has 16 <b>filters</b> instead of 6. So the input from previous <b>layer</b> of size 14x14x6 gives an output of 10x10x16. Total params in <b>layer</b> = 5 * 5 * 16 + 16 = 416. <b>Layer</b> 4: Again, <b>similar</b> to <b>Layer</b> 2, this <b>layer</b> is a pooling <b>layer</b> with 16 <b>filters</b> this time around. Remember, the outputs are passed through sigmoid activation function. The input of size 10x10x16 from previous <b>layer</b> gets sub-sampled to 5x5x16 ...", "dateLastCrawled": "2022-02-02T12:43:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "4. <b>Convolutional</b> Neural Networks \u2013 The Deep Learning with PyTorch ...", "url": "http://devguis.com/4-convolutional-neural-networks-the-deep-learning-with-pytorch-workshop.html", "isFamilyFriendly": true, "displayUrl": "devguis.com/4-<b>convolutional</b>-neural-networks-the-deep-learning-with-pytorch-workshop.html", "snippet": "A <b>convolutional</b> <b>layer</b> with 16 <b>filters</b> of size 3, and stride and padding of 1. A pooling <b>layer</b> with a filter of size two and stride of size two as well. A <b>convolutional</b> <b>layer</b> with eight <b>filters</b> of size seven, stride of one, and padding of three. A pooling <b>layer</b> with a filter of size two and a stride of two as well. The output size of the matrix after going through each of these layers is as follows: After the first <b>convolutional</b> <b>layer</b>: output_width/height = ((256 \u2013 3) + 2 * 1)/1 + 1 = 256 ...", "dateLastCrawled": "2022-01-13T21:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Working <b>of a Convolutional Neural Network (CNN) And</b> The AlexNet ...", "url": "https://medium.com/@anqichen021/working-of-a-convolutional-neural-network-cnn-and-the-alexnet-architecture-d49ef158bcef", "isFamilyFriendly": true, "displayUrl": "https://medium.com/@anqichen021/working-<b>of-a-convolutional-neural-network-cnn-and</b>-the...", "snippet": "5th <b>convolutional</b> <b>layer</b>: in this <b>layer</b>, the output will be pooled. There are 256 kernels of size 3*3*384. There are 256 kernels of size 3*3*384. 1st, 2nd fully connected layers: each contains 4096 ...", "dateLastCrawled": "2022-02-03T14:57:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "How <b>Convolutional Neural Networks</b> Work.", "url": "https://www.wasswasam.com/deeplearning/2017/02/26/how-convnets-work.html", "isFamilyFriendly": true, "displayUrl": "https://www.wasswasam.com/deeplearning/2017/02/26/how-convnets-work.html", "snippet": "The process of convolving an image with a <b>bunch</b> <b>of filters</b> creates a stack of filtered images which is called a convolution <b>layer</b>. This <b>layer</b> can be stacked with other operations. Therefore in convolution an image becomes a stack of filtered images. Convolution is the first trick we use.", "dateLastCrawled": "2022-01-14T17:37:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Convolutional Neural</b> Networks (CNN) Introduction \u2013 Algobeans", "url": "https://algobeans.com/2016/01/26/introduction-to-convolutional-neural-network/", "isFamilyFriendly": true, "displayUrl": "https://algobeans.com/2016/01/26/introduction-to-<b>convolutional-neural</b>-network", "snippet": "Inputs from the convolution <b>layer</b> can be \u201csmoothened\u201d to reduce the sensitivity of the <b>filters</b> to noise and variations. This smoothing process is called subsampling, and can be achieved by taking averages or taking the maximum over a sample of the signal. Examples of subsampling methods (for image signals) include reducing the size of the ...", "dateLastCrawled": "2022-02-03T14:18:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Convolutional</b> neural network fault classification based on time-series ...", "url": "https://www.sciencedirect.com/science/article/pii/S0960148121017778", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/pii/S0960148121017778", "snippet": "In a <b>convolutional</b> <b>layer</b>, just <b>similar</b> to a neural network, each neuron is connected to a <b>bunch</b> of neurons in previous <b>layer</b> ... which act as <b>filters</b> to extract the features of the input signals. There is also a pooling <b>layer</b> in Fig. 6, which is responsible to down-sample the input in order to prevent overfitting and help to reduce the dimension of the space. At the last stage, there is a fully connected neural network (FCNN), which can be used to classify or regression in supervised ...", "dateLastCrawled": "2022-01-07T11:02:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "How <b>Convolution</b> Neural Networks interpret images | by Aseem Kashyap ...", "url": "https://towardsdatascience.com/how-convolution-neural-networks-interpret-images-1f99913070b2", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/how-<b>convolution</b>-neural-networks-interpret-images-1f...", "snippet": "Single Stride <b>Convolution</b>: This animation shows how a kernel (shown as a 3*3 moving square) scans through an input image from left to right and from top to bottom to result in an output image on the right.For a stride one <b>convolution</b>, the kernel moves a unit distance in each direction during every step. Source, Image free to share.. Each <b>convolution</b> <b>layer</b> is composed of many different <b>filters</b>, each of which extracts different features.", "dateLastCrawled": "2022-02-01T18:29:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "Recommending music on Spotify with deep learning - Sander Dieleman", "url": "https://benanne.github.io/2014/08/05/spotify-cnns.html", "isFamilyFriendly": true, "displayUrl": "https://benanne.github.io/2014/08/05/spotify-cnns.html", "snippet": "First, let\u2019s take a look at the first <b>convolutional</b> <b>layer</b>, which learns a set <b>of filters</b> that are applied directly to the input spectrograms. These <b>filters</b> are easy to visualize. They are shown in the image below. Click for a high resolution version (5584x562, ~600kB). Negative values are red, positive values are blue and white is zero. Note that each filter is only four frames wide. The individual <b>filters</b> are separated by dark red vertical lines.", "dateLastCrawled": "2022-01-31T16:46:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "1X1 <b>Convolution</b>, CNN, CV, Neural Networks | Analytics Vidhya", "url": "https://medium.com/analytics-vidhya/talented-mr-1x1-comprehensive-look-at-1x1-convolution-in-deep-learning-f6b355825578", "isFamilyFriendly": true, "displayUrl": "https://medium.com/analytics-vidhya/talented-mr-1x1-comprehensive-look-at-1x1...", "snippet": "In their paper, He et all explains (page 6) how a bottle neck <b>layer</b> designed using a sequence of 3 <b>convolutional</b> layers with <b>filters</b> the size of 1X1, 3X3, followed by 1X1 respectively to reduce ...", "dateLastCrawled": "2022-02-02T22:42:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Convolution Neural Network : A Modular Perspective</b> | State of the art", "url": "https://hmthanh.github.io/blog/deep-learning/2019/04/25/Convolution-Neural-Network-A-Modular-Perspective.html", "isFamilyFriendly": true, "displayUrl": "https://hmthanh.github.io/blog/deep-learning/2019/04/25/Convolution-Neural-Network-A...", "snippet": "At its most basic, <b>convolutional</b> neural networks <b>can</b> <b>be thought</b> of as a kind of neural network that uses many identical copies of the same neuron 1. This allows the network to have lots of neurons and express computationally large models while keeping the number of actual parameters \u2013 the values describing how neurons behave \u2013 that need to be learned fairly small.", "dateLastCrawled": "2022-01-03T07:11:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Convolutional Neural Networks for Particle Tracking</b>", "url": "https://indico.fnal.gov/event/13497/contributions/19843/attachments/12956/16392/Farrell_CVTracking_DSHEP.pdf", "isFamilyFriendly": true, "displayUrl": "https://indico.fnal.gov/event/13497/contributions/19843/attachments/12956/16392/...", "snippet": "\u2022 <b>Convolutional</b> <b>filters</b> <b>can</b> <b>be thought</b> of as track pattern matchers \u2022 Early layers look for track stubs \u2022 Later layers connect stubs together to build tracks \u2022 Learned representations are in reality optimized for the data =&gt; may be abstract and more compact than brute force pattern bank \u2022 The learned features <b>can</b> be used in a variety of ways \u2022 Extract out track parameters \u2022 Project back to detector image and classify hits 10 \u00e7 Input track image Stub features Segment features ...", "dateLastCrawled": "2021-12-07T18:48:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "4. <b>Convolutional</b> Neural Networks \u2013 The Deep Learning with PyTorch ...", "url": "http://devguis.com/4-convolutional-neural-networks-the-deep-learning-with-pytorch-workshop.html", "isFamilyFriendly": true, "displayUrl": "devguis.com/4-<b>convolutional</b>-neural-networks-the-deep-learning-with-pytorch-workshop.html", "snippet": "A deep <b>convolutional</b> network is one that takes an image as input and passes it through a series of <b>convolutional</b> layers with <b>filters</b>, pooling layers, and fully connected (FC) layers to finally apply a softmax activation function that classifies the image into a class label. This form of classification, as with ANNs, is performed by calculating the probability of the image belonging to each of the class labels by giving each class label a value between zero and one. The class label with the ...", "dateLastCrawled": "2022-01-13T21:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Convolutional</b> Networks | SeminarDeepLearning", "url": "https://mlai-bonn.github.io/SeminarDeepLearning/s05_ConvolutionalNetworks.html", "isFamilyFriendly": true, "displayUrl": "https://mlai-bonn.github.io/SeminarDeepLearning/s05_<b>Convolutional</b>Networks.html", "snippet": "In this sense, a <b>convolutional</b> <b>layer</b> <b>can</b> be considered as a fully-connected <b>layer</b> with an infinitely strong prior on its weights, since most of the weights are constrained to be zero (the corresponding Toeplitz matrix is very sparse) and the weights of one unit must be the same as those of its neighboring unit just shifted by stride (corresponding to the rows of Toeplitz matrix). Similarly, pooling <b>can</b> <b>be thought</b> of as a prior putting infinitely strong constraint that each unit should be ...", "dateLastCrawled": "2021-12-29T03:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "machine learning - <b>Convolutional neural networks</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/39130873/convolutional-neural-networks", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/39130873", "snippet": "The output <b>can</b> <b>be thought</b> of as a mapping of what features are present and in which location. Stacking <b>convolutional</b> layers allows subsequent layers to identify more complex features (you <b>can</b> think of each <b>convolutional</b> <b>layer</b> in the architecture as identifying features that are themselves compositions of features learned in previous layers).", "dateLastCrawled": "2022-01-22T19:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Convolutional Neural Networks: The Biologically-Inspired Model</b> | by ...", "url": "https://data-notes.co/convolutional-neural-networks-the-biologically-inspired-model-9b7e948f6987", "isFamilyFriendly": true, "displayUrl": "https://data-notes.co/<b>convolutional-neural-networks-the-biologically-inspired-model</b>-9b...", "snippet": "\u201cAt its most basic, <b>convolutional</b> neural networks <b>can</b> <b>be thought</b> of as a kind of neural network that uses many identical copies of the same neuron. This allows the network to have lots of neurons and express computationally large models while keeping the number of actual parameters \u2014 the values describing how neurons behave \u2014 that need to be learned fairly small.\u201d", "dateLastCrawled": "2022-01-14T03:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Convolutional Neural Networks: The Biologically-Inspired Model</b> | by ...", "url": "https://towardsdatascience.com/convolutional-neural-networks-the-biologically-inspired-model-f2d23a301f71", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/<b>convolutional-neural-networks-the-biologically-inspired</b>...", "snippet": "Then, I use max-pooling to reduce the size of the array. For instance, I <b>can</b> look at each 2 x 2 square of the array and keep the biggest number. After being downsampled, the small array then is fed into the fully-<b>convolutional</b> <b>layer</b> to make prediction, say whether it is an image of Harry, Ron, Hermione, the elves, the newspaper, the chair etc.", "dateLastCrawled": "2022-01-23T15:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Convolutional Neural Networks: The Biologically-Inspired Model</b> | Codementor", "url": "https://www.codementor.io/@james_aka_yale/convolutional-neural-networks-the-biologically-inspired-model-iq6s48zms", "isFamilyFriendly": true, "displayUrl": "https://www.codementor.io/@james_aka_yale/<b>convolutional</b>-neural-networks-the...", "snippet": "Then, I use max-pooling to reduce the size of the array. For instance, I <b>can</b> look at each 2 x 2 square of the array and keep the biggest number. After being downsampled, the small array then is fed into the fully-<b>convolutional</b> <b>layer</b> to make predictions, say, whether it is an image of Harry, Ron, Hermione, the elves, the newspaper, the chair etc.", "dateLastCrawled": "2021-12-30T23:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Reducing Filter Size in Convolutional</b> Neural Network - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/43382499/reducing-filter-size-in-convolutional-neural-network", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/43382499", "snippet": "The picture makes it seem like individually, for every final output pixel, you would slide the original 3x3 convolution around all the right spots for the entire 3x3 intermediate <b>layer</b>, compute the 9-ops weighted sum each time (81 ops overall), and then compute the final 9-ops weighted sum to get a single pixel of output. Then go back to the original, bump the convolutions over by 1 spot, and repeat. But this is not correct, and would not &quot;re-use&quot; the intermediate convolution <b>layer</b>, rather ...", "dateLastCrawled": "2022-01-24T04:48:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "20 Questions to Test your Skills on CNN (<b>Convolutional</b> Neural Networks)", "url": "https://www.analyticsvidhya.com/blog/2021/05/20-questions-to-test-your-skills-on-cnn-convolutional-neural-networks/", "isFamilyFriendly": true, "displayUrl": "https://www.analyticsvidhya.com/blog/2021/05/20-questions-to-test-your-skills-on-cnn...", "snippet": "CNN <b>can</b> learn multiple layers of feature representations of an image by applying <b>filters</b>, or transformations. 3. In CNN, the number of parameters for the network to learn is significantly lower than the multilayer neural networks since the number of units in the network decreases, therefore reducing the chance of overfitting. 4. Also, CNN considers the context information in the small neighborhood and due to this feature, these are very important to achieve a better prediction in data like ...", "dateLastCrawled": "2022-02-03T07:18:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Convolutional Neural Network</b>. <b>Convolutional Neural</b> Networks are very ...", "url": "https://medium.com/@eltronicsvilla17/convolutional-neural-network-1a02f472a90c", "isFamilyFriendly": true, "displayUrl": "https://medium.com/@eltronicsvilla17/<b>convolutional-neural-network</b>-1a02f472a90c", "snippet": "<b>Convolutional</b> <b>Layer</b>. Suppose that the input volume has size [32x32x3] , if the receptive field is 5x5 , then each neuron in the Conv <b>Layer</b> will have weights to a [5x5x3] region in the input volume ...", "dateLastCrawled": "2022-01-19T01:55:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Convolutional Neural Network (CNN</b>) questions", "url": "https://iq.opengenus.org/cnn-questions/", "isFamilyFriendly": true, "displayUrl": "https://iq.opengenus.org/cnn-questions", "snippet": "It is what makes CNN &#39;<b>convolutional</b>&#39;. Forcing the neurons of one <b>layer</b> to share weights, the forward pass becomes the equivalente of convolving a filter over the image to produce a new image. Then the training phase become a task of learning <b>filters</b>, deciding what features you should look for in the data.", "dateLastCrawled": "2022-02-02T15:55:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "An <b>Overview of Convolutional Neural Network: Its Architecture</b> and ...", "url": "https://www.preprints.org/manuscript/201811.0546/v4/download", "isFamilyFriendly": true, "displayUrl": "https://www.preprints.org/manuscript/201811.0546/v4/download", "snippet": "that once a <b>bunch</b> of parameters of the same nerve cell is affected to the same space within the entirely different position of the preorder <b>layer</b>, the options relative to the translational data invariableness are obtained [4]. The neocognitron in 1980 is taken into account as the precedent of ConvNets. Then LeCun et al. [5, 6] design and established the framework of CNN by developing seven learned layers including four <b>convolutional</b> and pooling layers followed by three fully-connected layers ...", "dateLastCrawled": "2022-01-23T11:36:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Convolutional Neural Networks: The Biologically-Inspired Model</b> | Codementor", "url": "https://www.codementor.io/@james_aka_yale/convolutional-neural-networks-the-biologically-inspired-model-iq6s48zms", "isFamilyFriendly": true, "displayUrl": "https://www.codementor.io/@james_aka_yale/<b>convolutional</b>-neural-networks-the...", "snippet": "<b>Compared</b> to LeNet, AlexNet is deeper, has more <b>filters</b> per <b>layer</b>, and is also equipped with stacked <b>convolutional</b> layers. Looking at AlexNet&#39;s architecture below, you <b>can</b> identify the main differences between it and LeNet: The number of processing and trainable layers: AlexNet includes five <b>convolutional</b> layers, three max-pooling layers, and three fully-connected layers. LeNet only has two <b>convolutional</b> layers, two max-pooling layers, and three fully-connected layers. ReLU Non-Linearity ...", "dateLastCrawled": "2021-12-30T23:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "AI <b>Starter- Build your first Convolution neural network</b> in Keras from ...", "url": "https://pallawi-ds.medium.com/ai-starter-build-your-first-convolution-neural-network-in-keras-from-scratch-to-perform-a059eaa6d4ff", "isFamilyFriendly": true, "displayUrl": "https://pallawi-ds.<b>medium</b>.com/ai-<b>starter-build-your-first-convolution-neural-network</b>...", "snippet": "In <b>convolutional</b> neural networks (CNN) every convolution network <b>layer</b> acts as a detection and learning filter for the presence of specific features or patterns extracted from the training data and as these <b>filters</b> convolve with a huge number of training images they detect and simultaneously learn those features from the training images. For example in an image of a human face, its lips, eyes, nose, eyebrows, face shape, skin color and more could be a feature.", "dateLastCrawled": "2021-12-22T14:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "[<b>MLWP] Convolutional Neural Network (CNN) using</b> Pytorch \u2013 Taeyong Kim ...", "url": "https://reliabilitycee.wordpress.com/2020/04/18/mlwp-convolutional-neural-network-cnn-using-pytorch/", "isFamilyFriendly": true, "displayUrl": "https://reliabilitycee.wordpress.com/2020/04/18/<b>mlwp-convolutional-neural-network-cnn</b>...", "snippet": "A picture is represented as a <b>bunch</b> of numbers, so-called pixels. An example picture (cat) is represented as 7\u00d77 and a filter of 3\u00d73 (yellow square) is assumed. Note that values in the <b>filters</b> are randomly generated. Then, the multiplication between the filter and the cat picture produces 5\u00d75 tensors as an output as shown in Figure 2 by moving the filter with the predefined stride (In this example stride is set to 1).", "dateLastCrawled": "2022-01-23T22:00:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Keras and <b>Convolutional</b> Neural Networks (CNNs) - PyImageSearch", "url": "https://www.pyimagesearch.com/2018/04/16/keras-and-convolutional-neural-networks-cnns/", "isFamilyFriendly": true, "displayUrl": "https://www.pyimagesearch.com/2018/04/16/keras-and-<b>convolutional</b>-neural-networks-cnns", "snippet": "Keras and <b>Convolutional</b> Neural Networks. 2020-05-13 Update: This blog post is now TensorFlow 2+ compatible! In last week\u2019s blog post we learned how we <b>can</b> quickly build a deep learning image dataset \u2014 we used the procedure and code covered in the post to gather, download, and organize our images on disk.. Now that we have our images downloaded and organized, the next step is to train a <b>Convolutional</b> Neural Network (CNN) on top of the data.", "dateLastCrawled": "2022-01-30T20:38:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "QUALITY EVALUATION OF <b>LAND-COVER CLASSIFICATION USING CONVOLUTIONAL</b> ...", "url": "https://www.int-arch-photogramm-remote-sens-spatial-inf-sci.net/XLII-3/257/2018/isprs-archives-XLII-3-257-2018.pdf", "isFamilyFriendly": true, "displayUrl": "https://www.int-arch-photogramm-remote-sens-spatial-inf-sci.net/XLII-3/257/2018/isprs...", "snippet": "<b>CONVOLUTIONAL</b> NEURAL NETWORK Dang Yu1,Zhang Jixian1*, Zhao Yousong1,Luo Fujun1,Ma Wei1,Yu Fan2 ... learned by the CNN model that are much more complex and <b>can</b>\u2019t be understood as existing <b>filters</b>. The method using CNN approach as the core algorithm serves quality-evaluation tasks well since it calculates a <b>bunch</b> of outputs which directly represent the image\u2019s membership grade to certain classes. An automatic quality evaluation approach for the land-cover DLG-DOM coupling data (DLG for ...", "dateLastCrawled": "2022-01-18T07:23:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>GitHub</b> - <b>zenetio/follow-me-deeplearning</b>: Drone using Fully ...", "url": "https://github.com/zenetio/follow-me-deeplearning", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/zenetio/follow-me-deeplearning", "snippet": "Note that for each <b>layer</b>, the number <b>of filters</b> is the halth when <b>compared</b> with the previous <b>layer</b> which decrease the network depth, to make the output size the same when <b>compared</b> with the relative <b>layer</b> in downsampling process. The function fcn_model, in notebook, creates the model as follow. def fcn_model(inputs, num_classes): strides = 2 <b>filters</b> = 32 filter_size = 2 # FilterSize defines the size of the local regions to which the neurons connect in the input. kernel_size = 3 # Remember ...", "dateLastCrawled": "2022-01-18T07:21:00.0000000Z", "language": "en", "isNavigational": false}]], "gen_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Understanding graph neural networks by way of <b>convolutional</b> nets | by ...", "url": "https://medium.com/dida-machine-learning/understanding-graph-neural-networks-by-way-of-convolutional-nets-d7c2f33e8c62", "isFamilyFriendly": true, "displayUrl": "https://medium.com/dida-<b>machine</b>-<b>learning</b>/understanding-graph-neural-networks-by-way-of...", "snippet": "A single <b>convolutional</b> <b>layer</b> is simply a procedure that computes, for each pixel p of an image, an output, or label, out(p) based on inputs, or attributes, in(p) of the pixel in question and of ...", "dateLastCrawled": "2022-01-03T00:41:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Graph Convolutions and <b>Machine</b> <b>Learning</b>", "url": "https://dash.harvard.edu/bitstream/handle/1/38811540/OTNESS-SENIORTHESIS-2018.pdf?sequence=1", "isFamilyFriendly": true, "displayUrl": "https://dash.harvard.edu/bitstream/handle/1/38811540/OTNESS-SENIORTHESIS-2018.pdf?...", "snippet": "A <b>convolutional</b> <b>layer</b> with support Kproducing Moutputs requires M\u00d7K parameters to encode. For small K, this is much more e\u02ddcient and independent of the size of the input data, which can be large. This reduction in parameters also serves to reduce the amount of training data needed to tune a network. 1.2 Deep <b>Learning</b> on Non-Euclidean Data The data sets discussed above as illustrations of deep <b>learning</b> problems have a regular, Euclidean structure. The input values of images and audio are ...", "dateLastCrawled": "2022-01-09T08:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Convolutional Neural Networks and their components for computer vision</b> ...", "url": "https://www.machinecurve.com/index.php/2018/12/07/convolutional-neural-networks-and-their-components-for-computer-vision/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>machine</b>curve.com/index.php/2018/12/07/<b>convolutional</b>-neural-networks-and...", "snippet": "<b>Machine</b> <b>learning</b> (and consequently deep <b>learning</b>) can be used to train computers to see things. We know that <b>machine</b> <b>learning</b> is about feeding examples to machines, after which they derive the patterns in these examples themselves. Consequently, we can see that using <b>machine</b> <b>learning</b> for computer vision equals showing machines enough examples so that they can learn to recognize them on their own, for new data. In deep <b>learning</b>, we use deep neural networks to learn machines to recognize ...", "dateLastCrawled": "2022-01-30T13:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Machine Learning by Analogy</b> - SlideShare", "url": "https://www.slideshare.net/ColleenFarrelly/machine-learning-by-analogy-59094152", "isFamilyFriendly": true, "displayUrl": "https://www.slideshare.net/ColleenFarrelly/<b>machine-learning-by-analogy</b>-59094152", "snippet": "<b>Machine Learning by Analogy</b> 1. Colleen M. Farrelly 2. Many <b>machine</b> <b>learning</b> methods exist in the literature and in industry. What works well for one problem may not work well for the next problem. In addition to poor model fit, an incorrect application of methods can lead to incorrect inference. Implications for data-driven business decisions. Low future confidence in data science and its results. Lower quality software products. Understanding the intuition and mathematics behind these ...", "dateLastCrawled": "2022-01-31T07:23:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "(PDF) <b>Machine</b> <b>Learning</b> by <b>Analogy</b> - ResearchGate", "url": "https://www.researchgate.net/publication/321341661_Machine_Learning_by_Analogy", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/321341661_<b>Machine</b>_<b>Learning</b>_by_<b>Analogy</b>", "snippet": "TensorFlow is an interface for expressing <b>machine</b> <b>learning</b> algorithms, and an implementation for executing such algorithms. A computation expressed using TensorFlow can be executed with little or ...", "dateLastCrawled": "2022-01-04T23:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Machine</b> <b>Learning</b> vs. Deep <b>Learning</b>: The Ultimate Comparison", "url": "https://www.iteratorshq.com/blog/machine-learning-vs-deep-learning-the-ultimate-comparison/", "isFamilyFriendly": true, "displayUrl": "https://www.iteratorshq.com/blog/<b>machine</b>-<b>learning</b>-vs-deep-<b>learning</b>-the-ultimate-comparison", "snippet": "An input <b>layer</b>, an output <b>layer</b>, and a hidden <b>layer</b> with numerous <b>convolutional</b> layers, pooling layers, fully-connected layers, and normalizing layers make up a CNN\u2019s layers. The elimination of restrictions and improvements in image processing performance results in a system that is significantly more efficient and easier to train for image analysis and natural language processing.", "dateLastCrawled": "2022-01-29T08:50:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Convolutional Neural Networks (CNN): Step</b> 2 - <b>Machine</b> <b>Learning</b> | AI", "url": "https://www.superdatascience.com/blogs/convolutional-neural-networks-cnn-step-2-max-pooling/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>superdatascience</b>.com/blogs/<b>convolutional-neural-networks-cnn-step</b>-2-max...", "snippet": "The purpose of max pooling is enabling the <b>convolutional</b> neural network to detect the cheetah when presented with the image in any manner. This second example is more advanced. Here we have 6 different images of 6 different cheetahs (or 5, there is 1 that seems to appear in 2 photos) and they are each posing differently in different settings and from different angles. Again, max pooling is concerned with teaching your <b>convolutional</b> neural network to recognize that despite all of these ...", "dateLastCrawled": "2022-01-28T12:15:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "What is the best <b>analogy</b> <b>for a Convolutional Neural Network that you</b> ...", "url": "https://www.quora.com/What-is-the-best-analogy-for-a-Convolutional-Neural-Network-that-you-ever-read", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/What-is-the-best-<b>analogy</b>-<b>for-a-Convolutional-Neural-Network-that</b>...", "snippet": "Answer: The following intuition was given by Prof. Yann LeCun in one of his lectures: (He explained it at a very high level, I\u2019ve filled in the details for better exposition.) Suppose you have a set of hand-coded rules for a classification task. Then, you can rewrite them in terms of AND and OR...", "dateLastCrawled": "2022-01-14T13:33:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Using Deep <b>Learning</b> for Image Analogies | by Tomer Amit | Towards Data ...", "url": "https://towardsdatascience.com/using-deep-learning-for-image-analogies-aa2e7d7af337", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/using-deep-<b>learning</b>-for-image-analogies-aa2e7d7af337", "snippet": "(diagram taken from deeplearning.ai course by Andrew Ng, \u201c<b>Convolutional</b> Neural Networks\u201d). At the end of the network we have an additional flattening <b>layer</b>, two fully connected dense layers, and a softmax <b>layer</b>, which outputs a probability P(x\u2208i), that the image belongs to the i th label, for i=1,\u2026,1000 (number of labels).. Word Embeddings and Analogies. Another concept, related to language processing and deep <b>learning</b>, is Word Embeddings.Given a large corpus of text, say with ...", "dateLastCrawled": "2022-01-19T03:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>machine</b> <b>learning</b> - Calculate the <b>Output</b> size in Convolution <b>layer</b> ...", "url": "https://stackoverflow.com/questions/53580088/calculate-the-output-size-in-convolution-layer", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/53580088", "snippet": "W - (K-1) Here W = Input size K = Filter size S = Stride P = Padding. But the second method is the standard to find the <b>output</b> size. Second method: ( ( (W - K + 2P)/S) + 1) Here W = Input size K = Filter size S = Stride P = Padding. Share. Follow this answer to receive notifications. edited Aug 31 &#39;21 at 12:24.", "dateLastCrawled": "2022-01-28T22:31:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "How to <b>use the UpSampling2D and Conv2DTranspose Layers</b> in Keras", "url": "https://machinelearningmastery.com/upsampling-and-transpose-convolution-layers-for-generative-adversarial-networks/", "isFamilyFriendly": true, "displayUrl": "https://<b>machinelearning</b>mastery.com/upsampling-and-transpose-convolution-layers-for...", "snippet": "The transpose <b>convolutional layer is like</b> an inverse convolutional layer. As such, you would intuitively think that a 2\u00d72 stride would upsample the input instead of downsample, which is exactly what happens. Stride or strides refers to the manner of a filter scanning across an input in a traditional convolutional layer. Whereas, in a transpose convolutional layer, stride refers to the manner in which outputs in the feature map are laid down. This effect can be implemented with a normal ...", "dateLastCrawled": "2022-02-02T15:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Building Models with PyTorch \u2014 PyTorch Tutorials 1.10.1+cu102 documentation", "url": "https://pytorch.org/tutorials/beginner/introyt/modelsyt_tutorial.html", "isFamilyFriendly": true, "displayUrl": "https://pytorch.org/tutorials/beginner/introyt/modelsyt_tutorial.html", "snippet": "A <b>convolutional layer is like</b> a window that scans over the image, looking for a pattern it recognizes. These patterns are called features, and one of the parameters of a convolutional layer is the number of features we would like it to learn. This is the second argument to the constructor is the number of output features.", "dateLastCrawled": "2022-01-30T06:10:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Selective Unsupervised Feature <b>Learning</b> with Convolutional Neural ...", "url": "http://vlm1.uta.edu/~athitsos/publications/ghaderi_icpr2016.pdf", "isFamilyFriendly": true, "displayUrl": "vlm1.uta.edu/~athitsos/publications/ghaderi_icpr2016.pdf", "snippet": "A popular method in <b>machine</b> <b>learning</b> is Convolutional Neural Networks (CNNs). CNN was of high interest to the research community in the 1990s, but after that its popularity receded compared to Support Vector Machines (SVMs) [1]. One of the reasons was the relatively lower computational demands of SVMs. Training CNNs requires significantly more computational power and time than training SVMs. With increased availability of powerful GPU processing, and using several improvements in network ...", "dateLastCrawled": "2021-08-31T04:58:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Short-term water demand forecast based on automatic feature extraction ...", "url": "https://www.sciencedirect.com/science/article/pii/S0022169422000154", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/pii/S0022169422000154", "snippet": "Compared with the traditional <b>machine</b> <b>learning</b> methods, its advantage lies in the ability to extract input features at a deeper level, which enables more complex problems to be solved. Historical water demand data implicitly include the influence of factors such as temperature, humidity, holidays and so on. Deep <b>learning</b> method can mine the implicit features in historical data well. To a certain extent, these factors do not need to be used as explicit input to the model. Guo et al. (2018 ...", "dateLastCrawled": "2022-02-02T03:00:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "What is Transposed <b>Convolutional</b> Layer? | by Aqeel Anwar | Towards Data ...", "url": "https://towardsdatascience.com/what-is-transposed-convolutional-layer-40e5e6e31c11", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/what-is-transposed-<b>convolutional</b>-layer-40e5e6e31c11", "snippet": "A deconvolutional layer reverses the operation of a standard <b>convolutional</b> layer i.e. if the output generated through a standard <b>convolutional</b> layer is deconvolved, you get back the original input. The transposed <b>convolutional layer is similar</b> to the deconvolutional layer in the sense that the spatial dimension generated by both are the same ...", "dateLastCrawled": "2022-02-02T05:31:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Deep Domain Adaptation Model for Bearing Fault Diagnosis with Domain ...", "url": "https://www.hindawi.com/journals/sv/2020/4676701/", "isFamilyFriendly": true, "displayUrl": "https://<b>www.hindawi.com</b>/journals/sv/2020/4676701", "snippet": "Traditional <b>machine</b> <b>learning</b> techniques, especially deep <b>learning</b>, ... The feature representation of signals in the first <b>convolutional layer is similar</b> to that of the original signals and fails to show any separability. In the third and fourth convolutional layers, the signal samples gradually show separability. At the fully connected layer, the faults can be well distinguished. The following describes the core idea of the proposed model to implement domain adaptation. The correlation of ...", "dateLastCrawled": "2022-01-29T03:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Deep Learning Enabled Fault Diagnosis Using Time-Frequency Image</b> ...", "url": "https://www.hindawi.com/journals/sv/2017/5067651/", "isFamilyFriendly": true, "displayUrl": "https://<b>www.hindawi.com</b>/journals/sv/2017/5067651", "snippet": "Deep <b>learning</b> enabled feature <b>learning</b> has the advantage of not requiring a feature construction, search, and selection sequence. This is done automatically within the framework of the CNN. The strength of a CNN in its image analysis capabilities. Therefore, an image representation of the data as an input into the framework is ideal. A vector input of constructed features misses the intent and power of the CNN. Given that the CNN searches spatially for features, the sequence of the vector ...", "dateLastCrawled": "2022-01-31T12:46:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "A Review of <b>Deep Learning</b> on Medical Image Analysis | SpringerLink", "url": "https://link.springer.com/article/10.1007/s11036-020-01672-7", "isFamilyFriendly": true, "displayUrl": "https://link.springer.com/article/10.1007/s11036-020-01672-7", "snippet": "The convolutional kernel in the traditional <b>convolutional layer is similar</b> to the filter in signal processing. When the convolutional kernel slides on the image, it is only sensitive to the image with a specific feature. Therefore, different features can be extracted from the image of the input layer through different convolutional layers. Generally, CNN contains multiple convolutional layers. The former convolutional layer extracts some basic features, while the latter convolutional layer ...", "dateLastCrawled": "2022-02-01T01:15:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Automated proliferation index calculation for skin melanoma biopsy ...", "url": "https://www.sciencedirect.com/science/article/pii/S0895611121000410", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/pii/S0895611121000410", "snippet": "1) Convolutional layers: The <b>convolutional layer is similar</b> to the neurons in a traditional neural network except that each neuron will be connected to a small neighborhood of neurons in the previous layer.Each neuron in the convolutional layer will result in a scalar value. In this paper, the convolutional layer performs three operations: convolution, batch normalization, and ReLU activation.", "dateLastCrawled": "2021-11-20T19:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "08. Natural Language Processing with TensorFlow - Zero to Mastery ...", "url": "https://dev.mrdbourke.com/tensorflow-deep-learning/08_introduction_to_nlp_in_tensorflow/", "isFamilyFriendly": true, "displayUrl": "https://dev.mrdbourke.com/tensorflow-deep-<b>learning</b>/08_introduction_to_nlp_in_tensorflow", "snippet": "If you answered something along the lines of &quot;turn it into numbers&quot;, you&#39;re correct. A <b>machine</b> <b>learning</b> algorithm requires its inputs to be in numerical form. In NLP, there are two main concepts for turning text into numbers: Tokenization - A straight mapping from word or character or sub-word to a numerical value. There are three main levels of tokenization: Using word-level tokenization with the sentence &quot;I love TensorFlow&quot; might result in &quot;I&quot; being 0, &quot;love&quot; being 1 and &quot;TensorFlow&quot; being ...", "dateLastCrawled": "2022-02-02T03:08:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Role of convolutional neural networks for any real time image ...", "url": "https://www.sciencedirect.com/science/article/pii/S2214785321012682", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/pii/S2214785321012682", "snippet": "Profound <b>Learning</b> applications may appear to be disappointing to an ordinary individual, yet those with the advantage of realizing the AI world comprehend the imprint that profound <b>learning</b> is making internationally by investigating and settling human issues in each domain. So, here is the rundown of Profound <b>Learning</b> Application with Clarification it will without a doubt stun you. Connected Car, Crime identification, Language Processing (Natural), Monitoring Assistants, Entertaining in all ...", "dateLastCrawled": "2021-10-13T01:32:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "How to implement <b>CNN</b> for NLP tasks like Sentence Classification | by ...", "url": "https://medium.com/saarthi-ai/sentence-classification-using-convolutional-neural-networks-ddad72c7048c", "isFamilyFriendly": true, "displayUrl": "https://medium.com/saarthi-ai/sentence-classification-using-convolutional-neural...", "snippet": "A <b>convolutional layer can be thought of as</b> composed of a series of \u201cmaps\u201d called ... Download the dataset from the Sentiment Labelled Sentences Data Set from the UCI <b>Machine</b> <b>Learning</b> ...", "dateLastCrawled": "2022-01-23T13:57:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Coding CNN with TensorFlow | by Yash Khanna | Analytics Vidhya", "url": "https://medium.com/analytics-vidhya/coding-convolutional-neural-networks-cnn-with-tensorflow-2b72647a522c", "isFamilyFriendly": true, "displayUrl": "https://medium.com/analytics-vidhya/<b>coding-convolutional-neural-networks-cnn</b>-with...", "snippet": "The <b>convolutional layer can be thought of as</b> the feature extractor of this network, it learns to find spatial features in an input image. This layer is produced by applying a series of many ...", "dateLastCrawled": "2022-01-23T01:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Image Classification using</b> CNNs in Keras | LearnOpenCV", "url": "https://learnopencv.com/image-classification-using-convolutional-neural-networks-in-keras/", "isFamilyFriendly": true, "displayUrl": "https://www.learnopencv.com/image-classification", "snippet": "The <b>convolutional layer can be thought of as</b> the eyes of the CNN. The neurons in this layer look for specific features. If they find the features they are looking for, they produce a high activation. Convolution can be thought of as a weighted sum between two signals ( in terms of signal processing jargon ) or functions ( in terms of mathematics ). In image processing, to calculate convolution at a particular location , we extract . x . sized chunk from the image centered at location . We ...", "dateLastCrawled": "2022-01-29T13:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "GitHub - jackyhuynh/template_ml_day_night_image_classifier: This is a ...", "url": "https://github.com/jackyhuynh/template_ml_day_night_image_classifier", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/jackyhuynh/template_ml_day_night_image_classifier", "snippet": "A <b>convolutional layer can be thought of as</b> a set of image filters (which you&#39;ve been <b>learning</b> about). Each filter extracts a specific kind of feature (like an edge). The output of a given convolutional layer is a set of feature maps, which are differently filtered versions of the input image. Fully-connected layer ; Classification from scratch (Day and Night example) In this course, you&#39;ve seen how to extract color and shape features from an image and you&#39;ve seen how to use these features to ...", "dateLastCrawled": "2022-01-16T23:56:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Frontiers | Deep Supervised <b>Learning</b> Using Local Errors | Neuroscience", "url": "https://www.frontiersin.org/articles/10.3389/fnins.2018.00608/full", "isFamilyFriendly": true, "displayUrl": "https://www.frontiersin.org/articles/10.3389/fnins.2018.00608", "snippet": "A <b>convolutional layer can be thought of as</b> a fully-connected layer, but with many weights tied together to reflect the spatial invariance of the convolution kernels. An AD package takes care of accumulating the gradient of each tied weight and summing these gradients to obtain the gradient of the underlying parameter. 3.1. Implementation Details . In many experiments, we use dropout (Srivastava et al., 2014) to minimize overfitting. All incoming/outgoing weights to/from dropped neurons are ...", "dateLastCrawled": "2022-02-02T18:58:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Convolutional Neural Networks</b> - <b>Machine</b> and deep <b>learning</b> educator.", "url": "https://cezannec.github.io/Convolutional_Neural_Networks/", "isFamilyFriendly": true, "displayUrl": "https://cezannec.github.io/<b>Convolutional_Neural_Networks</b>", "snippet": "<b>Machine</b> and deep <b>learning</b> educator. Blog About. <b>Convolutional Neural Networks</b>. Image classification is a challenging task for computers. <b>Convolutional neural networks</b> represent one data-driven approach to this challenge. This post will be about image representation and the layers that make up a convolutional neural network. Neural Network Structure. This post is the second in a series about understanding how neural networks learn to separate and classify visual data. In the last post, I went ...", "dateLastCrawled": "2022-01-31T23:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "Comprehensive evaluation of <b>deep learning architectures</b> for prediction ...", "url": "https://academic.oup.com/bioinformatics/article/35/14/i269/5529112", "isFamilyFriendly": true, "displayUrl": "https://academic.oup.com/bioinformatics/article/35/14/i269/5529112", "snippet": "The first <b>convolutional layer can be thought of as</b> a motif detector where each filter is analogous to a PWM and the convolution operation is equivalent to scanning the PWM with a sliding window across the sequence. Additional layers of convolution and pooling enable the network to extract features from larger spatial ranges and potentially capture interactions between motifs, allowing the network to represent more complex patterns than shallower networks. On the flip side, deeper networks ...", "dateLastCrawled": "2022-02-03T10:55:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Overview of conventional versus deep <b>learning</b> workflows. The human in ...", "url": "https://researchgate.net/figure/Overview-of-conventional-versus-deep-learning-workflows-The-human-in-the-center-provides_fig1_329789435", "isFamilyFriendly": true, "displayUrl": "https://researchgate.net/figure/Overview-of-conventional-versus-deep-<b>learning</b>...", "snippet": "Recent developments in <b>machine</b> <b>learning</b> (ML) suggest that certain ML tools may be able to benefit this histology <b>learning</b> platform. Here, we aim to explore how one such tool based on a ...", "dateLastCrawled": "2021-06-28T14:56:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Machine</b> <b>Learning</b> on Embedded Systems: An Exploratory Study on Gas ...", "url": "https://www.tismotech.com/wp-content/uploads/2020/07/Machine-Learning-on-Embedded-Systems-An-Exploratory-Study-on-Gas-Chromatography-Analysis_Pittcon-2020_Tismo.pdf", "isFamilyFriendly": true, "displayUrl": "https://www.tismotech.com/wp-content/uploads/2020/07/<b>Machine</b>-<b>Learning</b>-on-Embedded...", "snippet": "<b>Machine</b> <b>Learning</b> on Embedded Systems: An Exploratory Study on Gas Chromatography Analysis Presented at Pittcon 2020 Tismo Technology Solutions (P) Ltd Bangalore, India ABSTRACT This paper proposes a novel approach of utilizing <b>Machine</b> <b>Learning</b> (ML) models for embedded systems. This is demonstrated through the deployment of an ML model on a Gas Chromatography (GC) system, used for natural gas analysis. Unlike other schools of research that treat the analysis of chromatograms as image ...", "dateLastCrawled": "2022-01-10T05:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Accelerate Machine Learning with the</b> cuDNN Deep Neural Network Library ...", "url": "https://www.edge-ai-vision.com/2014/10/accelerate-machine-learning-with-the-cudnn-deep-neural-network-library/", "isFamilyFriendly": true, "displayUrl": "https://www.edge-ai-vision.com/2014/10/<b>accelerate-machine-learning-with-the</b>-cudnn-deep...", "snippet": "There is a wide variety of algorithms and processes for implementing ML systems. The hottest area in ML today however, is the area of Deep Neural Networks (DNNs). The success of DNNs has been greatly accelerated by using GPUs, which have become the platform of choice for training large, complex DNN-based ML systems.", "dateLastCrawled": "2022-01-22T13:10:00.0000000Z", "language": "en", "isNavigational": false}], []], "all_bing_queries": ["+(convolutional layer)  is like +(bunch of filters)", "+(convolutional layer) is similar to +(bunch of filters)", "+(convolutional layer) can be thought of as +(bunch of filters)", "+(convolutional layer) can be compared to +(bunch of filters)", "machine learning +(convolutional layer AND analogy)", "machine learning +(\"convolutional layer is like\")", "machine learning +(\"convolutional layer is similar\")", "machine learning +(\"just as convolutional layer\")", "machine learning +(\"convolutional layer can be thought of as\")", "machine learning +(\"convolutional layer can be compared to\")"]}