{"src_spec_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "\ufe0f \u2694\ufe0f \ud83c\udf27\ufe0f Find <b>the shortest</b> fence that spans an area on a <b>two</b>-dimensional ...", "url": "https://geek-qa.imtqy.com/questions/171672/index.html", "isFamilyFriendly": true, "displayUrl": "https://geek-qa.imtqy.com/questions/171672/index.html", "snippet": "Is there an O (n ^ 2) algorithm for <b>finding</b> <b>the shortest</b> fence? EDIT: It&#39;s not as simple as <b>finding</b> the <b>convex</b> hull of the \u201cinner\u201d cells, as existing \u201cwall\u201d cells are free. Imagine a \u201cC\u201d -shaped piece of a pre-existing wall, with all the \u201cinner\u201d cells inside C. Most of the time, completing the C with \u201cwall\u201d cells will be cheaper than drawing a <b>convex</b> body around all the \u201cinside\u201d cells. This makes this problem difficult. +31. <b>optimization</b> algorithm graph-algorithm <b>path</b> ...", "dateLastCrawled": "2021-12-06T21:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Shortest Path Algorithms</b> Tutorials &amp; Notes - <b>HackerEarth</b>", "url": "https://www.hackerearth.com/practice/algorithms/graphs/shortest-path-algorithms/tutorial/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>hackerearth</b>.com/practice/algorithms/graphs/<b>shortest-path-algorithms</b>/tutorial", "snippet": "<b>The shortest</b> <b>path</b> problem is about <b>finding</b> a <b>path</b> <b>between</b> $$2$$ vertices in a graph such that the total sum of the edges weights is minimum. This problem could be solved easily using (BFS) if all edge weights were ($$1$$), but here weights can take any value. Three different algorithms are discussed below depending on the use-case.", "dateLastCrawled": "2022-02-02T23:50:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "algorithm - Find <b>the shortest fence that encloses an</b> area on a 2D grid ...", "url": "https://stackoverflow.com/questions/43582679/find-the-shortest-fence-that-encloses-an-area-on-a-2d-grid", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/43582679", "snippet": "For a connected set G of inner cells, <b>finding</b> a cheapest fence would work <b>like</b> this: Find a <b>shortest</b> &quot;flow&quot; <b>path</b> FL of empty cells from that group to the boundary. Find a cheapest &quot;fence&quot; <b>path</b> FE around the group using all cells not in either G or FL. Try either each cell in FL as starting point, or any cell that is both in FL and in G&#39;s fence ...", "dateLastCrawled": "2022-01-14T18:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "java - Algorithm to find <b>the shortest</b> <b>path</b>, with <b>obstacles</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/5303538/algorithm-to-find-the-shortest-path-with-obstacles", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/5303538", "snippet": "One good heuristic for this would be to use the Manhattan distance <b>between</b> the <b>two</b> <b>points</b>. If you&#39;re looking for an easier but still extremely efficient algorithm for <b>finding</b> <b>the shortest</b> <b>path</b>, consider looking into Dijkstra&#39;s algorithm, which can be thought of as a simpler version of A*. It&#39;s a bit slower than A*, but still runs extremely quickly and guarantees an optimal answer. Hope this helps! Share. Improve this answer. Follow answered Mar 14 &#39;11 at 19:40. templatetypedef ...", "dateLastCrawled": "2022-01-24T15:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Solving Vehicle Routing Problems: <b>Optimization</b> Software and APIs ...", "url": "https://www.altexsoft.com/blog/business/how-to-solve-vehicle-routing-problems-route-optimization-software-and-their-apis/", "isFamilyFriendly": true, "displayUrl": "https://www.altexsoft.com/blog/business/how-to-solve-vehicle-routing-problems-route...", "snippet": "You may think that it means <b>finding</b> <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b>, but it\u2019s rarely that simple: You must account for all relevant factors involved such as the number and location of all stops on the route, arrival/departure time gap, effective loading, etc. Route <b>optimization</b> is a solution for so-called vehicle routing problems (VRPs). The Vehicle Routing Problem or VRP is the challenge of designing optimal routes from a depot to a set of destinations each with business-specific ...", "dateLastCrawled": "2022-02-03T15:02:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Why is Convex Optimization such a big</b> deal in Machine Learning? - Quora", "url": "https://www.quora.com/Why-is-Convex-Optimization-such-a-big-deal-in-Machine-Learning", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/<b>Why-is-Convex-Optimization-such-a-big</b>-deal-in-Machine-Learning", "snippet": "Answer (1 of 10): <b>Convex</b> <b>optimization</b> is the core of most machine learning methods Some key concepts here: - <b>Convex</b> functions are those for which it&#39;s possible to draw a line segment from any <b>two</b> <b>points</b> on the graph and this line will always be inside the graph (except at the endpoints). This m...", "dateLastCrawled": "2022-01-17T17:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "GitHub - Vertmo/Algorithms_Example: List of Algorithms", "url": "https://github.com/Vertmo/Algorithms_Example", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/Vertmo/Algorithms_Example", "snippet": "Euclidean <b>shortest</b> <b>path</b> problem : find <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> that does not intersect any obstacle Exponentiating by squaring : an algorithm used for the fast computation of large integer powers of a number", "dateLastCrawled": "2022-02-01T18:53:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "How to Solve the Traveling <b>Salesman Problem</b> - A ... - Towards Data Science", "url": "https://towardsdatascience.com/how-to-solve-the-traveling-salesman-problem-a-comparative-analysis-39056a916c9f", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/how-to-solve-the-traveling-<b>salesman-problem</b>-a...", "snippet": "This <b>problem</b> is to find <b>the shortest</b> <b>path</b> that a salesman should take to traverse through a list of cities and return to the origin city. The list of cities and the distance <b>between</b> each pair are provided. TSP is useful in various applications in real life such as planning or logistics. For example, a concert tour manager who wants to schedule a series of performances for the band must determine <b>the shortest</b> <b>path</b> for the tour to ensure reducing traveling costs and not making the band ...", "dateLastCrawled": "2022-02-03T16:52:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>GitHub</b> - jm8/all-the-algorithms: An implementation of all algorithms on ...", "url": "https://github.com/jm8/all-the-algorithms", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/jm8/all-the-<b>algorithm</b>s", "snippet": "Geometric hashing: a method for efficiently <b>finding</b> <b>two</b>-dimensional objects represented by discrete <b>points</b> that have undergone an affine transformation; Gilbert\u2013Johnson\u2013Keerthi distance <b>algorithm</b>: determining the smallest distance <b>between</b> <b>two</b> <b>convex</b> shapes. Jump-and-Walk <b>algorithm</b>: an <b>algorithm</b> for point location in triangulations", "dateLastCrawled": "2022-02-03T16:50:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "Why is a straight line <b>the shortest distance between</b> <b>two</b> <b>points</b>?", "url": "https://math.stackexchange.com/questions/833434/why-is-a-straight-line-the-shortest-distance-between-two-points", "isFamilyFriendly": true, "displayUrl": "https://math.stackexchange.com/questions/833434/why-is-a-straight-line-<b>the-shortest</b>...", "snippet": "The first application I was shown of the calculus of variations was proving that <b>the shortest distance between</b> <b>two</b> <b>points</b> is a straight line. Define a functional measuring the length of a curve <b>between</b> <b>two</b> <b>points</b>: $$ I(y) = \\int_{x_1}^{x_2} \\sqrt{1 + (y&#39;)^2}\\, dx, $$ apply the Euler-Langrange equation, and Bob&#39;s your uncle.", "dateLastCrawled": "2022-01-24T20:18:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "SHUI-NEE CHOW, JUN LU, HAO-MIN ZHOU", "url": "https://math.gatech.edu/~hmzhou/publications/ChLuZh13-2.pdf", "isFamilyFriendly": true, "displayUrl": "https://math.gatech.edu/~hmzhou/publications/ChLuZh13-2.pdf", "snippet": "<b>Finding</b> <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> given <b>points</b> Xand Y while avoiding all the obstacles fP igN i=1 in a region is a classical problem that carries di erent names, such as piano mover\u2019s problem, watchman route problem or zookeeper\u2019s problem in practice. It has received great attention since decades ago. Various methods based on combinatorics or di erential equations have been developed for di erent scenarios. For polygonal obstacles in R2, an optimal algorithm based on Dijkstra method ...", "dateLastCrawled": "2021-07-18T16:24:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "algorithm - Find <b>the shortest fence that encloses an</b> area on a 2D grid ...", "url": "https://stackoverflow.com/questions/43582679/find-the-shortest-fence-that-encloses-an-area-on-a-2d-grid", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/43582679", "snippet": "Is there an O(n^2) algorithm for <b>finding</b> <b>the shortest</b> fence? EDIT: It is not as easy as just <b>finding</b> the <b>convex</b> hull of the &quot;inside&quot; cells, because pre-existing &quot;wall&quot; cells are free. Imagine a &quot;C&quot;-shaped chunk of pre-existing wall, with all &quot;inside&quot; cells in the interior of the C. Most of the time, completing the C with &quot;wall&quot; cells will be cheaper than drawing a <b>convex</b> hull around all the &quot;inside&quot; cells. This is what makes this problem hard. algorithm <b>optimization</b> graph-algorithm <b>path</b> ...", "dateLastCrawled": "2022-01-14T18:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "What is more useful for a data <b>scientist to learn, convex optimization</b> ...", "url": "https://www.quora.com/What-is-more-useful-for-a-data-scientist-to-learn-convex-optimization-or-discrete-optimization-Choose-only-one-please", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/What-is-more-useful-for-a-data-scientist-to-learn-<b>convex</b>...", "snippet": "Answer (1 of 3): I haven\u2019t studied discrete <b>optimization</b> in a formal course, so I don\u2019t have experience in the methods. I learned <b>convex</b> <b>optimization</b> taught to doctoral students in electrical engineering, computer science, and computational math, with some theory and programs required. The most i...", "dateLastCrawled": "2022-01-18T17:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Solving The <b>Convex</b> Hull Problem using Divide and Conquer Algorithm", "url": "https://www.codingninjas.com/codestudio/library/solving-the-convex-hull-problem-using-divide-and-conquer-algorithm", "isFamilyFriendly": true, "displayUrl": "https://www.codingninjas.com/codestudio/library/solving-the-<b>convex</b>-hull-problem-using...", "snippet": "Solving The <b>Convex</b> Hull Problem using Divide and Conquer Algorithm. Practice. Interview Problems. Top Problem Lists. Guided Paths. Interview Prep. Interview Experiences. Interview Bundles. Challenges.", "dateLastCrawled": "2022-01-28T17:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "\ufe0f \u2694\ufe0f \ud83c\udf27\ufe0f Find <b>the shortest</b> fence that spans an area on a <b>two</b>-dimensional ...", "url": "https://geek-qa.imtqy.com/questions/171672/index.html", "isFamilyFriendly": true, "displayUrl": "https://geek-qa.imtqy.com/questions/171672/index.html", "snippet": "Is there an O (n ^ 2) algorithm for <b>finding</b> <b>the shortest</b> fence? EDIT: It&#39;s not as simple as <b>finding</b> the <b>convex</b> hull of the \u201cinner\u201d cells, as existing \u201cwall\u201d cells are free. Imagine a \u201cC\u201d -shaped piece of a pre-existing wall, with all the \u201cinner\u201d cells inside C. Most of the time, completing the C with \u201cwall\u201d cells will be cheaper than drawing a <b>convex</b> body around all the \u201cinside\u201d cells. This makes this problem difficult. +31. <b>optimization</b> algorithm graph-algorithm <b>path</b> ...", "dateLastCrawled": "2021-12-06T21:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "GitHub - Vertmo/Algorithms_Example: List of Algorithms", "url": "https://github.com/Vertmo/Algorithms_Example", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/Vertmo/Algorithms_Example", "snippet": "k-medoids : <b>similar</b> to k-means, but chooses datapoints or medoids as centers. Kabsch algorithm : calculate the optimal alignment of <b>two</b> sets of <b>points</b> in order to compute the root mean squared deviation <b>between</b> <b>two</b> protein structures. Kadane&#39;s algorithm: finds maximum sub-array of any size", "dateLastCrawled": "2022-02-01T18:53:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Shortest Path Algorithms</b> Tutorials &amp; Notes - <b>HackerEarth</b>", "url": "https://www.hackerearth.com/practice/algorithms/graphs/shortest-path-algorithms/tutorial/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>hackerearth</b>.com/practice/algorithms/graphs/<b>shortest-path-algorithms</b>/tutorial", "snippet": "<b>The shortest</b> <b>path</b> problem is about <b>finding</b> a <b>path</b> <b>between</b> $$2$$ vertices in a graph such that the total sum of the edges weights is minimum. This problem could be solved easily using (BFS) if all edge weights were ($$1$$), but here weights can take any value. Three different algorithms are discussed below depending on the use-case.", "dateLastCrawled": "2022-02-02T23:50:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "How to Solve the Traveling <b>Salesman Problem</b> - A ... - Towards Data Science", "url": "https://towardsdatascience.com/how-to-solve-the-traveling-salesman-problem-a-comparative-analysis-39056a916c9f", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/how-to-solve-the-traveling-<b>salesman-problem</b>-a...", "snippet": "This <b>problem</b> is to find <b>the shortest</b> <b>path</b> that a salesman should take to traverse through a list of cities and return to the origin city. The list of cities and the distance <b>between</b> each pair are provided. TSP is useful in various applications in real life such as planning or logistics. For example, a concert tour manager who wants to schedule a series of performances for the band must determine <b>the shortest</b> <b>path</b> for the tour to ensure reducing traveling costs and not making the band ...", "dateLastCrawled": "2022-02-03T16:52:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Shortest</b> <b>path</b> in an unweighted graph", "url": "https://www.codingninjas.com/codestudio/library/shortest-path-in-an-unweighted-graph", "isFamilyFriendly": true, "displayUrl": "https://www.codingninjas.com/codestudio/library/<b>shortest</b>-<b>path</b>-in-an-unweighted-graph", "snippet": "This article will brief you on <b>finding</b> <b>the Shortest</b> <b>path</b> in an unweighted graph. Check this content from Coding Ninjas. Practice . Interview Problems ; Top Problem Lists; Guided Paths . Interview Prep . Interview Experiences ; Interview Bundles ; Challenges . New. Mock Test Series ; Contests ; Knowledge Centre . New. Library ; Videos ; Community . New. Login Data Structures and Algorithms / Graph / Operations on Graph / <b>Shortest</b> <b>Path</b> / <b>Shortest</b> <b>path</b> in an unweighted graph / Browse Categories ...", "dateLastCrawled": "2022-01-27T12:10:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>GitHub</b> - jm8/all-the-algorithms: An implementation of all algorithms on ...", "url": "https://github.com/jm8/all-the-algorithms", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/jm8/all-the-<b>algorithm</b>s", "snippet": "Geometric hashing: a method for efficiently <b>finding</b> <b>two</b>-dimensional objects represented by discrete <b>points</b> that have undergone an affine transformation; Gilbert\u2013Johnson\u2013Keerthi distance <b>algorithm</b>: determining the smallest distance <b>between</b> <b>two</b> <b>convex</b> shapes. Jump-and-Walk <b>algorithm</b>: an <b>algorithm</b> for point location in triangulations", "dateLastCrawled": "2022-02-03T16:50:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Shortest Paths in the Plane</b> with Obstacle Violations | SpringerLink", "url": "https://link.springer.com/article/10.1007/s00453-020-00673-y", "isFamilyFriendly": true, "displayUrl": "https://link.springer.com/article/10.1007/s00453-020-00673-y", "snippet": "We study the problem of <b>finding</b> <b>shortest paths in the plane</b> among h <b>convex</b> obstacles, where the <b>path</b> is allowed to pass through (violate) up to k obstacles, for \\(k \\le h\\).Equivalently, the problem is to find <b>shortest</b> paths that become obstacle-free if k obstacles are removed from the input. Given a fixed source <b>point s</b>, we show how to construct a <b>map</b>, called a <b>shortest</b> k-<b>path</b> <b>map</b>, so that all destinations in the same region of the <b>map</b> have the same combinatorial <b>shortest</b> <b>path</b> passing ...", "dateLastCrawled": "2022-01-29T16:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "java - Algorithm to find <b>the shortest</b> <b>path</b>, with <b>obstacles</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/5303538/algorithm-to-find-the-shortest-path-with-obstacles", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/5303538", "snippet": "One good heuristic for this would be to use the Manhattan distance <b>between</b> the <b>two</b> <b>points</b>. If you&#39;re looking for an easier but still extremely efficient algorithm for <b>finding</b> <b>the shortest</b> <b>path</b>, consider looking into Dijkstra&#39;s algorithm, which <b>can</b> <b>be thought</b> of as a simpler version of A*. It&#39;s a bit slower than A*, but still runs extremely quickly and guarantees an optimal answer. Hope this helps! Share. Improve this answer. Follow answered Mar 14 &#39;11 at 19:40. templatetypedef ...", "dateLastCrawled": "2022-01-24T15:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Why is Convex Optimization such a big</b> deal in Machine Learning? - Quora", "url": "https://www.quora.com/Why-is-Convex-Optimization-such-a-big-deal-in-Machine-Learning", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/<b>Why-is-Convex-Optimization-such-a-big</b>-deal-in-Machine-Learning", "snippet": "Answer (1 of 10): <b>Convex</b> <b>optimization</b> is the core of most machine learning methods Some key concepts here: - <b>Convex</b> functions are those for which it&#39;s possible to draw a line segment from any <b>two</b> <b>points</b> on the graph and this line will always be inside the graph (except at the endpoints). This m...", "dateLastCrawled": "2022-01-17T17:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "(PDF) On computing Fr\u00e9chet distance of <b>two</b> paths on a <b>convex</b> polyhedron.", "url": "https://www.researchgate.net/publication/221029773_On_computing_Frechet_distance_of_two_paths_on_a_convex_polyhedron", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/221029773_On_computing_Frechet_distance_of...", "snippet": "The main result of this paper involves a favorable special case of the 3-D <b>shortest</b> <b>path</b> problem, namely that of <b>finding</b> <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> along the surface of a <b>convex</b> ...", "dateLastCrawled": "2022-01-30T07:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Relaxed Problem</b> - an overview | ScienceDirect Topics", "url": "https://www.sciencedirect.com/topics/computer-science/relaxed-problem", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/topics/computer-science/<b>relaxed-problem</b>", "snippet": "Because \u03b4 \u03d5 (u, t) is the length of <b>the shortest</b> <b>path</b> <b>between</b> \u03d5 (u) and \u03d5 (t), we have \u03b4 \u03d5 (u, t) \u2264 \u03b4 \u03d5 (u, u \u2032) + \u03b4 \u03d5 (u \u2032, t) for all u and u\u2032. Substituting h \u03d5 results in h \u03d5 (u) \u2264 \u03b4 \u03d5 (u, u \u2032) + h \u03d5 (u \u2032) for all u and u\u2032. Because \u03d5 is an abstraction, \u03b4 \u03d5 (u, u \u2032) \u2264 \u03b4 (u, u \u2032) and, therefore, h \u03d5 (u) \u2264 \u03b4 (u, u \u2032) + h \u03d5 (u \u2032) for all u and u\u2032. The type of abstraction usually depends on the state representation. For example, in logical ...", "dateLastCrawled": "2022-01-12T12:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>AI Seminar</b> | Machine Learning at SLAC", "url": "https://ml.slac.stanford.edu/ai-seminar", "isFamilyFriendly": true, "displayUrl": "https://ml.slac.stanford.edu/<b>ai-seminar</b>", "snippet": "Particle collider events, when imbued with a metric which characterizes the &#39;distance&#39; <b>between</b> <b>two</b> events (such as an Earth Movers Distance), <b>can</b> <b>be thought</b> of as populating a data manifold in a metric space. The geometric properties of this manifold reflect the physics encoded in the distance metric. I will show how the geometry of collider events <b>can</b> be probed at varying scales of interest using a class of machine learning architectures called Variational Autoencoders. I will introduce ...", "dateLastCrawled": "2022-02-03T07:27:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "A survey on the application of <b>path</b>-planning algorithms for multi-rotor ...", "url": "https://www.cambridge.org/core/journals/journal-of-navigation/article/survey-on-the-application-of-pathplanning-algorithms-for-multirotor-uavs-in-precision-agriculture/981803D6E3E22A40069B69BFDACDF6B4", "isFamilyFriendly": true, "displayUrl": "https://www.cambridge.org/core/journals/journal-of-navigation/article/survey-on-the...", "snippet": "Despite numerous studies on multi-rotor UAV <b>path</b>-planning problems, such as <b>finding</b> <b>the shortest</b> <b>path</b>, least cost routing and maintaining a persistent safe <b>path</b> (e.g., Korkmaz and Durdu, Reference Korkmaz and Durdu 2018; Zammit and Van Kampen, Reference Zammit and Van Kampen 2018; Babel, Reference Babel 2019), open problems about time efficiency and computational burden have required researchers to set up methods and approaches that encompass Artificial Intelligence (AI)-based techniques ...", "dateLastCrawled": "2022-01-19T20:00:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "algorithms - <b>Shortest distance between</b> a point in A and a point in B ...", "url": "https://cs.stackexchange.com/questions/2415/shortest-distance-between-a-point-in-a-and-a-point-in-b", "isFamilyFriendly": true, "displayUrl": "https://cs.stackexchange.com/questions/2415/<b>shortest-distance-between</b>-a-point-in-a-and...", "snippet": "I am not sure if I am right, but this problem very similar to problems that <b>can</b> be solved by linear programming in computational geometry. However, the reduction to LP is not straightforward. Also my problem looks related to <b>finding</b> the thinnest stip <b>between</b> <b>two</b> sets of <b>points</b> which obviously <b>can</b> be solved by LP in in 2-dimensional space.", "dateLastCrawled": "2022-01-25T14:49:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Data Structures And Algorithm Analysis</b> - Best Writers", "url": "https://blog.bestwriters.org/2020/09/23/data-structures-and-algorithm-analysis/", "isFamilyFriendly": true, "displayUrl": "https://blog.bestwriters.org/2020/09/23/<b>data-structures-and-algorithm-analysis</b>", "snippet": "Of the problems in the above list, <b>finding</b> <b>the shortest</b> <b>path</b> provides the easiest examples. A transportation firm, such as a trucking or railroad company, has a financial interest in <b>finding</b> <b>shortest</b> paths through a road or rail network because taking shorter paths results in lower labor and fuel costs. Or a routing node on the Internet may need to find <b>the shortest</b> <b>path</b> through the network in order to route a message quickly. Or a person wishing to drive from New York to Boston may want to ...", "dateLastCrawled": "2022-02-03T01:04:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Simple pathfinding algorithm</b> - a basic <b>path</b>-<b>finding</b> algorithm (coded in ...", "url": "https://wurden-espada.com/game-ai/pathfinding/-m74-1408ztj-v", "isFamilyFriendly": true, "displayUrl": "https://wurden-espada.com/game-ai/<b>pathfinding</b>/-m74-1408ztj-v", "snippet": "A <b>shortest</b> <b>path</b> algorithm solves the problem of <b>finding</b> <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> in a graph (e.g., on a road <b>map</b>). The term short does not necessarily mean physical distance. It <b>can</b> also be time (freeways are preferred) or cost (toll roads are avoided), or a combination of multiple factors ; There are several <b>path</b> <b>finding</b> algorithms out there. One of the most popular ones is probably A* . It&#39;s a very useful algorithm if you have a heuristic function that <b>can</b> give you estimated ...", "dateLastCrawled": "2022-01-25T10:49:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "What is more useful for a data <b>scientist to learn, convex optimization</b> ...", "url": "https://www.quora.com/What-is-more-useful-for-a-data-scientist-to-learn-convex-optimization-or-discrete-optimization-Choose-only-one-please", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/What-is-more-useful-for-a-data-scientist-to-learn-<b>convex</b>...", "snippet": "Answer (1 of 3): I haven\u2019t studied discrete <b>optimization</b> in a formal course, so I don\u2019t have experience in the methods. I learned <b>convex</b> <b>optimization</b> taught to doctoral students in electrical engineering, computer science, and computational math, with some theory and programs required. The most i...", "dateLastCrawled": "2022-01-18T17:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Why is Convex Optimization such a big</b> deal in Machine Learning? - Quora", "url": "https://www.quora.com/Why-is-Convex-Optimization-such-a-big-deal-in-Machine-Learning", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/<b>Why-is-Convex-Optimization-such-a-big</b>-deal-in-Machine-Learning", "snippet": "Answer (1 of 10): <b>Convex</b> <b>optimization</b> is the core of most machine learning methods Some key concepts here: - <b>Convex</b> functions are those for which it&#39;s possible to draw a line segment from any <b>two</b> <b>points</b> on the graph and this line will always be inside the graph (except at the endpoints). This m...", "dateLastCrawled": "2022-01-17T17:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Designing and Implementing <b>Shortest</b> and Fastest Paths; A Comparison of ...", "url": "https://ijcttjournal.org/2021/Volume-69%20Issue-5/IJCTT-V69I5P102.pdf", "isFamilyFriendly": true, "displayUrl": "https://ijcttjournal.org/2021/Volume-69 Issue-5/IJCTT-V69I5P102.pdf", "snippet": "<b>Finding</b> <b>the shortest</b> <b>path</b> <b>on a map</b> is appropriate and essential issue to be explored and solved (Schr\u00f6der and Cabral, 2019). Much initiative and research has been done to find the best approach for solving this classic problem. These research initiatives have resulted in the advancement of different algorithms and experimental outcomes regarding their performances. Initially, a class of modified \ud835\udc34 search algorithms were identified and their performances were <b>compared</b> to existing state-of ...", "dateLastCrawled": "2021-09-19T00:27:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "How to Solve the Traveling <b>Salesman Problem</b> - A ... - Towards Data Science", "url": "https://towardsdatascience.com/how-to-solve-the-traveling-salesman-problem-a-comparative-analysis-39056a916c9f", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/how-to-solve-the-traveling-<b>salesman-problem</b>-a...", "snippet": "This <b>problem</b> is to find <b>the shortest</b> <b>path</b> that a salesman should take to traverse through a list of cities and return to the origin city. The list of cities and the distance <b>between</b> each pair are provided. TSP is useful in various applications in real life such as planning or logistics. For example, a concert tour manager who wants to schedule a series of performances for the band must determine <b>the shortest</b> <b>path</b> for the tour to ensure reducing traveling costs and not making the band ...", "dateLastCrawled": "2022-02-03T16:52:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "(PDF) On computing Fr\u00e9chet distance of <b>two</b> paths on a <b>convex</b> polyhedron.", "url": "https://www.researchgate.net/publication/221029773_On_computing_Frechet_distance_of_two_paths_on_a_convex_polyhedron", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/221029773_On_computing_Frechet_distance_of...", "snippet": "The main result of this paper involves a favorable special case of the 3-D <b>shortest</b> <b>path</b> problem, namely that of <b>finding</b> <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> along the surface of a <b>convex</b> ...", "dateLastCrawled": "2022-01-30T07:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Dijkstra&#39;s and A-Star in <b>Finding</b> <b>the Shortest</b> <b>Path</b>: a Tutorial ...", "url": "https://www.researchgate.net/publication/344819482_Dijkstra's_and_A-Star_in_Finding_the_Shortest_Path_a_Tutorial", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/344819482_Dijkstra", "snippet": "The implemented program allows drawing an undirected graph, visualizing <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> vertices and <b>finding</b> its value. This software is a valuable tool for the study of Dijkstra&#39;s ...", "dateLastCrawled": "2022-01-13T19:53:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Shortest Path Algorithms</b> Tutorials &amp; Notes - <b>HackerEarth</b>", "url": "https://www.hackerearth.com/practice/algorithms/graphs/shortest-path-algorithms/tutorial/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>hackerearth</b>.com/practice/algorithms/graphs/<b>shortest-path-algorithms</b>/tutorial", "snippet": "<b>The shortest</b> <b>path</b> problem is about <b>finding</b> a <b>path</b> <b>between</b> $$2$$ vertices in a graph such that the total sum of the edges weights is minimum. This problem could be solved easily using (BFS) if all edge weights were ($$1$$), but here weights <b>can</b> take any value. Three different algorithms are discussed below depending on the use-case.", "dateLastCrawled": "2022-02-02T23:50:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "contractualRules": [{"_type": "ContractualRules/LicenseAttribution", "targetPropertyName": "snippet", "targetPropertyIndex": 7, "mustBeCloseToContent": true, "license": {"name": "CC-BY-SA", "url": "http://creativecommons.org/licenses/by-sa/3.0/"}, "licenseNotice": "Text under CC-BY-SA license"}], "name": "<b>Shortest path problem</b> - <b>Wikipedia</b>", "url": "https://en.wikipedia.org/wiki/Shortest_path_problem", "isFamilyFriendly": true, "displayUrl": "https://<b>en.wikipedia.org</b>/wiki/<b>Shortest_path_problem</b>", "snippet": "The problem of <b>finding</b> <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> intersections on a road <b>map</b> may be modeled as a special case of <b>the shortest path problem</b> in graphs, where the vertices correspond to intersections and the edges correspond to road segments, each weighted by the length of the segment. Definition. <b>The shortest path problem</b> <b>can</b> be defined for graphs whether undirected, directed, or mixed. It is defined here for undirected graphs; for directed graphs the definition of <b>path</b> requires that ...", "dateLastCrawled": "2022-02-03T07:17:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "python - <b>Distance</b> <b>between</b> point and a line (from <b>two</b> <b>points</b>) - Stack ...", "url": "https://stackoverflow.com/questions/39840030/distance-between-point-and-a-line-from-two-points", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/39840030", "snippet": "<b>Distance</b> <b>between</b> point and a line (from <b>two</b> <b>points</b>) Ask Question Asked 5 years, 3 months ago. Active 5 days ago. Viewed 64k times 33 19. I&#39;m using Python+Numpy (<b>can</b> maybe also use Scipy) and have three 2D <b>points</b> (P1, P2, P3); I am trying to get the <b>distance</b> from P3 perpendicular to a line drawn <b>between</b> P1 and P2. Let P1=(x1,y1), P2=(x2,y2) and P3=(x3,y3) In vector notation this would be pretty easy, but I&#39;m fairly new to python/numpy and <b>can</b>&#39;t get anythng that works (or even close). Any tips ...", "dateLastCrawled": "2022-01-28T03:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>List of Algorithms</b>", "url": "https://www.scriptol.com/programming/list-algorithms.php", "isFamilyFriendly": true, "displayUrl": "https://www.scriptol.com/programming/list-algorithms.php", "snippet": "Ant colony <b>optimization</b>. Probabilistic technique for solving problems which <b>can</b> be reduced <b>to finding</b> good paths through graphs. Bellman-Ford. (1955). Calculates <b>the shortest</b> <b>path</b> <b>between</b> a vertex and all other vertices on a directed graph. Supports negative values unlike the Dijkstra&#39;s algorithm.", "dateLastCrawled": "2022-02-03T04:26:00.0000000Z", "language": "en", "isNavigational": false}]], "gen_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "11.2. <b>Convexity</b> \u2014 Dive into Deep <b>Learning</b> 0.17.2 documentation", "url": "https://d2l.ai/chapter_optimization/convexity.html", "isFamilyFriendly": true, "displayUrl": "https://d2l.ai/chapter_<b>optimization</b>/<b>convexity</b>.html", "snippet": "Furthermore, even though the <b>optimization</b> problems in deep <b>learning</b> are generally nonconvex, they often exhibit some properties of <b>convex</b> ones near local minima. This can lead to exciting new <b>optimization</b> variants such as [Izmailov et al., 2018].", "dateLastCrawled": "2022-01-30T21:15:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Basic Concepts in Machine Learning</b>", "url": "https://machinelearningmastery.com/basic-concepts-in-machine-learning/", "isFamilyFriendly": true, "displayUrl": "https://<b>machinelearning</b>mastery.com/<b>basic-concepts-in-machine-learning</b>", "snippet": "For example combinatorial <b>optimization</b>, <b>convex</b> <b>optimization</b>, constrained <b>optimization</b>. All <b>machine learning</b> algorithms are combinations of these three components. A framework for understanding all algorithms. Types of <b>Learning</b> . There are four types of <b>machine learning</b>: Supervised <b>learning</b>: (also called inductive <b>learning</b>) Training data includes desired outputs. This is spam this is not, <b>learning</b> is supervised. Unsupervised <b>learning</b>: Training data does not include desired outputs. Example is ...", "dateLastCrawled": "2022-02-02T15:24:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "(PDF) <b>Convex Optimization for the Design of Learning Machines</b>", "url": "https://www.researchgate.net/publication/228602294_Convex_Optimization_for_the_Design_of_Learning_Machines", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/228602294_<b>Convex_Optimization_for_the_Design</b>...", "snippet": "This paper reviews the recent surge of interest in <b>convex</b> <b>optimization</b> in a context of pattern recognition and <b>machine</b> <b>learning</b>. The main thesis of this paper is that the design of task-specific ...", "dateLastCrawled": "2022-01-18T13:36:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Introduction to Machine Learning</b> \u2013 Data and Beyond", "url": "https://dataandbeyond.wordpress.com/2017/08/24/introduction-to-machine-learning-2/", "isFamilyFriendly": true, "displayUrl": "https://dataandbeyond.wordpress.com/2017/08/24/<b>introduction-to-machine-learning</b>-2", "snippet": "<b>Optimization</b> methods are applied to minimize the loss function by changing the parameter values, which is the central theme of <b>machine</b> <b>learning</b>.Zero-one loss is L0-1 = 1 (m &lt;= 0); in zero-one loss, value of loss is 0 for m &gt;= 0 whereas 1 for m &lt; 0. The difficult part with this loss is it is not differentiable, non-<b>convex</b>, and also NP-hard. Hence, in order to make <b>optimization</b> feasible and solvable, these losses are replaced by different surrogate losses for different problems.", "dateLastCrawled": "2022-01-17T05:57:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Introduction to <b>Machine</b> <b>Learning</b> \u2013 Data and Beyond", "url": "https://dataandbeyond.wordpress.com/2017/08/30/introduction-to-machine-learning-3/", "isFamilyFriendly": true, "displayUrl": "https://dataandbeyond.wordpress.com/2017/08/30/introduction-to-<b>machine</b>-<b>learning</b>-3", "snippet": "Unsupervised <b>learning</b>: Similar to the teacher-student <b>analogy</b>, in which the instructor does not present and provide feedback to the student and who needs to prepare on his/her own. Unsupervised <b>learning</b> does not have as many are in supervised <b>learning</b>: Principal component analysis (PCA) K-means clustering; Reinforcement <b>learning</b>: This is the scenario in which multiple decisions need to be taken by an agent prior to reaching the target and it provides a reward, either +1 or -1, rather than ...", "dateLastCrawled": "2022-01-28T18:37:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "11.1. <b>Optimization</b> and Deep <b>Learning</b> \u2014 Dive into Deep <b>Learning</b> 0.17.2 ...", "url": "https://d2l.ai/chapter_optimization/optimization-intro.html", "isFamilyFriendly": true, "displayUrl": "https://d2l.ai/chapter_<b>optimization</b>/<b>optimization</b>-intro.html", "snippet": "The objective function of deep <b>learning</b> models usually has many local optima. When the numerical solution of an <b>optimization</b> problem is near the local optimum, the numerical solution obtained by the final iteration may only minimize the objective function locally, rather than globally, as the gradient of the objective function\u2019s solutions approaches or becomes zero.Only some degree of noise might knock the parameter out of the local minimum.", "dateLastCrawled": "2022-02-02T22:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Gradient</b> Descent: A Quick, Simple Introduction | Built In", "url": "https://builtin.com/data-science/gradient-descent", "isFamilyFriendly": true, "displayUrl": "https://builtin.com/data-science/<b>gradient</b>-descent", "snippet": "<b>Gradient</b> descent is an <b>optimization</b> algorithm that&#39;s used when training a <b>machine</b> <b>learning</b> model. It&#39;s based on a <b>convex</b> function and tweaks its parameters iteratively to minimize a given function to its local minimum.", "dateLastCrawled": "2022-02-02T07:47:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Regularization : What? Why? and How? (Part -1) | by Siddhant Rai ...", "url": "https://medium.com/mlearning-ai/regularization-what-why-and-how-part-1-ef6bdb6bafea", "isFamilyFriendly": true, "displayUrl": "https://medium.com/m<b>learning</b>-ai/regularization-what-why-and-how-part-1-ef6bdb6bafea", "snippet": "In general <b>machine</b> <b>learning</b> sense, it is solving an objective function to perform maximum or minimum evaluation. In reality, <b>optimization</b> is lot more profound in usage. Then we have two terms ...", "dateLastCrawled": "2022-01-28T00:10:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Summary of Thesis: <b>Non-convex Optimization for Machine Learning</b>: Design ...", "url": "https://ai.stanford.edu/~tengyuma/slides/summary.pdf", "isFamilyFriendly": true, "displayUrl": "https://ai.stanford.edu/~tengyuma/slides/summary.pdf", "snippet": "Summary of Thesis: <b>Non-convex Optimization for Machine Learning</b>: Design, Analysis, and Understanding Tengyu Ma October 15, 2018 Non-<b>convex</b> <b>optimization</b> is ubiquitous in modern <b>machine</b> <b>learning</b>: re-cent breakthroughs in deep <b>learning</b> require optimizing non-<b>convex</b> training objective functions; problems that admit accurate <b>convex</b> relaxation can often be solved more e ciently with non-<b>convex</b> formulations. However, the theoretical understanding of non-<b>convex</b> <b>optimization</b> remained rather limited ...", "dateLastCrawled": "2021-09-02T16:42:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "[2005.14605] CoolMomentum: A Method for Stochastic <b>Optimization</b> by ...", "url": "https://arxiv.org/abs/2005.14605", "isFamilyFriendly": true, "displayUrl": "https://arxiv.org/abs/2005.14605", "snippet": "This <b>analogy</b> provides useful insights for non-<b>convex</b> stochastic <b>optimization</b> in <b>machine</b> <b>learning</b>. Here we find that integration of the discretized Langevin equation gives a coordinate updating rule equivalent to the famous Momentum <b>optimization</b> algorithm. As a main result, we show that a gradual decrease of the momentum coefficient from the initial value close to unity until zero is equivalent to application of Simulated Annealing or slow cooling, in physical terms. Making use of this novel ...", "dateLastCrawled": "2021-10-23T08:45:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Best <b>Artificial Intelligence</b> Course (AIML) by UT Austin", "url": "https://www.mygreatlearning.com/pg-program-artificial-intelligence-course", "isFamilyFriendly": true, "displayUrl": "https://www.mygreat<b>learning</b>.com/pg-program-<b>artificial-intelligence</b>-course", "snippet": "<b>Machine</b> <b>Learning</b>: <b>Machine</b> <b>learning</b> is a sub-branch of AI that teaches machines to learn any task without the help of explicit directions. It teaches machines to learn by drawing inferences from past experience. <b>Machine</b> <b>learning</b> primarily focuses on developing computer programs that can access and analyze data to identify patterns and understand data behaviour to reach possible conclusions without any kind of human intervention.", "dateLastCrawled": "2022-02-01T17:58:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "What is <b>the relationship between Online Machine Learning</b> and ...", "url": "https://www.quora.com/What-is-the-relationship-between-Online-Machine-Learning-and-Incremental-Machine-Learning", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/What-is-<b>the-relationship-between-Online-Machine-Learning</b>-and...", "snippet": "Answer (1 of 4): Online <b>learning</b> usually refers to the case where each example is only used once (e.g. if you&#39;re updating an ad click prediction model online after each impression or click), while incremental methods usually pick one example at a time from a finite dataset and can process the sam...", "dateLastCrawled": "2022-01-14T06:00:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Which <b>machine</b> <b>learning</b> algorithms for classification support online ...", "url": "https://www.quora.com/Which-machine-learning-algorithms-for-classification-support-online-learning", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/Which-<b>machine</b>-<b>learning</b>-algorithms-for-classification-support...", "snippet": "Answer (1 of 5): Most algorithms can be adapted to make them online, even though the standard implementations may not support it. E.g. both decision trees and support ...", "dateLastCrawled": "2022-01-09T00:45:00.0000000Z", "language": "en", "isNavigational": false}], [], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "SimplifiedMachineLearningWorkflows-book/Wolfram-Technology-Conference ...", "url": "https://github.com/antononcube/SimplifiedMachineLearningWorkflows-book/blob/master/Data/Wolfram-Technology-Conference-2016-to-2019-abstracts.csv", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/antononcube/Simplified<b>MachineLearning</b>Workflows-book/blob/master/...", "snippet": "Finally, I use <b>machine</b> <b>learning</b> algorithms to train a series of classifiers that can predict a text&#39;s authorship based on its MFW frequencies. Cross-validation indicates that Gallus and Monk are very likely one and the same author. The results also reveal the especially high and hitherto underexplored effectiveness of the Bray Curtis Distance measure and of logistic regression in shedding light on questions of authorship attribution. Data Analytics &amp; Information Science : 2016.Gunnar.Prei\u00df ...", "dateLastCrawled": "2021-12-28T12:42:00.0000000Z", "language": "en", "isNavigational": false}], []], "all_bing_queries": ["+(convex optimization)  is like +(finding the shortest path between two points on a map)", "+(convex optimization) is similar to +(finding the shortest path between two points on a map)", "+(convex optimization) can be thought of as +(finding the shortest path between two points on a map)", "+(convex optimization) can be compared to +(finding the shortest path between two points on a map)", "machine learning +(convex optimization AND analogy)", "machine learning +(\"convex optimization is like\")", "machine learning +(\"convex optimization is similar\")", "machine learning +(\"just as convex optimization\")", "machine learning +(\"convex optimization can be thought of as\")", "machine learning +(\"convex optimization can be compared to\")"]}