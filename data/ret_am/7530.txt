{"src_spec_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Convex</b> <b>optimization</b> explained: Concepts &amp; Examples - Data Analytics", "url": "https://vitalflux.com/convex-optimization-explained-concepts-examples/", "isFamilyFriendly": true, "displayUrl": "https://vitalflux.com/<b>convex</b>-<b>optimization</b>-explained-concepts-examples", "snippet": "<b>Convex</b> sets are often used in <b>convex</b> <b>optimization</b> techniques because <b>convex</b> sets can be manipulated through certain types of operations to maximize or minimize a <b>convex</b> function. An example of a <b>convex</b> set is a <b>convex</b> hull, which is the smallest <b>convex</b> set that can contain a given <b>convex</b> set. A <b>convex</b> function takes the value only <b>between</b> its minimum and maximum values on any <b>convex</b> interval. This means that there exist no local extremes for this <b>convex</b> function (on the <b>convex</b> region). It ...", "dateLastCrawled": "2022-01-21T14:04:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "search - AI <b>Searching Problem: Shortest path between</b> 2 <b>points</b> on plane ...", "url": "https://stackoverflow.com/questions/5010797/ai-searching-problem-shortest-path-between-2-points-on-plane-with-obstacles", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/5010797", "snippet": "the aim is to find <b>the shortest</b> <b>path</b> <b>between</b> 2 <b>points</b> on a plane that has <b>convex</b> polygonal obstacles. supposing the state space consists of all positions in the (x,y) plane, how many states are there? How many paths are there to the goal? I believe there are x*y states, but I am not sure about how many paths there are to the goal? Also, I need to define a good state space, would appreciate advise on this too as I am not sure how to think towards a solution yet. update 1: Wrt to &#39;a good state ...", "dateLastCrawled": "2022-01-25T13:41:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Computing approximately shortest descending paths on</b> <b>convex</b> terrains ...", "url": "https://link.springer.com/article/10.1007/s40314-018-0686-3", "isFamilyFriendly": true, "displayUrl": "https://link.springer.com/article/10.1007/s40314-018-0686-3", "snippet": "Given a polyhedral terrain and <b>two</b> <b>points</b> p, q on the terrain, a <b>path</b> from p to q on the terrain is descending if z-coordinate of a point v never increases while we move v along the <b>path</b> from p to q. The problem of <b>finding</b> <b>shortest</b> descending paths on polyhedral terrains was posed by de Berg and van Kreveld (Algorithmica 18:306\u2013323, 1997). In this paper, the multiple shooting approach proposed by Hoai et al. (J Comp Appl Math 317:235\u2013246, 2017) is applied for approximately computing ...", "dateLastCrawled": "2021-11-03T01:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "geometry - <b>Find shortest path between points without entering</b> a polygon ...", "url": "https://math.stackexchange.com/questions/3356573/find-shortest-path-between-points-without-entering-a-polygon", "isFamilyFriendly": true, "displayUrl": "https://math.stackexchange.com/questions/3356573/<b>find-shortest-path-between-points</b>...", "snippet": "Is there a way to calculate what is <b>the shortest</b> <b>path</b> if I have <b>two</b> <b>points</b> that have a polygon <b>between</b> them. Touching the polygon is allowed but crossing is not. I have several examples here: I have highlighted the optimal paths in all 3 cases with green. The goal in each of them is get from A to B, F to G, and K to L.", "dateLastCrawled": "2021-12-06T11:34:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "geometry - How to find <b>the shortest path between two points</b> under the ...", "url": "https://math.stackexchange.com/questions/412672/how-to-find-the-shortest-path-between-two-points-under-the-restriction", "isFamilyFriendly": true, "displayUrl": "https://math.<b>stackexchange</b>.com/questions/412672", "snippet": "Mathematics <b>Stack Exchange</b> is a question and answer site for people studying math at any level and professionals in related fields. It only takes a minute to sign up.", "dateLastCrawled": "2022-01-18T15:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "java - Algorithm to find <b>the shortest</b> <b>path</b>, with <b>obstacles</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/5303538/algorithm-to-find-the-shortest-path-with-obstacles", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/5303538", "snippet": "One good heuristic for this would be to use the Manhattan distance <b>between</b> the <b>two</b> <b>points</b>. If you&#39;re looking for an easier but still extremely efficient algorithm for <b>finding</b> <b>the shortest</b> <b>path</b>, consider looking into Dijkstra&#39;s algorithm, which can be thought of as a simpler version of A*. It&#39;s a bit slower than A*, but still runs extremely quickly and guarantees an optimal answer. Hope this helps! Share. Improve this answer. Follow answered Mar 14 &#39;11 at 19:40. templatetypedef ...", "dateLastCrawled": "2022-01-24T15:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "Multiple <b>shooting approach for computing approximately shortest paths</b> ...", "url": "https://www.sciencedirect.com/science/article/pii/S0377042716305155", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/pii/S0377042716305155", "snippet": "<b>The shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> on a <b>convex</b> polytope does not pass any vertex of the polytope that are not one of these <b>two</b> <b>points</b> (Sharir and Schorr ). 3. <b>Finding</b> a local <b>shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> on the surface of a <b>convex</b> polytope3.1. Multiple shooting partition and straightness condition", "dateLastCrawled": "2021-12-15T12:54:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Shortest Path Algorithms</b> Tutorials &amp; Notes - <b>HackerEarth</b>", "url": "https://www.hackerearth.com/practice/algorithms/graphs/shortest-path-algorithms/tutorial/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>hackerearth</b>.com/practice/algorithms/graphs/<b>shortest-path-algorithms</b>/tutorial", "snippet": "<b>The shortest</b> <b>path</b> problem is about <b>finding</b> a <b>path</b> <b>between</b> $$2$$ vertices in a graph such that the total sum of the edges weights is minimum. This problem could be solved easily using (BFS) if all edge weights were ($$1$$), but here weights can take any value. Three different algorithms are discussed below depending on the use-case.", "dateLastCrawled": "2022-02-02T23:50:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "GitHub - Vertmo/Algorithms_Example: List of Algorithms", "url": "https://github.com/Vertmo/Algorithms_Example", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/Vertmo/Algorithms_Example", "snippet": "Euclidean <b>shortest</b> <b>path</b> problem : find <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> that does not intersect any obstacle Exponentiating by squaring : an algorithm used for the fast computation of large integer powers of a number", "dateLastCrawled": "2022-02-01T18:53:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "Separable <b>Convex</b> Cost Network Flow Problems - CU Denver <b>Optimization</b> ...", "url": "http://math.ucdenver.edu/~sborgwardt/wiki/index.php/Separable_Convex_Cost_Network_Flow_Problems", "isFamilyFriendly": true, "displayUrl": "math.ucdenver.edu/~sborgwardt/wiki/index.php/Separable_<b>Convex</b>_Cost_Ne<b>two</b>rk_Flow_Problems", "snippet": "This means that any line connecting <b>two</b> <b>points</b> on the graph of the function lay above the function. The function $ C_{ij}(x) ... Each person will travel along a <b>shortest</b> <b>path</b> with total delay cost $ C_{ij}(x_{ij}) $ on the arcs of the <b>path</b> which leads to a <b>convex</b> cost. Area Transfers in Communication Networks . In the past equipping every phone with a routing ability was expensive. Thus requiring switch centers to be used when routing phone calls. A <b>convex</b> cost network flow problem arises to ...", "dateLastCrawled": "2022-01-29T15:06:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "SHUI-NEE CHOW, JUN LU, HAO-MIN ZHOU", "url": "https://math.gatech.edu/~hmzhou/publications/ChLuZh13-2.pdf", "isFamilyFriendly": true, "displayUrl": "https://math.gatech.edu/~hmzhou/publications/ChLuZh13-2.pdf", "snippet": "<b>Finding</b> <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> given <b>points</b> Xand Y while avoiding all the obstacles fP igN i=1 in a region is a classical problem that carries di erent names, such as piano mover\u2019s problem, watchman route problem or zookeeper\u2019s problem in practice. It has received great attention since decades ago. Various methods based on combinatorics or di erential equations have been developed for di erent scenarios. For polygonal obstacles in R2, an optimal algorithm based on Dijkstra method ...", "dateLastCrawled": "2021-07-18T16:24:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Multiple <b>shooting approach for computing approximately shortest paths</b> ...", "url": "https://www.sciencedirect.com/science/article/pii/S0377042716305155", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/pii/S0377042716305155", "snippet": "1. Introduction. The problem of determining the Euclidean <b>shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> in a domain (polygon or the surface of a polytope in 3D) is a classic of computational geometry and has many applications (see , ).Computing exact <b>shortest</b> paths on the surface of a polytope can be seen in , .Computing approximate <b>shortest</b> paths on the surface of a polytope is already presented in , , , , , , , etc.Many of these examples use a so-called sequential approach, i.e., at each step, the ...", "dateLastCrawled": "2021-12-15T12:54:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "geometry - <b>Find shortest path between points without entering</b> a polygon ...", "url": "https://math.stackexchange.com/questions/3356573/find-shortest-path-between-points-without-entering-a-polygon", "isFamilyFriendly": true, "displayUrl": "https://math.stackexchange.com/questions/3356573/<b>find-shortest-path-between-points</b>...", "snippet": "Is there a way to calculate what is <b>the shortest</b> <b>path</b> if I have <b>two</b> <b>points</b> that have a polygon <b>between</b> them. Touching the polygon is allowed but crossing is not. I have several examples here: I have highlighted the optimal paths in all 3 cases with green. The goal in each of them is get from A to B, F to G, and K to L.", "dateLastCrawled": "2021-12-06T11:34:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Computing approximately shortest descending paths on</b> <b>convex</b> terrains ...", "url": "https://link.springer.com/article/10.1007/s40314-018-0686-3", "isFamilyFriendly": true, "displayUrl": "https://link.springer.com/article/10.1007/s40314-018-0686-3", "snippet": "Given a polyhedral terrain and <b>two</b> <b>points</b> p, q on the terrain, a <b>path</b> from p to q on the terrain is descending if z-coordinate of a point v never increases while we move v along the <b>path</b> from p to q.The problem of <b>finding</b> <b>shortest</b> descending paths on polyhedral terrains was posed by de Berg and van Kreveld (Algorithmica 18:306\u2013323, 1997).In this paper, the multiple shooting approach proposed by Hoai et al. (J Comp Appl Math 317:235\u2013246, 2017) is applied for approximately computing ...", "dateLastCrawled": "2021-11-03T01:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Solutions to TSP using <b>Convex</b> Hull - people.uncw.edu", "url": "http://people.uncw.edu/tagliarinig/Courses/380/F2014PPs/Obtaining%20a%20Solution%20to%20TSP%20using%20Convex%20Hulls.pptx", "isFamilyFriendly": true, "displayUrl": "people.uncw.edu/tagliarinig/Courses/380/F2014PPs/Obtaining a Solution to TSP using...", "snippet": "Given a set of N <b>points</b>. The <b>convex</b> hull is the bounded. region of a set of N <b>points</b> creating. the smallest <b>convex</b> polygon. <b>Convex</b> hull - Grahams Scan Algorithm . The first step in this algorithm is to find the point with the lowest y-coordinate. If the lowest y-coordinate exists in more than one point in the set, the point with the lowest x-coordinate out of the candidates should be chosen. Call this point P. This step takes O(n), where n is the number of <b>points</b> in question. Next, the set ...", "dateLastCrawled": "2022-01-06T04:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Computing <b>Shortest</b> Paths among Curved Obstacles in the Plane | ACM ...", "url": "https://dl.acm.org/doi/10.1145/2660771", "isFamilyFriendly": true, "displayUrl": "https://dl.acm.org/doi/10.1145/2660771", "snippet": "(3) We improve the previous work for computing <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> among <b>convex</b> pseudodisks of O(1) complexity each. In addition, a by-product of our techniques is an optimal O ( n + h log h ) time and O ( n ) space algorithm for computing the Voronoi diagram of a set of h pairwise disjoint <b>convex</b> splinegons with a total of n vertices.", "dateLastCrawled": "2022-01-28T03:54:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "Algorithm: Problem 1.1.4 .How are <b>the shortest</b>-<b>path</b> and traveling ...", "url": "https://compteralgorithm.blogspot.com/2014/02/problem-114-how-are-shortest-path-and.html", "isFamilyFriendly": true, "displayUrl": "https://compteralgorithm.blogspot.com/2014/02/problem-114-how-are-<b>shortest</b>-<b>path</b>-and.html", "snippet": "How are <b>the shortest</b>-<b>path</b> <b>and traveling-salesman problems given above similar</b>? How are they different? What is <b>shortest</b> <b>path</b> problem? In graph theory, <b>the shortest</b> <b>path</b> problem is the problem of <b>finding</b> a <b>path</b> <b>between</b> <b>two</b> vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized. And what is travelling salesman problem? The travelling salesman problem (TSP) is an NP-hard problem in combinatorial <b>optimization</b> studied in operations research and ...", "dateLastCrawled": "2021-12-11T23:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "How to Solve the Traveling <b>Salesman Problem</b> - A ... - Towards Data Science", "url": "https://towardsdatascience.com/how-to-solve-the-traveling-salesman-problem-a-comparative-analysis-39056a916c9f", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/how-to-solve-the-traveling-<b>salesman-problem</b>-a...", "snippet": "This <b>problem</b> is to find <b>the shortest</b> <b>path</b> that a salesman should take to traverse through a list of cities and return to the origin city. The list of cities and the distance <b>between</b> each pair are provided. TSP is useful in various applications in real life such as planning or logistics. For example, a concert tour manager who wants to schedule a series of performances for the band must determine <b>the shortest</b> <b>path</b> for the tour to ensure reducing traveling costs and not making the band ...", "dateLastCrawled": "2022-02-03T16:52:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Minimize Distance to Walk - Optimization Problem</b>", "url": "https://www.analyzemath.com/calculus/Problems/minimum_distance.html", "isFamilyFriendly": true, "displayUrl": "https://www.analyzemath.com/calculus/Problems/minimum_distance.html", "snippet": "The first derivative is used to minimize (optimize) distance travelled <b>between</b> <b>two</b> <b>points</b>. Problem The diagram below shows the <b>path</b> that Wilson follows every morning to take water from the river to his farm. Help Wilson minimize the total distance travelled from his house to the farm. Solution to the Problem. <b>Two</b> methods, to solve this problem, are suggested. METHOD 1: In the diagram below we find the distances d and D add them and minimize the total distance. d = \u221a [ x 2 + 5 2] D = \u221a ...", "dateLastCrawled": "2022-02-02T16:01:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "GitHub - Vertmo/Algorithms_Example: List of Algorithms", "url": "https://github.com/Vertmo/Algorithms_Example", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/Vertmo/Algorithms_Example", "snippet": "k-medoids : <b>similar</b> to k-means, but chooses datapoints or medoids as centers. Kabsch algorithm : calculate the optimal alignment of <b>two</b> sets of <b>points</b> in order to compute the root mean squared deviation <b>between</b> <b>two</b> protein structures. Kadane&#39;s algorithm: finds maximum sub-array of any size", "dateLastCrawled": "2022-02-01T18:53:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Shortest Paths in the Plane</b> with Obstacle Violations | SpringerLink", "url": "https://link.springer.com/article/10.1007/s00453-020-00673-y", "isFamilyFriendly": true, "displayUrl": "https://link.springer.com/article/10.1007/s00453-020-00673-y", "snippet": "We study the problem of <b>finding</b> <b>shortest paths in the plane</b> among h <b>convex</b> obstacles, where the <b>path</b> is allowed to pass through (violate) up to k obstacles, for \\(k \\le h\\).Equivalently, the problem is to find <b>shortest</b> paths that become obstacle-free if k obstacles are removed from the input. Given a fixed source <b>point s</b>, we show how to construct a map, called a <b>shortest</b> k-<b>path</b> map, so that all destinations in the same region of the map have the same combinatorial <b>shortest</b> <b>path</b> passing ...", "dateLastCrawled": "2022-01-29T16:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Linear Optimization</b>", "url": "https://home.ubalt.edu/ntsbarsh/opre640a/partVIII.htm", "isFamilyFriendly": true, "displayUrl": "https://home.ubalt.edu/ntsbarsh/opre640a/partVIII.htm", "snippet": "A <b>convex</b> set is the one that if you choose <b>two</b> feasible <b>points</b> from it, then all the <b>points</b> on the straight line segment joining these <b>two</b> <b>points</b> are also feasible. The proof that the F.R. of linear programs are always <b>convex</b> sets follows by contradiction. The following figures depict examples for the <b>two</b> types of sets: A non-<b>convex</b> and a <b>convex</b> set.", "dateLastCrawled": "2022-02-02T17:57:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "58 <b>convex</b> objective function to a linear program no such tricks exists ...", "url": "https://www.coursehero.com/file/p1oddnc/58-convex-objective-function-to-a-linear-program-no-such-tricks-exists-for-a/", "isFamilyFriendly": true, "displayUrl": "https://www.coursehero.com/file/p1oddnc/58-<b>convex</b>-objective-function-to-a-linear...", "snippet": "Essence of Dijkstra\u2019s <b>Shortest</b>- <b>Path</b> Algorithm \u2022 Key <b>Points</b> regarding the nature of the algorithm \u2013 In each iteration, <b>the shortest</b> <b>path</b> from the origin to one of the rest of the nodes is found. That is, we obtain one new \u201csolved\u201d node in each iteration. (More than one such <b>path</b> and node may be found. 71 (More than one such <b>path</b> and node may be found in one iteration when there is a tie. There may also exist multiple <b>shortest</b> paths from the origin to some nodes.) \u2013 The algorithm ...", "dateLastCrawled": "2022-01-11T13:11:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "java - Algorithm to find <b>the shortest</b> <b>path</b>, with <b>obstacles</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/5303538/algorithm-to-find-the-shortest-path-with-obstacles", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/5303538", "snippet": "One good heuristic for this would be to use the Manhattan distance <b>between</b> the <b>two</b> <b>points</b>. If you&#39;re looking for an easier but still extremely efficient algorithm for <b>finding</b> <b>the shortest</b> <b>path</b>, consider looking into Dijkstra&#39;s algorithm, which <b>can</b> <b>be thought</b> of as a simpler version of A*. It&#39;s a bit slower than A*, but still runs extremely quickly and guarantees an optimal answer. Hope this helps! Share. Improve this answer. Follow answered Mar 14 &#39;11 at 19:40. templatetypedef ...", "dateLastCrawled": "2022-01-24T15:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "algorithm - <b>Shortest</b> <b>two</b> <b>disjoint paths between two specified vertices</b> ...", "url": "https://stackoverflow.com/questions/11880738/shortest-two-disjoint-paths-between-two-specified-vertices", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/11880738", "snippet": "Here after removing edges of the first <b>shortest</b> <b>path</b> (green), the only remaining <b>path</b> (red) is very heavy. The cost of this solution is 1+1+10+1+1+2+90+2=108. While optimal cost is 1+15+1+2+1+10+1+2=32. Share. Improve this answer. Follow edited Aug 9 &#39;12 at 11:48. answered Aug 9 &#39;12 at 10:06. Evgeny Kluev Evgeny Kluev. 23.8k 7 7 gold badges 52 52 silver badges 93 93 bronze badges. 5:thanks for clarification but is there any theoretical way to prove this ,because above approach is somewhat ...", "dateLastCrawled": "2022-01-14T16:17:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Solutions to TSP using <b>Convex</b> Hull - people.uncw.edu", "url": "http://people.uncw.edu/tagliarinig/Courses/380/F2014PPs/Obtaining%20a%20Solution%20to%20TSP%20using%20Convex%20Hulls.pptx", "isFamilyFriendly": true, "displayUrl": "people.uncw.edu/tagliarinig/Courses/380/F2014PPs/Obtaining a Solution to TSP using...", "snippet": "Traveling Salesman Problem. Distances <b>between</b> n cities are stores in a distance matrix D with elements d ij where i, j = 1 \u2026n and the diagonal elements d ii are zero. A tour <b>can</b> be represented by a cyclic permutation \u03c0 of { 1, 2, \u2026, n} where \u03c0(i) represents the city that follows city i on the tour. The traveling salesman problem is then the <b>optimization</b> problem to find a permutation \u03c0 that minimizes the length of the tour denoted by:. \ud835\udc56=1\ud835\udc5b\ud835\udc51\ud835\udc56\u03c0(\ud835\udc56)", "dateLastCrawled": "2022-01-06T04:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Why is Convex Optimization such a big</b> deal in Machine Learning? - Quora", "url": "https://www.quora.com/Why-is-Convex-Optimization-such-a-big-deal-in-Machine-Learning", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/<b>Why-is-Convex-Optimization-such-a-big</b>-deal-in-Machine-Learning", "snippet": "Answer (1 of 10): <b>Convex</b> <b>optimization</b> is the core of most machine learning methods Some key concepts here: - <b>Convex</b> functions are those for which it&#39;s possible to draw a line segment from any <b>two</b> <b>points</b> on the graph and this line will always be inside the graph (except at the endpoints). This m...", "dateLastCrawled": "2022-01-17T17:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Shortest</b> paths in the plane with <b>polygonal obstacles</b> | Journal of the ACM", "url": "https://dl.acm.org/doi/10.1145/185675.185795", "isFamilyFriendly": true, "displayUrl": "https://dl.acm.org/doi/10.1145/185675.185795", "snippet": "Abstract. We present a practical algorithm for <b>finding</b> minimum-length paths <b>between</b> <b>points</b> in the Euclidean plane with (not necessarily <b>convex</b>) <b>polygonal obstacles</b>. Prior to this work, the best known algorithm for <b>finding</b> <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> in the plane required \u03a9 (n2 log n) time and O (n 2) space, where n denotes the number ...", "dateLastCrawled": "2022-01-03T23:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Is there an efficient algorithm to find the <b>points</b> of closest approach ...", "url": "https://www.quora.com/Is-there-an-efficient-algorithm-to-find-the-points-of-closest-approach-for-two-paths-represented-as-line-segments", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/Is-there-an-efficient-algorithm-to-find-the-<b>points</b>-of-closest...", "snippet": "Answer (1 of 2): Calculating the minimum distance <b>between</b> each pair of line segments takes O(n^2) time (there are n^2 pairs to compare, and it takes constant time to find <b>the shortest</b> distance <b>between</b> <b>two</b> line segments). If the paths are <b>convex</b> relative to each other, a gradient descent-like sol...", "dateLastCrawled": "2022-01-15T11:43:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "algorithms - <b>Shortest distance between</b> a point in A and a point in B ...", "url": "https://cs.stackexchange.com/questions/2415/shortest-distance-between-a-point-in-a-and-a-point-in-b", "isFamilyFriendly": true, "displayUrl": "https://cs.stackexchange.com/questions/2415/<b>shortest-distance-between</b>-a-point-in-a-and...", "snippet": "I am not sure if I am right, but this problem very similar to problems that <b>can</b> be solved by linear programming in computational geometry. However, the reduction to LP is not straightforward. Also my problem looks related to <b>finding</b> the thinnest stip <b>between</b> <b>two</b> sets of <b>points</b> which obviously <b>can</b> be solved by LP in in 2-dimensional space.", "dateLastCrawled": "2022-01-25T14:49:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Convex</b> <b>optimization</b> explained: Concepts &amp; Examples - Data Analytics", "url": "https://vitalflux.com/convex-optimization-explained-concepts-examples/", "isFamilyFriendly": true, "displayUrl": "https://vitalflux.com/<b>convex</b>-<b>optimization</b>-explained-concepts-examples", "snippet": "<b>Convex</b> sets are often used in <b>convex</b> <b>optimization</b> techniques because <b>convex</b> sets <b>can</b> be manipulated through certain types of operations to maximize or minimize a <b>convex</b> function. An example of a <b>convex</b> set is a <b>convex</b> hull, which is the smallest <b>convex</b> set that <b>can</b> contain a given <b>convex</b> set. A <b>convex</b> function takes the value only <b>between</b> its minimum and maximum values on any <b>convex</b> interval. This means that there exist no local extremes for this <b>convex</b> function (on the <b>convex</b> region). It ...", "dateLastCrawled": "2022-01-21T14:04:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Computing approximately shortest descending paths on</b> <b>convex</b> terrains ...", "url": "https://link.springer.com/article/10.1007/s40314-018-0686-3", "isFamilyFriendly": true, "displayUrl": "https://link.springer.com/article/10.1007/s40314-018-0686-3", "snippet": "Given a polyhedral terrain and <b>two</b> <b>points</b> p, q on the terrain, a <b>path</b> from p to q on the terrain is descending if z-coordinate of a point v never increases while we move v along the <b>path</b> from p to q.The problem of <b>finding</b> <b>shortest</b> descending paths on polyhedral terrains was posed by de Berg and van Kreveld (Algorithmica 18:306\u2013323, 1997).In this paper, the multiple shooting approach proposed by Hoai et al. (J Comp Appl Math 317:235\u2013246, 2017) is applied for approximately computing ...", "dateLastCrawled": "2021-11-03T01:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Designing and Implementing <b>Shortest</b> and Fastest Paths; A Comparison of ...", "url": "https://ijcttjournal.org/2021/Volume-69%20Issue-5/IJCTT-V69I5P102.pdf", "isFamilyFriendly": true, "displayUrl": "https://ijcttjournal.org/2021/Volume-69 Issue-5/IJCTT-V69I5P102.pdf", "snippet": "<b>Finding</b> <b>the shortest</b> <b>path</b> on a map is appropriate and essential issue to be explored and solved (Schr\u00f6der and Cabral, 2019). Much initiative and research has been done to find the best approach for solving this classic problem. These research initiatives have resulted in the advancement of different algorithms and experimental outcomes regarding their performances. Initially, a class of modified \ud835\udc34 search algorithms were identified and their performances were <b>compared</b> to existing state-of ...", "dateLastCrawled": "2021-09-19T00:27:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "What is more useful for a data <b>scientist to learn, convex optimization</b> ...", "url": "https://www.quora.com/What-is-more-useful-for-a-data-scientist-to-learn-convex-optimization-or-discrete-optimization-Choose-only-one-please", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/What-is-more-useful-for-a-data-scientist-to-learn-<b>convex</b>...", "snippet": "Answer (1 of 3): I haven\u2019t studied discrete <b>optimization</b> in a formal course, so I don\u2019t have experience in the methods. I learned <b>convex</b> <b>optimization</b> taught to doctoral students in electrical engineering, computer science, and computational math, with some theory and programs required. The most i...", "dateLastCrawled": "2022-01-18T17:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Solutions to TSP using <b>Convex</b> Hull - people.uncw.edu", "url": "http://people.uncw.edu/tagliarinig/Courses/380/F2014PPs/Obtaining%20a%20Solution%20to%20TSP%20using%20Convex%20Hulls.pptx", "isFamilyFriendly": true, "displayUrl": "people.uncw.edu/tagliarinig/Courses/380/F2014PPs/Obtaining a Solution to TSP using...", "snippet": "Traveling Salesman Problem. Distances <b>between</b> n cities are stores in a distance matrix D with elements d ij where i, j = 1 \u2026n and the diagonal elements d ii are zero. A tour <b>can</b> be represented by a cyclic permutation \u03c0 of { 1, 2, \u2026, n} where \u03c0(i) represents the city that follows city i on the tour. The traveling salesman problem is then the <b>optimization</b> problem to find a permutation \u03c0 that minimizes the length of the tour denoted by:. \ud835\udc56=1\ud835\udc5b\ud835\udc51\ud835\udc56\u03c0(\ud835\udc56)", "dateLastCrawled": "2022-01-06T04:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "geometry - How to find <b>the shortest path between two points</b> under the ...", "url": "https://math.stackexchange.com/questions/412672/how-to-find-the-shortest-path-between-two-points-under-the-restriction", "isFamilyFriendly": true, "displayUrl": "https://math.<b>stackexchange</b>.com/questions/412672", "snippet": "<b>Stack Exchange</b> network consists of 178 Q&amp;A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers.. Visit <b>Stack Exchange</b>", "dateLastCrawled": "2022-01-18T15:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "geometry - Bezier curve, constrained <b>shortest</b> <b>path</b> and minimum time: is ...", "url": "https://math.stackexchange.com/questions/3132243/bezier-curve-constrained-shortest-path-and-minimum-time-is-the-optimal-curve-a", "isFamilyFriendly": true, "displayUrl": "https://math.stackexchange.com/questions/3132243/bezier-curve-constrained-<b>shortest</b>...", "snippet": "In the unconstrained case, <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> in arbitrary dimension is given by a straight line, which is also a Bezier curve of degree one, with <b>two</b> control <b>points</b> corresponding to the desired start and end positions. If additional constraints apply (initial / end velocities and acceleration), the constraints are expressed using additional control <b>points</b>, one per constraint. For instance, if the initial velocity is constrained, a Bezier curve of degree at least 2 is ...", "dateLastCrawled": "2022-01-19T07:46:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Shortest Path Algorithms</b> Tutorials &amp; Notes - <b>HackerEarth</b>", "url": "https://www.hackerearth.com/practice/algorithms/graphs/shortest-path-algorithms/tutorial/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>hackerearth</b>.com/practice/algorithms/graphs/<b>shortest-path-algorithms</b>/tutorial", "snippet": "<b>The shortest</b> <b>path</b> problem is about <b>finding</b> a <b>path</b> <b>between</b> $$2$$ vertices in a graph such that the total sum of the edges weights is minimum. This problem could be solved easily using (BFS) if all edge weights were ($$1$$), but here weights <b>can</b> take any value. Three different algorithms are discussed below depending on the use-case.", "dateLastCrawled": "2022-02-02T23:50:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "How to Solve the Traveling <b>Salesman Problem</b> - A ... - Towards Data Science", "url": "https://towardsdatascience.com/how-to-solve-the-traveling-salesman-problem-a-comparative-analysis-39056a916c9f", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/how-to-solve-the-traveling-<b>salesman-problem</b>-a...", "snippet": "This <b>problem</b> is to find <b>the shortest</b> <b>path</b> that a salesman should take to traverse through a list of cities and return to the origin city. The list of cities and the distance <b>between</b> each pair are provided. TSP is useful in various applications in real life such as planning or logistics. For example, a concert tour manager who wants to schedule a series of performances for the band must determine <b>the shortest</b> <b>path</b> for the tour to ensure reducing traveling costs and not making the band ...", "dateLastCrawled": "2022-02-03T16:52:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "Iterative determination of <b>the shortest</b> <b>path</b> <b>between</b> <b>two</b> <b>points</b> on a ...", "url": "https://www.freepatentsonline.com/6392646.html", "isFamilyFriendly": true, "displayUrl": "https://www.freepatentsonline.com/6392646.html", "snippet": "<b>Finding</b> <b>the shortest</b> <b>path</b> on a non-flat surface is a requirement encountered in numerous practical applications, e.g., building <b>the shortest</b> road connecting <b>two</b> locations in a mountainous region, or flying <b>the shortest</b> route <b>between</b> <b>two</b> locations in a mountainous region while maintaining constant elevation above the ground (typical for helicopter military missions). In the first example there may be other criteria apart from the road length, such as maximum incline of the road and water ...", "dateLastCrawled": "2022-01-08T01:40:00.0000000Z", "language": "en", "isNavigational": false}]], "gen_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Optimization</b> for <b>Machine</b> <b>Learning</b>", "url": "http://optml.mit.edu/talks/pkuLectAlgo3.pdf", "isFamilyFriendly": true, "displayUrl": "optml.mit.edu/talks/pkuLectAlgo3.pdf", "snippet": "<b>Optimization</b> for <b>Machine</b> <b>Learning</b> \u2013 Sra, Nowozin, Wright Theory of <b>Convex</b> <b>Optimization</b> for <b>Machine</b> <b>Learning</b> \u2013 Bubeck NIPS 2016 <b>Optimization</b> Tutorial \u2013 Bach, Sra Some related courses: EE227A, Spring 2013, (Sra, UC Berkeley) 10-801, Spring 2014 (Sra, CMU) EE364a,b (Boyd, Stanford) EE236b,c (Vandenberghe, UCLA) Venues: NIPS, ICML, UAI, AISTATS, SIOPT, Math. Prog. Suvrit Sra(suvrit@mit.edu)<b>Optimization</b> for <b>Machine</b> <b>Learning</b> 2 / 29. Lecture Plan \u2013Introduction (3 lectures) \u2013Problems and ...", "dateLastCrawled": "2021-08-29T23:18:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Machine</b> <b>Learning</b>: The <b>Optimization</b> Perspective", "url": "https://kt.era.ee/lectures/aacimp2015/3-optimization.pdf", "isFamilyFriendly": true, "displayUrl": "https://kt.era.ee/lectures/aacimp2015/3-<b>optimization</b>.pdf", "snippet": "Reasoning by <b>analogy</b> Dragons. <b>Optimization</b> Given a function find the argument x resulting in the optimal value. AACIMP Summer School August 2015. Special cases of <b>optimization</b> <b>Machine</b> <b>learning</b> ...", "dateLastCrawled": "2021-09-02T08:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Introduction to Machine Learning</b> \u2013 Data and Beyond", "url": "https://dataandbeyond.wordpress.com/2017/08/24/introduction-to-machine-learning-2/", "isFamilyFriendly": true, "displayUrl": "https://dataandbeyond.wordpress.com/2017/08/24/<b>introduction-to-machine-learning</b>-2", "snippet": "<b>Optimization</b> methods are applied to minimize the loss function by changing the parameter values, which is the central theme of <b>machine</b> <b>learning</b>.Zero-one loss is L0-1 = 1 (m &lt;= 0); in zero-one loss, value of loss is 0 for m &gt;= 0 whereas 1 for m &lt; 0. The difficult part with this loss is it is not differentiable, non-<b>convex</b>, and also NP-hard. Hence, in order to make <b>optimization</b> feasible and solvable, these losses are replaced by different surrogate losses for different problems.", "dateLastCrawled": "2022-01-17T05:57:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "CPSC 540: <b>Machine</b> <b>Learning</b>", "url": "https://www.cs.ubc.ca/~schmidtm/Courses/540-W18/L12.5.pdf", "isFamilyFriendly": true, "displayUrl": "https://www.cs.ubc.ca/~schmidtm/Courses/540-W18/L12.5.pdf", "snippet": "The solution for <b>convex</b> fis actually asaddle point, max z min x L(x;z): (in cases where the max and min have solutions) One way to solve this is toeliminate x, max z D(z); where D(z) = min xL(x;z) is called thedual function. Another method iseliminate constraints(see Michael Friedlander\u2019s course). ( nd a feasible x, nd basis for null-space of A, optimize fover null-space.) Fenchel Duality Large-Scale Kernel Methods Digression: Supremum and In mum To handle case where min xf(x) is not ...", "dateLastCrawled": "2021-12-31T12:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "11.2. <b>Convexity</b> \u2014 Dive into Deep <b>Learning</b> 0.17.2 documentation", "url": "https://d2l.ai/chapter_optimization/convexity.html", "isFamilyFriendly": true, "displayUrl": "https://d2l.ai/chapter_<b>optimization</b>/<b>convexity</b>.html", "snippet": "Furthermore, even though the <b>optimization</b> problems in deep <b>learning</b> are generally nonconvex, they often exhibit some properties of <b>convex</b> ones near local minima. This can lead to exciting new <b>optimization</b> variants such as [Izmailov et al., 2018].", "dateLastCrawled": "2022-01-30T21:15:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Introduction to <b>Machine</b> <b>Learning</b> \u2013 Data and Beyond", "url": "https://dataandbeyond.wordpress.com/2017/08/30/introduction-to-machine-learning-3/", "isFamilyFriendly": true, "displayUrl": "https://dataandbeyond.wordpress.com/2017/08/30/introduction-to-<b>machine</b>-<b>learning</b>-3", "snippet": "Unsupervised <b>learning</b>: Similar to the teacher-student <b>analogy</b>, in which the instructor does not present and provide feedback to the student and who needs to prepare on his/her own. Unsupervised <b>learning</b> does not have as many are in supervised <b>learning</b>: Principal component analysis (PCA) K-means clustering; Reinforcement <b>learning</b>: This is the scenario in which multiple decisions need to be taken by an agent prior to reaching the target and it provides a reward, either +1 or -1, rather than ...", "dateLastCrawled": "2022-01-28T18:37:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Optimization</b> \u2014 <b>Machine</b> <b>Learning</b> for Biologists documentation", "url": "https://readthedocs-ml4b.readthedocs.io/en/latest/chapter_optimization.html", "isFamilyFriendly": true, "displayUrl": "https://readthedocs-ml4b.readthedocs.io/en/latest/chapter_<b>optimization</b>.html", "snippet": "All of <b>machine</b> <b>learning</b> revolves around <b>optimization</b>. This includes regression and model selection frameworks that aim to provide parsimonious and interpretable models for data. Curve fitting is the most basic of regression techniques, with polynomial and exponential fitting resulting in solutions that come from solving linear systems of equations. This can be generalized for fitting of nonlinear systems. Importantly, regression are typically applied to under- or over-determined systems ...", "dateLastCrawled": "2021-12-16T20:54:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Regularization : What? Why? and How? (Part -1) | by Siddhant Rai ...", "url": "https://medium.com/mlearning-ai/regularization-what-why-and-how-part-1-ef6bdb6bafea", "isFamilyFriendly": true, "displayUrl": "https://medium.com/m<b>learning</b>-ai/regularization-what-why-and-how-part-1-ef6bdb6bafea", "snippet": "In general <b>machine</b> <b>learning</b> sense, it is solving an objective function to perform maximum or minimum evaluation. In reality, <b>optimization</b> is lot more profound in usage. Then we have two terms ...", "dateLastCrawled": "2022-01-28T00:10:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Summary of Thesis: <b>Non-convex Optimization for Machine Learning</b>: Design ...", "url": "https://ai.stanford.edu/~tengyuma/slides/summary.pdf", "isFamilyFriendly": true, "displayUrl": "https://ai.stanford.edu/~tengyuma/slides/summary.pdf", "snippet": "Summary of Thesis: <b>Non-convex Optimization for Machine Learning</b>: Design, Analysis, and Understanding Tengyu Ma October 15, 2018 Non-<b>convex</b> <b>optimization</b> is ubiquitous in modern <b>machine</b> <b>learning</b>: re-cent breakthroughs in deep <b>learning</b> require optimizing non-<b>convex</b> training objective functions; problems that admit accurate <b>convex</b> relaxation can often be solved more e ciently with non-<b>convex</b> formulations. However, the theoretical understanding of non-<b>convex</b> <b>optimization</b> remained rather limited ...", "dateLastCrawled": "2021-09-02T16:42:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>machine learning</b> - Damek Davis&#39; Blog", "url": "https://damekdavis.wordpress.com/category/machine-learning/", "isFamilyFriendly": true, "displayUrl": "https://damekdavis.wordpress.com/category/<b>machine-learning</b>", "snippet": "And with this <b>analogy</b>, Ren\u00e9 proposed several deep <b>learning</b> models in which all local minimizers are global minimizers, by associating a <b>convex</b> problem to the notoriously nonconvex deep <b>learning</b> problem such that both problems have the same local minimizers. The key to the association is the <b>analogy</b> with matrix factorization; indeed, a similar correspondences is already known there. I think we optimizers have yet to assess the implications of Ren\u00e9\u2019s talk, who admits he doesn\u2019t have the ...", "dateLastCrawled": "2021-12-26T15:11:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Best <b>Artificial Intelligence</b> Course (AIML) by UT Austin", "url": "https://www.mygreatlearning.com/pg-program-artificial-intelligence-course", "isFamilyFriendly": true, "displayUrl": "https://www.mygreat<b>learning</b>.com/pg-program-<b>artificial-intelligence</b>-course", "snippet": "<b>Machine</b> <b>Learning</b>: <b>Machine</b> <b>learning</b> is a sub-branch of AI that teaches machines to learn any task without the help of explicit directions. It teaches machines to learn by drawing inferences from past experience. <b>Machine</b> <b>learning</b> primarily focuses on developing computer programs that can access and analyze data to identify patterns and understand data behaviour to reach possible conclusions without any kind of human intervention.", "dateLastCrawled": "2022-02-01T17:58:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "What is <b>the relationship between Online Machine Learning</b> and ...", "url": "https://www.quora.com/What-is-the-relationship-between-Online-Machine-Learning-and-Incremental-Machine-Learning", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/What-is-<b>the-relationship-between-Online-Machine-Learning</b>-and...", "snippet": "Answer (1 of 4): Online <b>learning</b> usually refers to the case where each example is only used once (e.g. if you&#39;re updating an ad click prediction model online after each impression or click), while incremental methods usually pick one example at a time from a finite dataset and can process the sam...", "dateLastCrawled": "2022-01-14T06:00:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Which <b>machine</b> <b>learning</b> algorithms for classification support online ...", "url": "https://www.quora.com/Which-machine-learning-algorithms-for-classification-support-online-learning", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/Which-<b>machine</b>-<b>learning</b>-algorithms-for-classification-support...", "snippet": "Answer (1 of 5): Most algorithms can be adapted to make them online, even though the standard implementations may not support it. E.g. both decision trees and support ...", "dateLastCrawled": "2022-01-09T00:45:00.0000000Z", "language": "en", "isNavigational": false}], [], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "SimplifiedMachineLearningWorkflows-book/Wolfram-Technology-Conference ...", "url": "https://github.com/antononcube/SimplifiedMachineLearningWorkflows-book/blob/master/Data/Wolfram-Technology-Conference-2016-to-2019-abstracts.csv", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/antononcube/Simplified<b>MachineLearning</b>Workflows-book/blob/master/...", "snippet": "Finally, I use <b>machine</b> <b>learning</b> algorithms to train a series of classifiers that can predict a text&#39;s authorship based on its MFW frequencies. Cross-validation indicates that Gallus and Monk are very likely one and the same author. The results also reveal the especially high and hitherto underexplored effectiveness of the Bray Curtis Distance measure and of logistic regression in shedding light on questions of authorship attribution. Data Analytics &amp; Information Science : 2016.Gunnar.Prei\u00df ...", "dateLastCrawled": "2021-12-28T12:42:00.0000000Z", "language": "en", "isNavigational": false}], []], "all_bing_queries": ["+(convex optimization)  is like +(finding the shortest path between two points)", "+(convex optimization) is similar to +(finding the shortest path between two points)", "+(convex optimization) can be thought of as +(finding the shortest path between two points)", "+(convex optimization) can be compared to +(finding the shortest path between two points)", "machine learning +(convex optimization AND analogy)", "machine learning +(\"convex optimization is like\")", "machine learning +(\"convex optimization is similar\")", "machine learning +(\"just as convex optimization\")", "machine learning +(\"convex optimization can be thought of as\")", "machine learning +(\"convex optimization can be compared to\")"]}