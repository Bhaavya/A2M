{"src_spec_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Word2Vec</b> <b>Model</b> \u2014 gensim", "url": "https://radimrehurek.com/gensim/auto_examples/tutorials/run_word2vec.html", "isFamilyFriendly": true, "displayUrl": "https://radimrehurek.com/gensim/auto_examples/tutorials/run_<b>word2vec</b>.html", "snippet": "To see what <b>Word2Vec</b> can do, let\u2019s download a <b>pre-trained</b> <b>model</b> and play around with it. We will fetch the <b>Word2Vec</b> <b>model</b> trained on part of the Google News dataset, covering approximately 3 million words and phrases. Such a <b>model</b> can take hours to train, but since it\u2019s already available, downloading and loading it with Gensim takes minutes. Important. The <b>model</b> is approximately 2GB, so you\u2019ll need a decent network connection to proceed. Otherwise, skip ahead to the \u201c<b>Training</b> Your ...", "dateLastCrawled": "2022-02-03T02:28:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "(PDF) <b>Pre-trained</b> D-CNN <b>models for detecting complex events</b> in ...", "url": "https://www.researchgate.net/publication/303393775_Pre-trained_D-CNN_models_for_detecting_complex_events_in_unconstrained_videos", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/303393775_<b>Pre-trained</b>_D-CNN_<b>models</b>_for...", "snippet": "The CNN <b>model</b> consists of convolutional, ReLU and pooling layers. The <b>pre-trained</b> VGG16 [12] <b>model</b> is very useful for small number of dataset. Soft sensors using RBF Neural networks are also used ...", "dateLastCrawled": "2022-01-03T17:25:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Intro to PyTorch: <b>Training</b> your first neural network using PyTorch ...", "url": "https://www.pyimagesearch.com/2021/07/12/intro-to-pytorch-training-your-first-neural-network-using-pytorch/", "isFamilyFriendly": true, "displayUrl": "https://www.pyimagesearch.com/2021/07/12/intro-to-pytorch-<b>training</b>-your-first-neural...", "snippet": "The PyTorch library is super powerful, but you\u2019ll need to get used to the fact that <b>training</b> a neural network with PyTorch <b>is like</b> taking off your <b>bicycle</b>\u2019s <b>training</b> <b>wheels</b> \u2014 there\u2019s no safety net to catch you if you mix up important steps (unlike with Keras/TensorFlow which allow you to encapsulate entire <b>training</b> procedures into a single <b>model</b>.fit call).", "dateLastCrawled": "2022-02-03T00:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "gensim: <b>Word2Vec</b> <b>Model</b>", "url": "https://radimrehurek.com/gensim_3.8.3/auto_examples/tutorials/run_word2vec.html", "isFamilyFriendly": true, "displayUrl": "https://radimrehurek.com/gensim_3.8.3/auto_examples/tutorials/run_<b>word2vec</b>.html", "snippet": "To see what <b>Word2Vec</b> can do, let\u2019s download a <b>pre-trained</b> <b>model</b> and play around with it. We will fetch the <b>Word2Vec</b> <b>model</b> trained on part of the Google News dataset, covering approximately 3 million words and phrases. Such a <b>model</b> can take hours to train, but since it\u2019s already available, downloading and loading it with Gensim takes minutes. Important. The <b>model</b> is approximately 2GB, so you\u2019ll need a decent network connection to proceed. Otherwise, skip ahead to the \u201c<b>Training</b> Your ...", "dateLastCrawled": "2022-01-29T21:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Bike Identification as a web app</b> \u2013 Science4Performance", "url": "https://science4performance.com/2019/08/02/bike-identification-as-a-web-app/", "isFamilyFriendly": true, "displayUrl": "https://science4performance.com/2019/08/02/<b>bike-identification-as-a-web-app</b>", "snippet": "The fast.ai library provides a range of convenient ways to access images for the purpose of <b>training</b> a neural network. In this instance, I used the default option of applying transfer learning to a <b>pre-trained</b> ResNet34 <b>model</b>, scaling the images to 224 pixel squares, with data augmentation. After doing some initial <b>training</b>, it was useful to look at the images that had been misclassified, as many of these were incorrect images of motorbikes or cartoons or bike frames without <b>wheels</b> or TT bars ...", "dateLastCrawled": "2022-01-19T19:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Vision-based Bicycle Detection and Tracking using</b> a Deformable Part ...", "url": "https://www.researchgate.net/publication/224190608_Vision-based_Bicycle_Detection_and_Tracking_using_a_Deformable_Part_Model_and_an_EKF_Algorithm", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/224190608_<b>Vision-based_Bicycle_Detection_and</b>...", "snippet": "The <b>pre-trained</b> Faster R-CNN <b>model</b> achieves an F1 score of 68% outperforming the hybrid <b>model</b>, which achieves 58 %. Based in the good results obtained by a two stage detector as Faster R-CNN, we ...", "dateLastCrawled": "2021-12-17T03:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Deep Learning \u2013 Science4Performance</b>", "url": "https://science4performance.com/tag/deep-learning/", "isFamilyFriendly": true, "displayUrl": "https://<b>science4performance</b>.com/tag/deep-learning", "snippet": "In this instance, I used the default option of applying transfer learning to a <b>pre-trained</b> ResNet34 <b>model</b>, scaling the images to 224 pixel squares, with data augmentation. After doing some initial <b>training</b>, it was useful to look at the images that had been misclassified, as many of these were incorrect images of motorbikes or cartoons or bike frames without <b>wheels</b> or TT bars. Taking advantage of a useful fast.ai widget, I removed unhelpful <b>training</b> images and trained the <b>model</b> further.", "dateLastCrawled": "2021-12-28T20:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "machine learning - Can you train the Tensorflow Object Detection API to ...", "url": "https://stackoverflow.com/questions/50882133/can-you-train-the-tensorflow-object-detection-api-to-detect-parts-of-an-object", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/50882133", "snippet": "I have set up the Tensorflow Object Detection API and I want to start <b>training</b> my own models. I have my <b>training</b> images ready and I am ready to start creating label XML&#39;s. I want to train the mode...", "dateLastCrawled": "2021-10-29T20:15:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Python", "url": "http://www.aritrasen.com/tag/python/", "isFamilyFriendly": true, "displayUrl": "www.aritrasen.com/tag/python", "snippet": "Using the <b>pre-trained</b> <b>model</b> we will extract the features then we will add a classifier on top of it as shown below \u2013 Fine Tuning BERT. The dataset we will use is a kaggle TweetSentiment_Analysis dataset as used in the last post. # Importing the required Library import transformers import torch import numpy as np from torch.nn import functional as F import pandas as pd import tqdm # Reading the dataset with no columns titles and with latin encoding df_raw = pd.read_csv(&#39;../input ...", "dateLastCrawled": "2022-01-30T00:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "High-precision <b>bicycle</b> detection on single side-view image based on the ...", "url": "https://www.sciencedirect.com/science/article/pii/S0031320316303272", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/pii/S0031320316303272", "snippet": "The remainder of this paper is organized as follows. Section 2 introduces the related works on the detection of the bicycles, the <b>wheels</b> and the triangles. The main contribution will be described in Section 3 including the proposed <b>bicycle</b> geometric <b>model</b> and the algorithm to detect the <b>bicycle</b> in a side view image. Experimental result will be given in Section 4 to show the practicability of the proposed <b>model</b> and the comparable performance using the implemented algorithm. At the end of the ...", "dateLastCrawled": "2022-01-15T04:07:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Word2Vec</b> <b>Model</b> \u2014 gensim", "url": "https://radimrehurek.com/gensim/auto_examples/tutorials/run_word2vec.html", "isFamilyFriendly": true, "displayUrl": "https://radimrehurek.com/gensim/auto_examples/tutorials/run_<b>word2vec</b>.html", "snippet": "Shows off a demo of <b>Word2Vec</b> using a <b>pre-trained</b> <b>model</b>. Demonstrates <b>training</b> a new <b>model</b> from your own data. Demonstrates loading and saving models . Introduces several <b>training</b> parameters and demonstrates their effect. Discusses memory requirements. Visualizes <b>Word2Vec</b> embeddings by applying dimensionality reduction. Review: Bag-of-words\u00b6 Note. Feel free to skip these review sections if you\u2019re already familiar with the models. You may be familiar with the bag-of-words <b>model</b> from the ...", "dateLastCrawled": "2022-02-03T02:28:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "gensim: <b>Word2Vec</b> <b>Model</b>", "url": "https://radimrehurek.com/gensim_3.8.3/auto_examples/tutorials/run_word2vec.html", "isFamilyFriendly": true, "displayUrl": "https://radimrehurek.com/gensim_3.8.3/auto_examples/tutorials/run_<b>word2vec</b>.html", "snippet": "Shows off a demo of <b>Word2Vec</b> using a <b>pre-trained</b> <b>model</b>. Demonstrates <b>training</b> a new <b>model</b> from your own data. Demonstrates loading and saving models . Introduces several <b>training</b> parameters and demonstrates their effect. Discusses memory requirements. Visualizes <b>Word2Vec</b> embeddings by applying dimensionality reduction. Review: Bag-of-words\u00b6 Note. Feel free to skip these review sections if you\u2019re already familiar with the models. You may be familiar with the bag-of-words <b>model</b> from the ...", "dateLastCrawled": "2022-01-29T21:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "machine learning - Suggestions on how to explain &#39;models&#39; &amp; &#39;algorithms ...", "url": "https://datascience.stackexchange.com/questions/62255/suggestions-on-how-to-explain-models-algorithms", "isFamilyFriendly": true, "displayUrl": "https://datascience.stackexchange.com/questions/62255", "snippet": "Algorithms: Used to train a <b>model</b>, that is, give it instructions and process the input. <b>Model</b>: A diagram of sorts, that incorporates utilizing algorithms to train inputs. Can be reused on <b>similar</b> data. <b>Pre-Trained</b> <b>Model</b>: A <b>model</b>, usually trained on larger data sets and can be utilized to build [your] own models with other data. Thoughts? I&#39;d ...", "dateLastCrawled": "2022-02-01T11:10:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Vision-based Bicycle Detection and Tracking using</b> a Deformable Part ...", "url": "https://www.researchgate.net/publication/224190608_Vision-based_Bicycle_Detection_and_Tracking_using_a_Deformable_Part_Model_and_an_EKF_Algorithm", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/224190608_<b>Vision-based_Bicycle_Detection_and</b>...", "snippet": "<b>Bicycle</b> detection and classification face <b>similar</b> challenges and accordingly a blend of methods based on shape detection and <b>wheels</b> recognition has been proposed in [5, 6,26,27,38]. Comparisons of ...", "dateLastCrawled": "2021-12-17T03:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Optimus/optimius_for_snli.md at master \u00b7 <b>ChunyuanLI/Optimus</b> \u00b7 GitHub", "url": "https://github.com/ChunyuanLI/Optimus/blob/master/doc/optimius_for_snli.md", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/<b>ChunyuanLI/Optimus</b>/blob/master/doc/optimius_for_snli.md", "snippet": "<b>Pre-trained</b> Models for SNLI dataset A <b>model</b> with good latent space manipulation performance on SNLI dataset. Play with user input sentences Play with the my debugging dataset, without user inputs When beta changes from 0 to 1, the reconstruction quality become worse When beta changes from 0 to 1, <b>similar</b> interpolation quality are observed:", "dateLastCrawled": "2021-09-03T02:43:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Python", "url": "https://www.aritrasen.com/tag/python/", "isFamilyFriendly": true, "displayUrl": "https://www.aritrasen.com/tag/python", "snippet": "Using the <b>pre-trained</b> <b>model</b> we will extract the features then we will add a classifier on top of it as shown below \u2013 Fine Tuning BERT. The dataset we will use is a kaggle TweetSentiment_Analysis dataset as used in the last post. # Importing the required Library import transformers import torch import numpy as np from torch.nn import functional as F import pandas as pd import tqdm # Reading the dataset with no columns titles and with latin encoding df_raw = pd.read_csv(&#39;../input ...", "dateLastCrawled": "2022-01-30T05:40:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "deep-learning", "url": "https://www.aritrasen.com/tag/deep-learning/", "isFamilyFriendly": true, "displayUrl": "https://www.aritrasen.com/tag/deep-learning", "snippet": "Using the <b>pre-trained</b> <b>model</b> we will extract the features then we will add a classifier on top of it as shown below \u2013 Fine Tuning BERT. The dataset we will use is a kaggle TweetSentiment_Analysis dataset as used in the last post. # Importing the required Library import transformers import torch import numpy as np from torch.nn import functional as F import pandas as pd import tqdm # Reading the dataset with no columns titles and with latin encoding df_raw = pd.read_csv(&#39;../input ...", "dateLastCrawled": "2022-01-14T12:47:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "What is <b>the difference between feature selection and</b> ... - ResearchGate", "url": "https://www.researchgate.net/post/What_is_the_difference_between_feature_selection_and_feature_reduction", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/post/What_is_<b>the_difference_between_feature_selection_and</b>...", "snippet": "Healthcare data has two major characteristics when using deep learning: 1) often small sample size, 2) different data content from the <b>pre-trained</b> <b>model</b> (e.g., ImageNet).", "dateLastCrawled": "2022-01-02T19:29:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Using BERT to <b>mine large datasets for purchasing sentiment</b> | B. Nikolic ...", "url": "http://www.bnikolic.co.uk/blog/bart/ai/2020/02/18/bert-purchasing-sentiment.html", "isFamilyFriendly": true, "displayUrl": "www.bnikolic.co.uk/blog/bart/ai/2020/02/18/bert-purchasing-sentiment.html", "snippet": "I use the Bidirectional Encoder Representations from Transformers (BERT) large <b>pre-trained</b> <b>model</b> as available in the Python transformers package. Each post on the <b>Bicycle</b> stack exchange is analysed in turn with the <b>model</b> transformers.BertForQuestionAnswering: the post itself is the input paragraph and the question in this case was simply: What should I buy? 1. To each answer a significance from the <b>model</b> is attached. The <b>Bicycle</b> stack exchange posts data can be download from e.g. archive.org ...", "dateLastCrawled": "2022-01-03T06:45:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "machine learning - Can you train the Tensorflow Object Detection API to ...", "url": "https://stackoverflow.com/questions/50882133/can-you-train-the-tensorflow-object-detection-api-to-detect-parts-of-an-object", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/50882133", "snippet": "I have set up the Tensorflow Object Detection API and I want to start <b>training</b> my own models. I have my <b>training</b> images ready and I am ready to start creating label XML&#39;s. I want to train the mode...", "dateLastCrawled": "2021-10-29T20:15:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "data - <b>CNN training on Different Datasets</b> - <b>Data Science Stack Exchange</b>", "url": "https://datascience.stackexchange.com/questions/73543/cnn-training-on-different-datasets", "isFamilyFriendly": true, "displayUrl": "https://<b>datascience.stackexchange</b>.com/questions/73543/<b>cnn-training-on-different-datasets</b>", "snippet": "So here is my <b>thought</b>. I suggest you do some sort of clustering of images. It is okay if it is not a robust one. use any <b>pre-trained</b> <b>model</b> architecture of Inception which has been trained on huge corpus. Freeze the layers and take the feature encodings on the images by passing them through the inception <b>model</b> (Output of FC layer)", "dateLastCrawled": "2022-02-03T00:40:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>New submissions for Tue, 23 Mar</b> 21 \u00b7 Issue #297 \u00b7 kobiso/daily-arxiv ...", "url": "https://github.com/kobiso/daily-arxiv-noti/issues/297", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/kobiso/daily-arxiv-noti/issues/297", "snippet": "Moreover, we find that continuing pre-<b>training</b> could lead to the <b>pre-trained</b> <b>model</b>&#39;s catastrophic forgetting, and a learning method with less forgetting <b>can</b> alleviate this issue. Furthermore, results illustrate that a huge gap still exists between the low-resource and high-resource settings, which highlights the need for more advanced domain adaptation methods for the abstractive summarization task. Cross-Dataset Collaborative Learning for Semantic Segmentation. Authors: Li Wang, Dong Li ...", "dateLastCrawled": "2021-10-16T23:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Deep Learning \u2013 Science4Performance", "url": "https://science4performance.com/category/deep-learning/", "isFamilyFriendly": true, "displayUrl": "https://science4performance.com/category/deep-learning", "snippet": "In this instance, I used the default option of applying transfer learning to a <b>pre-trained</b> ResNet34 <b>model</b>, scaling the images to 224 pixel squares, with data augmentation. After doing some initial <b>training</b>, it was useful to look at the images that had been misclassified, as many of these were incorrect images of motorbikes or cartoons or bike frames without <b>wheels</b> or TT bars. Taking advantage of a useful fast.ai widget, I removed unhelpful <b>training</b> images and trained the <b>model</b> further.", "dateLastCrawled": "2021-12-14T20:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Blog \u2014 <b>riley wong</b>", "url": "https://www.rileynwong.com/blog", "isFamilyFriendly": true, "displayUrl": "https://www.rileynwong.com/blog", "snippet": "The scripts, <b>pre-trained</b> models, and <b>training</b> data <b>can</b> be found on my GitHub repo. <b>Model</b> Overview. The underlying <b>model</b> is a PyTorch implementation of the Sequence to Sequence <b>model</b> network, an encoder-decoder network with an attention mechanism. Seq2seq <b>can</b> translate any arbitrary text sequence to any arbitrary text sequence. A more useful ...", "dateLastCrawled": "2022-01-26T02:23:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Raspberry Pi: Deep learning object detection with OpenCV", "url": "https://www.pyimagesearch.com/2017/10/16/raspberry-pi-deep-learning-object-detection-with-opencv/", "isFamilyFriendly": true, "displayUrl": "https://www.pyimagesearch.com/2017/10/16/raspberry-pi-deep-learning-object-detection...", "snippet": "Summary. In today\u2019s blog post we examined using the Raspberry Pi for object detection using deep learning, OpenCV, and Python. As our results demonstrated we were able to get up to 0.9 frames per second, which is not fast enough to constitute real-time detection.That said, given the limited processing power of the Pi, 0.9 frames per second is still reasonable for some applications.", "dateLastCrawled": "2022-01-31T05:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Hands-On Transfer Learning with Python: Implement advanced deep ...", "url": "https://dokumen.pub/hands-on-transfer-learning-with-python-implement-advanced-deep-learning-and-neural-network-models-using-tensorflow-and-keras-1788831306-9781788831307.html", "isFamilyFriendly": true, "displayUrl": "https://<b>dokumen.pub</b>/hands-on-transfer-learning-with-python-implement-advanced-deep...", "snippet": "Here we leverage transfer learning using some innovation of applying the power of <b>pre-trained</b> deep learning models from the computer vision domain into a totally different domain of audio identification. Chapter 9, DeepDream, focuses on a gentle introduction to the domain of generative deep learning, which is one of the core ideas at the forefront of true artificial intelligence. We will be focusing on how convnets (CNNs) think or dream and visualize patterns in images by leveraging transfer ...", "dateLastCrawled": "2021-12-15T01:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Multi-object tracking with dlib</b> - PyImageSearch", "url": "https://www.pyimagesearch.com/2018/10/29/multi-object-tracking-with-dlib/", "isFamilyFriendly": true, "displayUrl": "https://www.pyimagesearch.com/2018/10/29/<b>multi-object-tracking-with-dlib</b>", "snippet": "The MobileNet SSD <b>pre-trained</b> Caffe <b>model</b> supports 20 classes and 1 background class. The CLASSES are defined on Lines 25-28 in list form. Note: Do not modify this list or the ordering of class objects if you\u2019re using the Caffe <b>model</b> provided in the \u201cDownloads\u201d. Similarly, if you happen to be loading a different <b>model</b>, you\u2019ll need to ...", "dateLastCrawled": "2022-02-02T14:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "(PDF) Deep <b>Learning for NLP and Speech Recognition</b> | William Jacome ...", "url": "https://www.academia.edu/43190210/Deep_Learning_for_NLP_and_Speech_Recognition", "isFamilyFriendly": true, "displayUrl": "https://www.academia.edu/43190210/Deep_<b>Learning_for_NLP_and_Speech_Recognition</b>", "snippet": "Academia.edu is a platform for academics to share research papers.", "dateLastCrawled": "2022-02-02T18:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Word2vec skip gram</b>, there\u2019s a little extra memory needed for storing ...", "url": "https://war-good.com/tensorflow-word2vec-tutorial-from-scratch-jk59249sn9n", "isFamilyFriendly": true, "displayUrl": "https://war-good.com/tensorflow-word2vec-tutorial-from-scratch-jk59249sn9n", "snippet": "Advanced users <b>can</b> load a <b>model</b> and continue <b>training</b> it with more sentences and new vocabulary words:First, they lose all information about word order: \u201cJohn likes Mary\u201d and \u201cMary likes John\u201d correspond to identical vectors. There is a solution: bag of n-grams models consider word phrases of length n to represent documents as fixed-length vectors to capture local word order but suffer from data sparsity and high dimensionality. Skip-gram learns word embeddings by predicting the ...", "dateLastCrawled": "2021-12-25T12:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "How to automatically categories words using NLP - Quora", "url": "https://www.quora.com/How-do-I-automatically-categories-words-using-NLP", "isFamilyFriendly": true, "displayUrl": "https://www.quora.com/How-do-I-automatically-categories-words-using-NLP", "snippet": "Answer: [I suppose you have a whole dataset of texts, not just a list of words without context] A first approach: Bags of Words : Here, you compute the relative frequencies of each word in a text, and then affect a weight to each word. Hence, a text is transformed into a \u201cBag of Words\u201d, each ha...", "dateLastCrawled": "2022-01-19T21:07:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "(PDF) <b>Pre-trained</b> D-CNN <b>models for detecting complex events</b> in ...", "url": "https://www.researchgate.net/publication/303393775_Pre-trained_D-CNN_models_for_detecting_complex_events_in_unconstrained_videos", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/303393775_<b>Pre-trained</b>_D-CNN_<b>models</b>_for...", "snippet": "eling high-level ev ents, i. e., <b>pre-trained</b> CNNs that differ in architectures, <b>training</b> data, and number of outputs. For each CNN, we use 1-fps from all <b>training</b> exemplar to train one-vs-rest ...", "dateLastCrawled": "2022-01-03T17:25:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Vision-based Bicycle Detection and Tracking using</b> a Deformable Part ...", "url": "https://www.researchgate.net/publication/224190608_Vision-based_Bicycle_Detection_and_Tracking_using_a_Deformable_Part_Model_and_an_EKF_Algorithm", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/224190608_<b>Vision-based_Bicycle_Detection_and</b>...", "snippet": "The <b>pre-trained</b> Faster R-CNN <b>model</b> achieves an F1 score of 68% outperforming the hybrid <b>model</b>, which achieves 58 %. Based in the good results obtained by a two stage detector as Faster R-CNN, we ...", "dateLastCrawled": "2021-12-17T03:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Cover Page", "url": "https://scholarlypublications.universiteitleiden.nl/access/item%3A2972733/view", "isFamilyFriendly": true, "displayUrl": "https://scholarlypublications.universiteitleiden.nl/access/item:2972733/view", "snippet": "red <b>bicycle</b> that as <b>training</b> <b>wheels</b> . a little girl standing next to a red bike near leaves . Figure 7.1: Example of joint multi-modal matching and classi cation. Given one image and its descriptive sentences, they are rst co-embedded into a latent space for matching (in red and blue). Then, the visual and textual embedding features are integrated to be a multi-modal representation for classi cation. In the input sentences, the words related to the ground-truth object labels are in green ...", "dateLastCrawled": "2022-01-13T04:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Deep Learning \u2013 Science4Performance</b>", "url": "https://science4performance.com/tag/deep-learning/", "isFamilyFriendly": true, "displayUrl": "https://<b>science4performance</b>.com/tag/deep-learning", "snippet": "Taking a <b>pre-trained</b> Resnet50 <b>model</b>, I performed some initial fine-tuning, on images rescaled to 224\u00d7224. I settled on an optimal learning rate of 1e-3 for the final layer, while allowing some <b>training</b> of lower layers at much lower rates. With a view to improving generalisation, I opted to augment the <b>training</b> set with random changes, such as small shifts in four directions, zooming in up to 10%, adjusting lighting and left-right flips. After initial <b>training</b>, accuracy was 52.6% on the ...", "dateLastCrawled": "2021-12-28T20:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "High-precision <b>bicycle</b> detection on single side-view image based on the ...", "url": "https://www.sciencedirect.com/science/article/pii/S0031320316303272", "isFamilyFriendly": true, "displayUrl": "https://www.sciencedirect.com/science/article/pii/S0031320316303272", "snippet": "The geometric constraint on the proposed <b>bicycle</b> <b>model</b> is discovered. ... of its tires is smaller than a threshold. For the side-view images, the average illumination inside the detected <b>wheels</b> was <b>compared</b> to that of the background. If the average illumination was similar, the object was a <b>bicycle</b>. In their work, there were two SVM classifiers for the <b>training</b> of the thresholds for the view and object classifications individually. To reduce the computation cost, Nilsson et al. analyzed the ...", "dateLastCrawled": "2022-01-15T04:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Abstract", "url": "https://cims.nyu.edu/~brenden/papers/ZhouLake2021CogSci.pdf", "isFamilyFriendly": true, "displayUrl": "https://cims.nyu.edu/~brenden/papers/ZhouLake2021CogSci.pdf", "snippet": "1B). A concept like <b>bicycle</b> stipulates a \ufb01xed con\ufb01guration of parts and relations (e.g. bikes have handlebars, a seat, and two <b>wheels</b> in a consistent con\ufb01guration), whereas a concept like vehicle allows category members to have freer combinations of parts and relations (varying numbers of <b>wheels</b>, motors, etc. are acceptable). A concept ...", "dateLastCrawled": "2022-01-26T17:03:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "Efficient <b>Incremental Learning</b> for Mobile Object Detection - DeepAI", "url": "https://deepai.org/publication/efficient-incremental-learning-for-mobile-object-detection", "isFamilyFriendly": true, "displayUrl": "https://deepai.org/publication/efficient-<b>incremental-learning</b>-for-mobile-object-detection", "snippet": "For the mobile-cloud implementation, the dataset construction and <b>model</b> <b>training</b> components run on a remote cloud-based GPU server \u2014 once the <b>training</b> is completed, the new <b>model</b> is downloaded to the mobile devices for future inferences. The mobile-only implementation is a fully on-device system without relying on the cloud computing resources. We have evaluated and <b>compared</b> both implementations in our evaluation section. 4 <b>Incremental learning</b> for mobile object detection Figure 2: A ...", "dateLastCrawled": "2022-01-18T05:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>GitHub</b> - <b>TUMFTM/NeuralNetwork_for_VehicleDynamicsModeling</b>", "url": "https://github.com/TUMFTM/NeuralNetwork_for_VehicleDynamicsModeling", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/TUMFTM/<b>NeuralNetwork_for_VehicleDynamicsModeling</b>", "snippet": "Copy new <b>training</b> data into /inputs/trainingdata/ with the above mentioned naming. Run main_NN_Vehicle_dynamics.py. The results will be saved in the \\outputs folder. Run a test against real vehicle data. The test mode <b>can</b> be run independently of the <b>model</b> <b>training</b>. Therefore, an already trained <b>model</b> has to be provided in /inputs/trainedmodels ...", "dateLastCrawled": "2022-01-08T14:01:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Science4Performance \u2013 Page 5", "url": "https://science4performance.com/page/5/", "isFamilyFriendly": true, "displayUrl": "https://science4performance.com/page/5", "snippet": "Taking a <b>pre-trained</b> Resnet50 <b>model</b>, I performed some initial fine-tuning, on images rescaled to 224\u00d7224. I settled on an optimal learning rate of 1e-3 for the final layer, while allowing some <b>training</b> of lower layers at much lower rates. With a view to improving generalisation, I opted to augment the <b>training</b> set with random changes, such as small shifts in four directions, zooming in up to 10%, adjusting lighting and left-right flips. After initial <b>training</b>, accuracy was 52.6% on the ...", "dateLastCrawled": "2022-01-04T21:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "Python", "url": "http://www.aritrasen.com/tag/python/", "isFamilyFriendly": true, "displayUrl": "www.aritrasen.com/tag/python", "snippet": "Update the weights of the <b>pre-trained</b> BERT <b>model</b> along with the classification layer. Update only the weights of the classification layer and not the <b>pre-trained</b> BERT <b>model</b>. This process becomes as using the <b>pre-trained</b> BERT <b>model</b> as a feature extractor. Also in the last post , we did hands-on coding part on the first process where we have updated the weights of the <b>pretrained</b> BERT <b>model</b> along with the classification layer. In this post we will talk about how to only update the weights of ...", "dateLastCrawled": "2022-01-30T00:09:00.0000000Z", "language": "en", "isNavigational": false}]], "gen_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "<b>Pre-trained</b> Models - Value <b>Machine</b> <b>Learning</b> and Deep <b>Learning</b> Technology", "url": "https://valueml.com/transfer-learning-approach-pre-trained-models-classifying-imagenet-classes-with-resnet50-in-python/", "isFamilyFriendly": true, "displayUrl": "https://valueml.com/transfer-<b>learning</b>-<b>approach-pre-trained-models-classifying</b>-imagenet...", "snippet": "Transfer <b>Learning</b> enables us to use the <b>pre-trained</b> models from other people by making small relevant changes. Basically, Transfer <b>Learning</b> (TL) is a <b>Machine</b> <b>Learning</b> technique that trains a new <b>model</b> for a particular problem based on the knowledge gained by solving some other problem. For example, the knowledge gained while <b>learning</b> to recognize trucks could be applied to recognize cars.", "dateLastCrawled": "2022-01-21T09:23:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Finding the Word <b>Analogy</b> from given words using Word2Vec embeddings ...", "url": "https://www.geeksforgeeks.org/finding-the-word-analogy-from-given-words-using-word2vec-embeddings/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>geeksforgeeks</b>.org/finding-the-word-<b>analogy</b>-from-given-words-using-word2vec...", "snippet": "In the word <b>analogy</b> task, we complete the sentence ... What if we can use a <b>Machine</b> <b>Learning</b> algorithm to automate this task of finding the word <b>analogy</b>. In this tutorial, we will be using Word2Vec <b>model</b> and a <b>pre-trained</b> <b>model</b> named \u2018GoogleNews-vectors-negative300.bin\u2018 which is trained on over 50 Billion words by Google. Each word inside the <b>pre-trained</b> dataset is embedded in a 300-dimensional space and the words which are similar in context/meaning are placed closer to each other in ...", "dateLastCrawled": "2022-01-26T14:53:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "SE3M: A <b>Model</b> for Software Effort Estimation Using <b>Pre-trained</b> ...", "url": "https://deepai.org/publication/se3m-a-model-for-software-effort-estimation-using-pre-trained-embedding-models", "isFamilyFriendly": true, "displayUrl": "https://deepai.org/publication/se3m-a-<b>model</b>-for-software-effort-estimation-using-pre...", "snippet": "Idri and Abran (Idri et al., 2016b) also classify a technique by <b>analogy</b> as a <b>machine</b> <b>learning</b> technique. These authors further point out that <b>machine</b> <b>learning</b> models have also gained significant attention for effort estimation purposes, as they can <b>model</b> the complex relationship between effort and software attributes (cost factors), especially when this relationship is not linear, and it does not appear to have any predetermined form. Analog-based reasoning approaches have proven to be ...", "dateLastCrawled": "2021-12-25T16:39:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Word2Vec in Gensim Explained for Creating Word Embedding Models ...", "url": "https://machinelearningknowledge.ai/word2vec-in-gensim-explained-for-creating-word-embedding-models-pretrained-and-custom/", "isFamilyFriendly": true, "displayUrl": "https://<b>machinelearning</b>knowledge.ai/word2vec-in-gensim-explained-for-creating-word...", "snippet": "<b>Machine</b> <b>learning</b> and ... This is another way putting that word2vec can draw the <b>analogy</b> that if Man is to Woman then Kind is to Queen! The publicly released <b>model</b> of word2vec by Google consists of 300 features and the <b>model</b> is trained in the Google news dataset. The vocabulary size of the <b>model</b> is around 1.6 billion words. However, this might have taken a huge time for the <b>model</b> to be trained on but they have applied a method of simple subsampling approach to optimize the time. Word2Vec ...", "dateLastCrawled": "2022-02-02T15:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Should I Learn Machine Learning</b>? | GenUI", "url": "https://www.genui.com/resources/ml-for-developers", "isFamilyFriendly": true, "displayUrl": "https://www.genui.com/resources/ml-for-developers", "snippet": "But it will almost always be best to start with a <b>pre-trained</b> <b>model</b>, from a more general dataset, and then fine-tune it to fit your specific domain. For example, most image recognition models are based on <b>pre-trained</b> models from ImageNet, a dataset of more than 14 million, hand-labeled images divided into over 20,000 classes (like \u201cbicycle\u201d, \u201cstrawberry\u201d, \u201csky\u201d).", "dateLastCrawled": "2022-01-30T18:48:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "Transfer <b>Learning</b>: The Highest Leverage Deep <b>Learning</b> Skill You Can Learn", "url": "https://www.the-analytics.club/transfer-learning", "isFamilyFriendly": true, "displayUrl": "https://www.the-analytics.club/transfer-<b>learning</b>", "snippet": "Transfer <b>learning</b> is a <b>machine</b> <b>learning</b> technique in which a <b>model</b> trained on a specific task is reused as part of the training process for another, different task. Here is a simple <b>analogy</b> to help you understand how transfer <b>learning</b> works: imagine that one person has learned everything there is to know about dogs. In contrast, another person has learned everything about cats. If both people are asked, \u201cWhat\u2019s an animal with four legs, a tail, and barks?\u201d The person who knows all ...", "dateLastCrawled": "2022-01-29T09:03:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "Using Deep <b>Learning</b> for Image Analogies | by Tomer Amit | Towards Data ...", "url": "https://towardsdatascience.com/using-deep-learning-for-image-analogies-aa2e7d7af337", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/using-deep-<b>learning</b>-for-image-analogies-aa2e7d7af337", "snippet": "I will use the <b>pre-trained</b> VGG16 image classification <b>model</b>. The <b>model</b> consists of CNN layers stacked one after another, connected by max pooling layers. The input of the network is a 244\u00d7244\u00d73 image (i.e image width and length are 244 pixels, and 3 channels), and after applying all the convolutional layers, we get a 7\u00d77\u00d7512 array. (diagram taken from deeplearning.ai course by Andrew Ng, \u201cConvolutional Neural Networks\u201d) At the end of the network we have an additional flattening layer ...", "dateLastCrawled": "2022-01-19T03:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Classifying and completing word analogies by <b>machine</b> <b>learning</b> | Request PDF", "url": "https://www.researchgate.net/publication/349152012_Classifying_and_completing_word_analogies_by_machine_learning", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/349152012_Classifying_and_completing_word...", "snippet": "In this paper, we depart from this assumption to adopt a <b>machine</b> <b>learning</b> approach, i.e., <b>learning</b> a substitute of the parallelogram <b>model</b>. To achieve our goal, we first review the formal modeling ...", "dateLastCrawled": "2021-11-11T17:41:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Transfer <b>Learning to solve a Classification Problem</b> :: InBlog", "url": "https://inblog.in/Transfer-Learning-to-solve-a-Classification-Problem-9bihoVsKsV", "isFamilyFriendly": true, "displayUrl": "https://inblog.in/Transfer-<b>Learning-to-solve-a-Classification-Problem</b>-9bihoVsKsV", "snippet": "Why we need <b>pre-Trained</b> <b>Model</b>? Transfer <b>Learning</b> via VGG16; Building a <b>Model</b>; Code Walk Through; Result and Evaluation; Introduction: Neural networks are very different type of the <b>model</b> as compared to the Supervised <b>Learning</b>,. The most important things about deep <b>learning</b> <b>model</b> is it is very hard to train. It requires lots of the resources that a small company can\u2019t bear. RAM on a <b>machine</b> is cheap and is available in plenty. You need hundreds of GB\u2019s of RAM to run a super complex ...", "dateLastCrawled": "2021-11-25T02:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>machine</b> <b>learning</b> - <b>Merging pretrained models in Word2Vec</b>? - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/30482669/merging-pretrained-models-in-word2vec", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/30482669", "snippet": "How do i merge these two huge <b>pre-trained</b> vectors? or how do i train a new <b>model</b> and update vectors on top of another? I see that C based word2vec does not support batch training. I am looking to compute word <b>analogy</b> from these two models. I believe that vectors learned from these two sources will produce pretty good results. <b>machine</b>-<b>learning</b> word2vec. Share. Follow edited May 28 &#39;15 at 14:04. pbu. asked May 27 &#39;15 at 12:37. pbu pbu. 2,706 7 7 gold badges 37 37 silver badges 62 62 bronze ...", "dateLastCrawled": "2022-01-22T22:47:00.0000000Z", "language": "en", "isNavigational": false}], [], [], [], [], []], "all_bing_queries": ["+(pre-trained model)  is like +(training wheels on a bicycle)", "+(pre-trained model) is similar to +(training wheels on a bicycle)", "+(pre-trained model) can be thought of as +(training wheels on a bicycle)", "+(pre-trained model) can be compared to +(training wheels on a bicycle)", "machine learning +(pre-trained model AND analogy)", "machine learning +(\"pre-trained model is like\")", "machine learning +(\"pre-trained model is similar\")", "machine learning +(\"just as pre-trained model\")", "machine learning +(\"pre-trained model can be thought of as\")", "machine learning +(\"pre-trained model can be compared to\")"]}