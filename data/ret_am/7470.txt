{"src_spec_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "algorithm - Efficient ways to sort <b>a deck</b> of actual <b>cards</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/3324715/efficient-ways-to-sort-a-deck-of-actual-cards", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/3324715", "snippet": "Insertion sort seems fine because inserting a card does not require a shift of the subsequent <b>cards</b> <b>like</b> in a computer memory. However, scanning through a large <b>deck</b> is time consuming. With a large <b>deck</b>, there are even chances that you might drop the <b>deck</b> and have to restart the sort. I could draw the <b>cards</b> on a large table and directly place each card to its correct location but this takes quite a lot of space and is not very convenient. My usual approach is to do a first scan through the ...", "dateLastCrawled": "2022-01-20T23:33:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Lecture 9: Linear <b>Sorting</b> Steven Skiena Department of Computer Science ...", "url": "https://www3.cs.stonybrook.edu/~skiena/373/current-lectures/lecture9.pdf", "isFamilyFriendly": true, "displayUrl": "https://www3.cs.stonybrook.edu/~skiena/373/current-lectures/lecture9.pdf", "snippet": "All the <b>sorting</b> algorithms we have seen assume binary comparisons as the basic primative, questions of the form \u201cis x before y?\u201d. But how would you sort <b>a deck</b> of playing <b>cards</b>? Most likely you would set up 13 piles and put all <b>cards</b> with the same number in one pile. With only a constant number <b>of cards</b> left in each pile, you can use insertion sort to order by suite and concatenate everything together. If we could \ufb01nd the correct pile for each card in constant time, and each pile gets ...", "dateLastCrawled": "2022-01-29T03:26:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "ALEX: An Updatable Adaptive Learned Index", "url": "http://db.lcs.mit.edu/6.830/lectures/lec11-learned-index.pptx", "isFamilyFriendly": true, "displayUrl": "db.lcs.mit.edu/6.830/lectures/lec11-learned-index.pptx", "snippet": "Just <b>like</b> <b>sorting</b> <b>a deck</b> <b>of cards</b>. Maintain a sorted <b>deck</b> <b>of cards</b> seen until now. For a new card, find the position in the sorted <b>deck</b>. Place the card in the position by shifting the following <b>cards</b>. Repeat Until no new incoming card. As an example of comparison based <b>sorting</b> algorithm, we will quickly look at insertion sort. Insertion sort is ...", "dateLastCrawled": "2021-12-04T06:35:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Lecture 10: Linear <b>Sorting</b> (1997) Steven Skiena Department of Computer ...", "url": "https://www3.cs.stonybrook.edu/~algorith/video-lectures/1997/lecture10.pdf", "isFamilyFriendly": true, "displayUrl": "https://www3.cs.stonybrook.edu/~algorith/video-lectures/1997/lecture10.pdf", "snippet": "Withonly aconstant number <b>of cards</b> leftin each pile, you can use insertion sort to order by suite and concatenate everything. together. If we could \ufb01nd the correct pile for each card in constant time, and each pile gets O(1) <b>cards</b>, this algorithm takes O(n) time. Bucketsort Suppose we are <b>sorting</b> n numbers from 1 to m, where we know the numbers are approximately uniformly distributed. We can set up n buckets, each responsible for an interval of m/n numbers from 1 to m 1 m/n m/n+1 2m/n 2m ...", "dateLastCrawled": "2021-08-21T05:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "THINKING SPREADSHEET", "url": "https://joelgrus.github.io/thinking-spreadsheet/", "isFamilyFriendly": true, "displayUrl": "https://joelgrus.github.io/thinking-spreadsheet", "snippet": "Example: <b>A Deck</b> <b>of Cards</b>. Finding Your MATCH() Exact MATCH() Encyclopedia MATCH() Technique: <b>Sorting</b> Numbers Without <b>Sorting</b>, Part 2. Technique: <b>Sorting</b> Strings Without <b>Sorting</b>. Technique: Scenario Analysis. VLOOKUP() and Friends. HLOOKUP() Example: Tax Brackets, Revisited. Technique: The Join . Technique: Multi-Column Lookups. Frivolous Example: The Prime Number Sieve. Indirection. ROW() and COLUMN() Finding an ADDRESS() OFFSET() References. Getting a Cell. Getting a Range of Cells ...", "dateLastCrawled": "2022-02-03T18:46:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "15 Top Techniques and Best Practices for eCommerce Inventory Management", "url": "https://www.skuvault.com/blog/ecommerce-inventory-management-techniques-and-best-practices/", "isFamilyFriendly": true, "displayUrl": "https://www.skuvault.com/blog/<b>ecommerce-inventory-management-techniques-and-best-practices</b>", "snippet": "If that sounds <b>like</b> you, ... <b>Bucketing</b> your inventory this way allows organizations that sell diverse product lines to create bespoke restocking strategies for each product category. If you\u2019re a music manufacturer that sells $2,000 custom acoustic guitars and $2 packs of guitar picks on the same website or channel, it\u2019d be foolish to impose the same fulfillment strategy for both products. Here\u2019s the step-by-step process for performing an ABC analysis: Collect data on the specific ...", "dateLastCrawled": "2022-02-02T21:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>sorting</b> algorithms for people - efficiency manual | Ask <b>MetaFilter</b>", "url": "https://ask.metafilter.com/113275/sorting-algorithms-for-people", "isFamilyFriendly": true, "displayUrl": "https://<b>ask.metafilter.com</b>/113275/<b>sorting</b>-algorithms-for-people", "snippet": "When I&#39;m <b>sorting</b> <b>a deck</b> <b>of cards</b>, I ribbon-spread them out on the table and then slide <b>cards</b> towards me into the four suit buckets (which are later sorted using a combination of selection &amp; bubble sort depending on the initial conditions). I pull out the buckets one at a time in red-black-red-black order so that after I&#39;ve done two buckets, the remaining unbucketed <b>cards</b> consist of reds and blacks (instead of two red suits or two black suits). Humans are really good at quickly searching ...", "dateLastCrawled": "2021-12-11T21:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Skiena algorithm 2007 lecture09 linear sorting</b>", "url": "https://www.slideshare.net/zukun/skiena-algorithm-2007-lecture09-linear-sorting", "isFamilyFriendly": true, "displayUrl": "https://www.slideshare.net/zukun/<b>skiena-algorithm-2007-lecture09-linear-sorting</b>", "snippet": "Non-Comparison-Based <b>Sorting</b> All the <b>sorting</b> algorithms we have seen assume binary comparisons as the basic primative, questions of the form \u201cis x before y?\u201d. But how would you sort <b>a deck</b> of playing <b>cards</b>? Most likely you would set up 13 piles and put all <b>cards</b> with the same number in one pile. With only a constant number <b>of cards</b> left in each pile, you can use insertion sort to order by suite and concatenate everything together. If we could \ufb01nd the correct pile for each card in ...", "dateLastCrawled": "2022-01-12T23:33:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Buckets in Hearthstone&#39;s Arena Being Removed in Future Patch - Out <b>of Cards</b>", "url": "https://outof.cards/hearthstone/280-buckets-in-hearthstones-arena-being-removed-in-future-patch", "isFamilyFriendly": true, "displayUrl": "https://outof.<b>cards</b>/hearthstone/280-buckets-in-hearthstones-arena-being-removed-in...", "snippet": "IF they would make the rewards smart <b>like</b> pack openings, so that you ONLY get <b>cards</b> you dont have already, that would improve the Arena rewards experience quite a bit. If you have ALL of the current rarity, it should either go to gold for that rarity or up to the next rarity to check for gaps in your collection. If you have the whole set in non-gold, it should automatically level up to a gold card you dont have in the set, of at least the lowest rarity where you have a gap. Although ...", "dateLastCrawled": "2022-01-15T06:46:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Customer Segmentation</b>: A Step by Step Guide for Growth", "url": "https://openviewpartners.com/blog/customer-segmentation/", "isFamilyFriendly": true, "displayUrl": "https://openviewpartners.com/blog/<b>customer-segmentation</b>", "snippet": "<b>Like</b> almost anything in business, the information you cull from this process has a shelf life, largely because any number of factors both within your company and your target market segment\u2014can impact which companies constitute your \u201cbest\u201d customers. As a result, it is important to implement the results of your best current <b>customer segmentation</b> research as quickly as possible, and measure their impact over time. As things change, it is a good idea to reconsider your best current ...", "dateLastCrawled": "2022-02-02T14:13:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "algorithm - Efficient ways to sort <b>a deck</b> of actual <b>cards</b> - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/3324715/efficient-ways-to-sort-a-deck-of-actual-cards", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/3324715", "snippet": "You go through the <b>deck</b> and put all <b>cards</b> smaller than 100 on a left pile, all bigger on a right pile. Then you recurse through the piles, depth first (so you do not have too many piles at once). At some threshold (perhaps about 5 <b>cards</b>), you simply sort &quot;in hand&quot; (<b>similar</b> to insertion sort, perhaps). Finally, you stack the piles together. You could also do a merge sort: Divide the pile into two, recurse depth first, until you arrive at two piles of 5 <b>cards</b> each. Sort these two piles &quot;in ...", "dateLastCrawled": "2022-01-20T23:33:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "15 Top Techniques and Best Practices for eCommerce Inventory Management", "url": "https://www.skuvault.com/blog/ecommerce-inventory-management-techniques-and-best-practices/", "isFamilyFriendly": true, "displayUrl": "https://www.skuvault.com/blog/<b>ecommerce-inventory-management-techniques-and-best-practices</b>", "snippet": "<b>Bucketing</b> your inventory this way allows organizations that sell diverse product lines to create bespoke restocking strategies for each product category. If you\u2019re a music manufacturer that sells $2,000 custom acoustic guitars and $2 packs of guitar picks on the same website or channel, it\u2019d be foolish to impose the same fulfillment strategy for both products. Here\u2019s the step-by-step process for performing an ABC analysis: Collect data on the specific product under analysis \u2014 most ...", "dateLastCrawled": "2022-02-02T21:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Sorting</b> - AlgoVis.io", "url": "https://tobinatore.github.io/algovis/sorting.html", "isFamilyFriendly": true, "displayUrl": "https://tobinatore.github.io/algovis/<b>sorting</b>.html", "snippet": "A <b>sorting</b> algorithm is an algorithm that puts elements of a list in a certain order (thus <b>sorting</b> the list). The most frequently used orders are numerical order for lists of numbers and lexicographical order for lists of strings. To put it more formally, the output generally has to fulfill two conditions: The output is in nondecreasing order.", "dateLastCrawled": "2022-01-25T22:27:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>THINKING SPREADSHEET</b>", "url": "https://joelgrus.github.io/thinking-spreadsheet/ts.html", "isFamilyFriendly": true, "displayUrl": "https://joelgrus.github.io/<b>thinking-spreadsheet</b>/ts.html", "snippet": "Example: <b>A Deck</b> <b>of Cards</b>. Finding Your MATCH() Exact MATCH() Encyclopedia MATCH() Technique: <b>Sorting</b> Numbers Without <b>Sorting</b>, Part 2. Technique: <b>Sorting</b> Strings Without <b>Sorting</b> . Technique: Scenario Analysis. VLOOKUP() and Friends. HLOOKUP() Example: Tax Brackets, Revisited. Technique: The Join. Technique: Multi-Column Lookups. Frivolous Example: The Prime Number Sieve. Indirection. ROW() and COLUMN() Finding an ADDRESS() OFFSET() References. Getting a Cell. Getting a Range of Cells ...", "dateLastCrawled": "2022-01-27T09:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Buckets in Hearthstone&#39;s Arena Being Removed in Future Patch - Out <b>of Cards</b>", "url": "https://outof.cards/hearthstone/280-buckets-in-hearthstones-arena-being-removed-in-future-patch", "isFamilyFriendly": true, "displayUrl": "https://outof.<b>cards</b>/hearthstone/280-buckets-in-hearthstones-arena-being-removed-in...", "snippet": "For 15.4, we&#39;re going to try doing an arena patch without buckets and have all <b>cards</b> be part of one giant pool. This <b>is similar</b> to how the early days of arena worked. Theoretically, buckets made individual arena decisions a little more interesting and put more weight behind how a card works in the <b>deck</b> you are drafting vs its power level in a ...", "dateLastCrawled": "2022-01-15T06:46:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Data Structures and Algorithms</b> Diagram | Quizlet", "url": "https://quizlet.com/457955670/data-structures-and-algorithms-diagram/", "isFamilyFriendly": true, "displayUrl": "https://<b>quizlet.com</b>/457955670/<b>data-structures-and-algorithms</b>-diagram", "snippet": "Bucket sort is a numerical <b>sorting</b> algorithm that distributes numbers into buckets, sorts each bucket with an additional <b>sorting</b> algorithm, and then concatenates buckets together to build the sorted result. A bucket is a container for numerical values in a specific range. Ex: All numbers in the range 0 to 50 may be stored in a bucket representing this range. Bucket sort is designed for arrays with non-negative numbers.", "dateLastCrawled": "2020-11-01T21:31:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>Customer Segmentation</b>: A Step by Step Guide for Growth", "url": "https://openviewpartners.com/blog/customer-segmentation/", "isFamilyFriendly": true, "displayUrl": "https://openviewpartners.com/blog/<b>customer-segmentation</b>", "snippet": "This <b>sorting</b> process should lead to a clear segmentation of the customer base, where one segment is disproportionately represented by \u201cgood\u201d customers. By following the steps described above, you will have validated your segmentation hypotheses and provisionally reviewed the distinct segments formed by one or more of your hypotheses.", "dateLastCrawled": "2022-02-02T14:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Question Types</b> - Qualtrics", "url": "https://www.qualtrics.com/support/survey-platform/survey-module/editing-questions/question-types-guide/question-types-overview/", "isFamilyFriendly": true, "displayUrl": "https://www.qualtrics.com/support/survey-platform/survey-module/editing-questions/...", "snippet": "World-class advisory, implementation, and support services from industry experts and the XM Institute. Whether you want to increase customer loyalty or boost brand perception, we\u2019re here for your success with everything from program design, to implementation, and fully managed services.", "dateLastCrawled": "2022-02-03T01:08:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Salesforce Interview Questions Flashcards | Chegg.com", "url": "https://www.chegg.com/flashcards/salesforce-interview-questions-ccc9854d-aa6f-40b2-9e50-cc81d986e7aa/deck", "isFamilyFriendly": true, "displayUrl": "https://www.chegg.com/.../<b>deck</b>", "snippet": "<b>Similar</b> to a spreadsheet, they consist simply of an ordered set of fields in columns, with each matching record listed in a row. Tabular reports are best for creating lists of records or a list with a single grand total. They can&#39;t be used to create groups of data or charts, and can&#39;t be used in dashboards unless rows are limited. Examples include contact mailing lists and activity reports.", "dateLastCrawled": "2021-12-08T03:09:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>python</b> - Split list into smaller lists (split in half) - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/752308/split-list-into-smaller-lists-split-in-half", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/752308", "snippet": "While the answers above are more or less correct, you may run into trouble if the size of your array isn&#39;t divisible by 2, as the result of a / 2, a being odd, is a float in <b>python</b> 3.0, and in earlier version if you specify from __future__ import division at the beginning of your script. You are in any case better off going for integer division, i.e. a // 2, in order to get &quot;forward&quot; compatibility of your code.", "dateLastCrawled": "2022-01-27T23:07:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Lecture 9: Linear <b>Sorting</b> Steven Skiena Department of Computer Science ...", "url": "https://www3.cs.stonybrook.edu/~skiena/373/current-lectures/lecture9.pdf", "isFamilyFriendly": true, "displayUrl": "https://www3.cs.stonybrook.edu/~skiena/373/current-lectures/lecture9.pdf", "snippet": "Any comparison-based <b>sorting</b> program <b>can</b> <b>be thought</b> of as de\ufb01ning a decision tree of possible executions. Running the same program twice on the same permutation causes it to do exactly the same thing, but running it on different permutations of the same data causes a different sequence of comparisons to be made on each. (3,2,1) a1 &lt; a2 a2 &lt; a3 a1 &lt; a3 (1,2,3) a1 &lt; a3 a2 &lt; a3 (1,3,2) (2,3,1) (2,1,3) (3,1,2) Claim: the height of this decision tree is the worst-case complexity of <b>sorting</b> ...", "dateLastCrawled": "2022-01-29T03:26:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "Lecture 10: Linear <b>Sorting</b> (1997) Steven Skiena Department of Computer ...", "url": "https://www3.cs.stonybrook.edu/~algorith/video-lectures/1997/lecture10.pdf", "isFamilyFriendly": true, "displayUrl": "https://www3.cs.stonybrook.edu/~algorith/video-lectures/1997/lecture10.pdf", "snippet": "Any comparison-based <b>sorting</b> program <b>can</b> <b>be thought</b> of as de\ufb01ning a decision tree of possible executions. Running the same program twice on the same permutation causes it to do exactly the same thing, but running it on different permutations of the same data causes a different sequence of comparisons to be made on each. a1 &lt; a2 ? a2 &lt; a3 ? a1 &lt; a3 ? (1,2,3) (2,1,3) a2 &lt; a3 ?a1 &lt; a3 ? (1,3,2) (3,1,2) (2,3,1) (3,2,1) T F T T T T F F F F Claim: the height of this decision tree is the worst ...", "dateLastCrawled": "2021-08-21T05:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Skiena algorithm 2007 lecture09 linear sorting</b>", "url": "https://www.slideshare.net/zukun/skiena-algorithm-2007-lecture09-linear-sorting", "isFamilyFriendly": true, "displayUrl": "https://www.slideshare.net/zukun/<b>skiena-algorithm-2007-lecture09-linear-sorting</b>", "snippet": "But how would you sort <b>a deck</b> of playing <b>cards</b>? Most likely you would set up 13 piles and put all <b>cards</b> with the same number in one pile. With only a constant number <b>of cards</b> left in each pile, you <b>can</b> use insertion sort to order by suite and concatenate everything together. If we could \ufb01nd the correct pile for each card in constant time, and each pile gets O(1) <b>cards</b>, this algorithm takes O(n) time. 29. Bucketsort Suppose we are <b>sorting</b> n numbers from 1 to m, where we know the numbers are ...", "dateLastCrawled": "2022-01-12T23:33:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Lecture 6 - Linear Sorting</b> | Algorithms And Data Structures | Applied ...", "url": "https://www.scribd.com/document/129996704/Lecture-6-Linear-Sorting", "isFamilyFriendly": true, "displayUrl": "https://www.scribd.com/document/129996704/<b>Lecture-6-Linear-Sorting</b>", "snippet": "Any comparison-based <b>sorting</b> program <b>can</b> <b>be thought</b> of as de ning a decision tree of possible executions. Running the same program twice on the same permutation causes it to do exactly the same thing, but running it on di erent permutations of the same data causes a di erent sequence of comparisons to be made on each. a1 &lt; a2 ? T F a2 &lt; a3 ? T (1,2,3) T (1,3,2) F a1 &lt; a3 ? F (3,1,2) T (2,1,3) T (2,3,1) a1 &lt; a3 ? F a2 &lt; a3 ? F (3,2,1) <b>Can</b> we sortlg n? in better than n. Claim: the height of ...", "dateLastCrawled": "2021-11-13T10:43:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "15 Top Techniques and Best Practices for eCommerce Inventory Management", "url": "https://www.skuvault.com/blog/ecommerce-inventory-management-techniques-and-best-practices/", "isFamilyFriendly": true, "displayUrl": "https://www.skuvault.com/blog/<b>ecommerce-inventory-management-techniques-and-best-practices</b>", "snippet": "<b>Bucketing</b> your inventory this way allows organizations that sell diverse product lines to create bespoke restocking strategies for each product category. If you\u2019re a music manufacturer that sells $2,000 custom acoustic guitars and $2 packs of guitar picks on the same website or channel, it\u2019d be foolish to impose the same fulfillment strategy for both products. Here\u2019s the step-by-step process for performing an ABC analysis: Collect data on the specific product under analysis \u2014 most ...", "dateLastCrawled": "2022-02-02T21:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Mergesort</b>: why&#39;s it <b>efficient</b>?", "url": "https://groups.google.com/g/comp.sys.mac.programmer.help/c/k-lCZUV18r8", "isFamilyFriendly": true, "displayUrl": "https://groups.google.com/g/comp.sys.mac.programmer.help/c/k-lCZUV18r8", "snippet": "<b>MergeSort</b> <b>can</b> also sort on external data -- I never <b>thought</b> it would happen to me, but I ended up doing this once! I had a really huge file that needed <b>sorting</b>, and I had to cut it into lots of little pieces, and then merge them back together. Used lots of tmpfile() calls. Really kind of a cool concept, <b>sorting</b> external data. Chris--", "dateLastCrawled": "2022-01-21T23:58:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "THINKING SPREADSHEET", "url": "https://joelgrus.github.io/thinking-spreadsheet/", "isFamilyFriendly": true, "displayUrl": "https://joelgrus.github.io/thinking-spreadsheet", "snippet": "For years I&#39;ve <b>thought</b> about web-ifying (and free-ifying) it, since there&#39;s a lot of useful (and entertaining) information in it, but I never got around to it until now. It&#39;s mostly based on Excel 2007, but (let&#39;s face it) Excel doesn&#39;t change all that much anymore, and my estimate is that approximately 98% of what I&#39;ve written still applies to the latest version. I&#39;ve strikethroughed a few parts that don&#39;t. I spent a small amount of time trying to make the CSS attractive, but I&#39;m not a web ...", "dateLastCrawled": "2022-02-03T18:46:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Data Structures And Algorithm Analysis</b> \u2013 versedwriters", "url": "https://versedwriters.com/data-structures-and-algorithm-analysis-2/", "isFamilyFriendly": true, "displayUrl": "https://versedwriters.com/<b>data-structures-and-algorithm-analysis</b>-2", "snippet": "The time taken by the INSERTION-SORT procedure depends on the input: <b>sorting</b> a thousand numbers takes longer than <b>sorting</b> three numbers. Moreover, INSERTION- SORT <b>can</b> take different amounts of time to sort two input sequences of the same size depending on how nearly sorted they already are. In general, the time taken by an algorithm grows with the size of the input, so it is traditional to describe the running time of a program as a function of the size of its input. To do so, we need to ...", "dateLastCrawled": "2022-01-29T22:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>python</b> - Split list into smaller lists (split in half) - <b>Stack Overflow</b>", "url": "https://stackoverflow.com/questions/752308/split-list-into-smaller-lists-split-in-half", "isFamilyFriendly": true, "displayUrl": "https://<b>stackoverflow.com</b>/questions/752308", "snippet": "10 years later.. I <b>thought</b> - why not add another: arr = &#39;Some random string&#39; * 10; n = 4 print([arr[e:e+n] for e in range(0,len(arr),n)]) Share. Improve this answer. Follow answered Feb 26 &#39;19 at 19:22. RoyM RoyM. 1,008 1 1 gold badge 8 8 silver badges 25 25 bronze badges. Add a comment | 2 While the answers above are more or less correct, you may run into trouble if the size of your array isn&#39;t divisible by 2, as the result of a / 2, a being odd, is a float in <b>python</b> 3.0, and in earlier ...", "dateLastCrawled": "2022-01-27T23:07:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>THINKING SPREADSHEET</b>", "url": "https://joelgrus.github.io/thinking-spreadsheet/ts.html", "isFamilyFriendly": true, "displayUrl": "https://joelgrus.github.io/<b>thinking-spreadsheet</b>/ts.html", "snippet": "You <b>can</b> include the single quotes even if there are no spaces in the sheet name, but you don&#39;t have to. Ranges and Arrays. You <b>can</b> also refer to ranges consisting of multiple cells. Usually the cells will form a rectangle, which you specify by giving the top left cell, then a colon, then the bottom right cell. For instance, A1:C1 is a range ...", "dateLastCrawled": "2022-01-27T09:30:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "ALEX: An Updatable Adaptive <b>Learned Index</b>", "url": "http://dsg.csail.mit.edu/6.830/lectures/lec11-learned-index.pptx", "isFamilyFriendly": true, "displayUrl": "dsg.csail.mit.edu/6.830/lectures/lec11-<b>learned-index</b>.pptx", "snippet": "Just like <b>sorting</b> <b>a deck</b> <b>of cards</b>. Maintain a sorted <b>deck</b> <b>of cards</b> seen until now. For a new card, find the position in the sorted <b>deck</b> . Place the card in the position by shifting the following <b>cards</b>. Repeat Until no new incoming card. As an example of comparison based <b>sorting</b> algorithm, we will quickly look at insertion sort. Insertion sort is just like <b>sorting</b> <b>a deck</b> <b>of cards</b>. You maintain a sorted <b>deck</b> <b>of cards</b> of the <b>cards</b> seen unitl now. For each new card, you find the position in the ...", "dateLastCrawled": "2021-11-01T21:29:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "<b>Customer Segmentation</b>: A Step by Step Guide for Growth", "url": "https://openviewpartners.com/blog/customer-segmentation/", "isFamilyFriendly": true, "displayUrl": "https://openviewpartners.com/blog/<b>customer-segmentation</b>", "snippet": "This <b>sorting</b> process should lead to a clear segmentation of the customer base, where one segment is disproportionately represented by \u201cgood\u201d customers. By following the steps described above, you will have validated your segmentation hypotheses and provisionally reviewed the distinct segments formed by one or more of your hypotheses. The second approach, listed below, <b>can</b> be used when you have more resources and time to spend on your analysis, or when there are many customer accounts to ...", "dateLastCrawled": "2022-02-02T14:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "(PDF) <b>Lecture Notes - Algorithms and Data Structures - Part</b> 4 ...", "url": "https://www.researchgate.net/publication/259398088_Lecture_Notes_-_Algorithms_and_Data_Structures_-_Part_4_Searching_and_Sorting", "isFamilyFriendly": true, "displayUrl": "https://www.researchgate.net/publication/259398088_<b>Lecture_Notes_-_Algorithms_and_Data</b>...", "snippet": "Unstable <b>sorting</b> algorithms <b>can</b> be specially implemented to be stable. One way of doing this is to artificially extend the key comparison, so that comparisons between two objects with otherwise ...", "dateLastCrawled": "2022-01-21T00:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Evolving the Hearthstone Meta</b> | DeepAI", "url": "https://deepai.org/publication/evolving-the-hearthstone-meta", "isFamilyFriendly": true, "displayUrl": "https://deepai.org/publication/<b>evolving-the-hearthstone-meta</b>", "snippet": "Tuning over 2000 <b>cards</b> to generate the desired outcome without disrupting the existing environment becomes a laborious challenge. In this paper, we discuss the impacts that changes to existing <b>cards</b> <b>can</b> have on strategy in Hearthstone. By analyzing the win rate on match-ups across different decks, being played by different strategies, we propose to compare their performance before and after changes are made to improve or worsen different <b>cards</b>. Then, using an evolutionary algorithm, we ...", "dateLastCrawled": "2021-12-07T07:23:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Data Structures and Algorithms</b> Diagram | Quizlet", "url": "https://quizlet.com/457955670/data-structures-and-algorithms-diagram/", "isFamilyFriendly": true, "displayUrl": "https://<b>quizlet.com</b>/457955670/<b>data-structures-and-algorithms</b>-diagram", "snippet": "Bucket sort is a numerical <b>sorting</b> algorithm that distributes numbers into buckets, sorts each bucket with an additional <b>sorting</b> algorithm, and then concatenates buckets together to build the sorted result. A bucket is a container for numerical values in a specific range. Ex: All numbers in the range 0 to 50 may be stored in a bucket representing this range. Bucket sort is designed for arrays with non-negative numbers.", "dateLastCrawled": "2020-11-01T21:31:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Mapping Hearthstone Deck Spaces through MAP</b>-Elites with Sliding ...", "url": "https://deepai.org/publication/mapping-hearthstone-deck-spaces-through-map-elites-with-sliding-boundaries", "isFamilyFriendly": true, "displayUrl": "https://deepai.org/publication/<b>mapping-hearthstone-deck-spaces-through-map</b>-elites-with...", "snippet": "<b>Cards</b> <b>can</b> be added to <b>a deck</b> at most twice, except for special legendary <b>cards</b> that <b>can</b> be included only once. ... the boundary lines for the map are recalculated. They are recalculated by <b>sorting</b> the individuals along each feature and finding each individual at the corresponding percentage mark. Maintaining a sampling of the behavior space enables the estimation of the true distribution of the search space. Using binary search, queries for the proper cell <b>can</b> be executed in . O (d log b ...", "dateLastCrawled": "2021-12-04T10:53:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "<b>THINKING SPREADSHEET</b>", "url": "https://joelgrus.github.io/thinking-spreadsheet/ts.html", "isFamilyFriendly": true, "displayUrl": "https://joelgrus.github.io/<b>thinking-spreadsheet</b>/ts.html", "snippet": "A key principle of <b>Thinking Spreadsheet</b> is that spreadsheets should automatically adapt to changes in their data. But when you make changes to sorted data, the result is usually unsorted data.This means that if you have a spreadsheet that relies on data being sorted, you also have to rely that anyone who changes the data immediately re-sorts it.. This doesn&#39;t mean that <b>sorting</b> data is always a bad thing to do.", "dateLastCrawled": "2022-01-27T09:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "<b>Data Structures And Algorithm Analysis</b> \u2013 versedwriters", "url": "https://versedwriters.com/data-structures-and-algorithm-analysis-2/", "isFamilyFriendly": true, "displayUrl": "https://versedwriters.com/<b>data-structures-and-algorithm-analysis</b>-2", "snippet": "Although any two real numbers <b>can</b> <b>be compared</b>, not all functions are asymptot- ically comparable. That is, for two functions f .n/ and g.n/, it may be the case that neither f .n/ D O.g.n// nor f .n/ D .g.n// holds. For example, we cannot compare the functions n and n1Csin n using asymptotic notation, since the value of the exponent in n1Csin n oscillates between 0 and 2, taking on all values in between.", "dateLastCrawled": "2022-01-29T22:20:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>python \u2013 Technical Again</b>", "url": "https://technicalagain.com/tag/python/", "isFamilyFriendly": true, "displayUrl": "https://technicalagain.com/<b>tag/python</b>", "snippet": "Data structure <b>sorting</b>. This was one of the most complex aspects of this game because so much has to be sorted: the game board, each player\u2019s hand, the rounds, and the scoreboard. Additionally, the scoreboard is interwoven into the game interface. If you look at the image up above you see in my hand that the 11 is worth five points and 75 and 95 are each worth two. That was tricky to implement well in the terminal.", "dateLastCrawled": "2021-12-22T18:27:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "Sort Online Radix [PK2V71]", "url": "https://ayurveda.torino.it/Radix_Sort_Online.html", "isFamilyFriendly": true, "displayUrl": "https://ayurveda.torino.it/Radix_Sort_Online.html", "snippet": "The bin <b>sorting</b> approach <b>can</b> be generalized inside a method that is known as radix <b>sorting</b>. JSTOR provides online access to. 8x) <b>compared</b> to state-of-the-art GPU <b>sorting</b>. We then consider two classic radix <b>sorting</b> algorithms\u2014LSD and MSD radix sorts. The procedure of radix sort is explained in Algorithm 12.", "dateLastCrawled": "2021-12-23T13:14:00.0000000Z", "language": "en", "isNavigational": false}]], "gen_res": [[{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "An Introduction to Hashing in the Era of <b>Machine Learning</b> | by Tyler ...", "url": "https://blog.bradfieldcs.com/an-introduction-to-hashing-in-the-era-of-machine-learning-6039394549b0", "isFamilyFriendly": true, "displayUrl": "https://blog.bradfieldcs.com/an-introduction-to-hashing-in-the-era-of-<b>machine-learning</b>...", "snippet": "Our <b>analogy</b> is not a perfect one; unlike the Dewey Decimal numbers, a ... AlphaGo\u2019s <b>machine learning</b> algorithm accepts as its input vector the state of a Go board (for each position, is there a white stone, a black stone, or no stone) and the label represents which player won the game (white or black). Using that information, across hundreds of thousands of games, a <b>machine learning</b> algorithm decided how to evaluate any particular board state. AlphaGo taught itself which moves will provide ...", "dateLastCrawled": "2022-01-19T13:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "The ROCK Algorithm in <b>Machine</b> <b>Learning</b> | by Aman Gupta | Geek Culture ...", "url": "https://medium.com/geekculture/the-rock-algorithm-in-machine-learning-5fa152f34de7", "isFamilyFriendly": true, "displayUrl": "https://medium.com/geekculture/the-rock-algorithm-in-<b>machine</b>-<b>learning</b>-5fa152f34de7", "snippet": "The ROCK algorithm uses the Lp^3 metric or the Jaccard coefficient instead of using the distance measures to find the similarity between the data points. For domains with discrete non-numeric ...", "dateLastCrawled": "2022-01-18T19:27:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "<b>Transfer Learning/Fine-Tuning a</b> Deep <b>Learning</b> Model - <b>Machine</b> <b>Learning</b>", "url": "https://datastronomy.com/eli5-transfer-learning-fine-tuning-a-deep-learning-model/", "isFamilyFriendly": true, "displayUrl": "https://datastronomy.com/<b>eli5-transfer-learning-fine-tuning-a</b>-deep-<b>learning</b>-model", "snippet": "You took a trained brain\u2014or stepping back from our <b>analogy</b>, a neural net\u2014and you adapted it to a specialized problem. Transfer <b>learning</b>, or fine-tuning, is a process whereby you take a deep <b>learning</b> model that has been trained on lots of data (1M+ examples) and continue training it on a smaller dataset to \u201coverfit\u201d it to that particular class of problem. The model becomes inferior at its original task and better at the new specific task, but it also performs much better than a model ...", "dateLastCrawled": "2022-01-19T02:44:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "<b>Combinatorics</b> - GitHub Pages", "url": "https://chrispiech.github.io/probabilityForComputerScientists/en/part1/combinatorics/", "isFamilyFriendly": true, "displayUrl": "https://chrispiech.github.io/probabilityForComputerScientists/en/part1/<b>combinatorics</b>", "snippet": "Parameter Estimation Maximum Likelihood Estimation Maximum A Posteriori <b>Machine</b> <b>Learning</b> Na\u00efve Bayes Logistic Regression; Worked Examples. MLE Normal Demo; MLE Mixture Model \u24b8 Chris Piech, Stanford University <b>Combinatorics</b>. Counting problems can be approached from the basic building blocks described in the first section: Counting. However some counting problems are so ubiquitous in the world of probability that it is worth knowing a few higher level counting abstractions. When solving ...", "dateLastCrawled": "2022-02-02T17:48:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "<b>Bias-Variance Decomposition</b> - mlxtend", "url": "http://rasbt.github.io/mlxtend/user_guide/evaluate/bias_variance_decomp/", "isFamilyFriendly": true, "displayUrl": "rasbt.github.io/mlxtend/user_guide/evaluate/bias_variance_decomp", "snippet": "Proceedings of 17th International Conference on <b>Machine</b> <b>Learning</b>. 2000. [2] Dietterich, Thomas G., and Eun Bae Kong. <b>Machine</b> <b>learning</b> bias, statistical bias, and statistical variance of decision tree algorithms. Technical report, Department of Computer Science, Oregon State University, 1995. Example 1 -- <b>Bias Variance Decomposition</b> of a Decision Tree Classifier from mlxtend.evaluate import bias_variance_decomp from sklearn.tree import DecisionTreeClassifier from mlxtend.data import iris_data ...", "dateLastCrawled": "2022-01-31T12:55:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "<b>Machine Learning Series Day 4</b> (K-NN) | by Alex Guanga | Becoming Human ...", "url": "https://becominghuman.ai/machine-learning-series-day-4-k-nn-8e9ba757a419", "isFamilyFriendly": true, "displayUrl": "https://becominghuman.ai/<b>machine-learning-series-day-4</b>-k-nn-8e9ba757a419", "snippet": "Visual Music &amp; <b>Machine</b> <b>Learning</b> Workshop for Kids. 3. The Proof of <b>Machine</b> Consciousness Project . 4. Is Flubber Sentient? You go to baseball camps and are stunned by the level of talent in the field. But there\u2019s one player that stands out. This young player has a smooth and powerful swing. His fielding is impeccable. He reminds you of Carlos Correa and Nolan Arenado \u2014 MLB superstars. Notice your thought process. You are comparing the characteristics of previous players to help you ...", "dateLastCrawled": "2022-01-29T10:51:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "The <b>Most Important Data Science Tool</b> for Market and Customer ...", "url": "https://towardsdatascience.com/the-most-important-data-science-tool-for-market-and-customer-segmentation-c9709ca0b64a", "isFamilyFriendly": true, "displayUrl": "https://towardsdatascience.com/the-<b>most-important-data-science-tool</b>-for-market-and...", "snippet": "Unsupervised <b>machine</b> <b>learning</b>: you don\u2019t need to provide labelled data to the algorithm on how to group the customers. It will scan through all information associated with each customer and learn the best way to group them together. A predefined number of groups: you need to tell K-means how many groups to form. This is the only input needed from you. Here is an <b>analogy</b> to the above concepts: Imagine you have some toys and without providing further instruction, you ask your kid to separate ...", "dateLastCrawled": "2022-02-01T11:18:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Building a RNN Recommendation Engine with <b>TensorFlow</b> | by Alfonso CARTA ...", "url": "https://medium.com/decathlontechnology/building-a-rnn-recommendation-engine-with-tensorflow-505644aa9ff3", "isFamilyFriendly": true, "displayUrl": "https://medium.com/decathlontechnology/building-a-rnn-recommendation-engine-with...", "snippet": "<b>Bucketing</b> of nb_days. The nb_days feature contains variable length sequences of integer values ranging from 365 to 1. This because we extracted one year transaction history and so 365 represent ...", "dateLastCrawled": "2022-02-03T13:53:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "Supervised <b>Learning</b> Interview Questions - Part 1/4 - The Data Monk", "url": "https://thedatamonk.com/supervised-learning-interview-questions/", "isFamilyFriendly": true, "displayUrl": "https://thedatamonk.com/supervised-<b>learning</b>-interview-questions", "snippet": "It\u2019s a bot. This is <b>machine</b> <b>learning</b> e. Driverless car is a direct product of <b>machine</b> <b>learning</b> and artificial intelligence 2. What is Supervised <b>Learning</b>? \u2013 We can go on and on with the basic definition of Supervised <b>learning</b>, but that would defeat the purpose of the book. Supervised means a thing which you can monitor. Supervised <b>learning</b> ...", "dateLastCrawled": "2022-01-17T14:05:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "4. Patterns of Reasoning - <b>Thinking with Data</b> [Book]", "url": "https://www.oreilly.com/library/view/thinking-with-data/9781491949757/ch04.html", "isFamilyFriendly": true, "displayUrl": "https://www.oreilly.com/library/view/<b>thinking-with-data</b>/9781491949757/ch04.html", "snippet": "Arguments by <b>analogy</b> come in two flavors: literal and figurative. In a literal <b>analogy</b>, two things are actually of similar types. If we have two clients with a similar purchasing history to date, it seems reasonable to infer that after one client makes a big purchase, the other client may come soon after. The justification for argument by <b>analogy</b> is that if the things are alike in some ways, they will be alike in a new way under discussion.", "dateLastCrawled": "2022-01-25T03:40:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Magnet Shuffle Service: Push-based Shuffle at LinkedIn", "url": "https://www.slideshare.net/databricks/magnet-shuffle-service-pushbased-shuffle-at-linkedin", "isFamilyFriendly": true, "displayUrl": "https://www.slideshare.net/databricks/magnet-shuffle-service-pushbased-shuffle-at-linkedin", "snippet": "Python <b>Machine</b> <b>Learning</b> Sebastian Raschka (4/5) Free. Guerrilla Data Analysis Using Microsoft Excel: 2nd Edition Covering Excel 2010/2013 Oz du Soleil (3/5) Free. Data Model Patterns: A Metadata Map David C. Hay (3/5) Free . Outnumbered: From Facebook and Google to Fake News and Filter-bubbles \u2013 The Algorithms That Control Our Lives David Sumpter (5/5) Free. Dynamic Models in Biology Stephen P. Ellner (4/5) Free. Agent-Based and Individual-Based Modeling: A Practical Introduction, Second ...", "dateLastCrawled": "2021-12-29T02:16:00.0000000Z", "language": "en", "isNavigational": false}], [{"id": "https://api.bing.microsoft.com/api/v7/#WebPages.0", "name": "Buckets Partitioning Vs Bucketing <b>Bucketing is similar</b> to partition ...", "url": "https://www.coursehero.com/file/p2kehm0s/Buckets-Partitioning-Vs-Bucketing-Bucketing-is-similar-to-partition-However/", "isFamilyFriendly": true, "displayUrl": "https://www.coursehero.com/file/p2kehm0s/Buckets-Partitioning-Vs-Bucketing-Bucketing...", "snippet": "<b>Machine</b> <b>Learning</b> Definition Arthur Samuel (1959), <b>Machine</b> <b>Learning</b>: It is a field of study that gives computers the ability to learn without being explicitly programmed. Tom Mitchell (1998), Well-posed <b>Learning</b> Problem: A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its performance on T, as measured by P, improves with experience E. Example Tom\u2019s definition is the latest <b>Machine</b> <b>Learning</b> Definition. According to Tom\u2019s ...", "dateLastCrawled": "2022-01-21T17:13:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.1", "name": "What is <b>Bucketing in Hive? [Example</b> Included] - <b>Okera</b>", "url": "https://www.okera.com/blogs/using-apache-hive-bucketing-with-okera/", "isFamilyFriendly": true, "displayUrl": "https://www.<b>okera</b>.com/blogs/using-apache-hive-bucketing-with-<b>okera</b>", "snippet": "<b>Bucketing is similar</b> to partitioning \u2013 in both cases, data is segregated and stored \u2013 but there are a few key differences. Partitioning is based on a column that is repeated in the dataset and involves grouping data by a particular value of the partition column. While bucketing organizes data by a range of values, mainly involving primary key or non-repeated values in a dataset. Partitioning is most effective for low volume data, as it carries the possibility of too many small partition ...", "dateLastCrawled": "2022-01-31T03:22:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.2", "name": "Understanding bucketing in Spark | Optimizing Databricks Workloads", "url": "https://subscription.packtpub.com/book/mobile/9781801819077/7/ch07lvl1sec42/understanding-bucketing-in-spark", "isFamilyFriendly": true, "displayUrl": "https://subscription.packtpub.com/book/mobile/9781801819077/7/ch07lvl1sec42/...", "snippet": "Bucketing is an optimization technique that helps to prevent shuffling and sorting of data during compute-heavy operations such as joins. Based on the bucketing columns we specify, data is collected in a number of bins.<b>Bucketing is similar</b> to partitioning, but in the case of partitioning, we create directories for each partition.", "dateLastCrawled": "2022-01-24T02:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.3", "name": "Hive Infer Schema From Csv", "url": "https://groups.google.com/g/ze2lrbt/c/_4TqWK58xN0", "isFamilyFriendly": true, "displayUrl": "https://groups.google.com/g/ze2lrbt/c/_4TqWK58xN0", "snippet": "<b>Bucketing is similar</b> to partitioning, they allow you to run some schema update operations while preventing other such operations. All schemas from csv data are creating a new. You can create many tables under a single schema. There is therefore need to terrify the data into mere external table then it refers to perform data file from different original location and the file already contains the data. Occasionally, apps, and to provide you with relevant advertising. Complex grouping ...", "dateLastCrawled": "2022-01-25T09:12:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.4", "name": "Tips and <b>Best Practices to Take Advantage of</b> Spark 2.x | HPE Developer ...", "url": "https://developer.hpe.com/blog/tips-and-best-practices-to-take-advantage-of-spark-2x/", "isFamilyFriendly": true, "displayUrl": "https://developer.hpe.com/blog/tips-and-<b>best-practices-to-take-advantage-of</b>-spark-2x", "snippet": "<b>Bucketing is similar</b> to partitioning, but partitioning creates a directory for each partition, whereas bucketing distributes data across a fixed number of buckets by a hash on the bucket value. Tables can be bucketed on more than one value and bucketing can be used with or without partitioning. As an example with the flight dataset, here is the code to persist a flights DataFrame as a table, consisting of Parquet files partitioned by the src column and bucketed by the dst and carrier columns ...", "dateLastCrawled": "2022-01-30T22:21:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.5", "name": "azure-docs/apache-spark-performance.md at master - <b>GitHub</b>", "url": "https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/synapse-analytics/spark/apache-spark-performance.md", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/MicrosoftDocs/azure-docs/blob/master/articles/synapse-analytics/...", "snippet": "<b>Bucketing is similar</b> to data partitioning, but each bucket can hold a set of column values rather than just one. Bucketing works well for partitioning on large (in the millions or more) numbers of values, such as product identifiers. A bucket is determined by hashing the bucket key of the row. Bucketed tables offer unique optimizations because they store metadata about how they were bucketed and sorted.", "dateLastCrawled": "2021-12-28T18:32:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.6", "name": "hdinsight-docs/hdinsight-spark-perf.md at master - <b>GitHub</b>", "url": "https://github.com/ZoinerTejada/hdinsight-docs/blob/master/hdinsight-spark-perf.md", "isFamilyFriendly": true, "displayUrl": "https://<b>github.com</b>/ZoinerTejada/hdinsight-docs/blob/master/hdinsight-spark-perf.md", "snippet": "<b>Learning</b> Lab \u2192 Open source ... <b>Bucketing is similar</b> to data partitioning, but each bucket can hold a set of column values (bucket), instead of just one. This is great for partitioning on large (in the millions +) number of values, like product Ids. A bucket is determined by hashing the bucket key of the row. Bucketed tables offer unique optimizations because they store metadata about how they were bucketed and sorted. Some advanced bucketing features are: Query optimization based on ...", "dateLastCrawled": "2021-11-02T05:16:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.7", "name": "Elasticsearch explained - Programmer Sought", "url": "https://www.programmersought.com/article/40534519809/", "isFamilyFriendly": true, "displayUrl": "https://www.programmersought.com/article/40534519809", "snippet": "<b>Learning</b> objectives. Install Elasticsearch independently; Will use Rest&#39;s API operation index; Will use Rest&#39;s API to query data; Will use Rest&#39;s API to aggregate data; 1. Introduction and installation of Elasticsearch 1.1. Introduction 1.1.1.Elastic. Elastic&#39;s official website. Elastic has a complete product line and solutions: Elasticsearch, Kibana, Logstash, etc. The three mentioned earlier are the ELK technology stacks that everyone often talks about. 1.1.2.Elasticsearch. Elasticsearch ...", "dateLastCrawled": "2021-05-02T18:14:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.8", "name": "<b>Big data analytics -hive</b>", "url": "https://www.slideshare.net/karthikakarthi9/big-data-analytics-hive", "isFamilyFriendly": true, "displayUrl": "https://www.slideshare.net/karthikakarthi9/<b>big-data-analytics-hive</b>", "snippet": "<b>Learning</b> Python Design Patterns Gennadiy Zlobin (4/5) Free. Guerrilla Data Analysis Using Microsoft Excel: 2nd Edition Covering Excel 2010/2013 Oz du Soleil (3/5) Free. Python <b>Machine</b> <b>Learning</b> Sebastian Raschka (3.5/5) Free. Outnumbered: From Facebook and Google to Fake News and Filter-bubbles \u2013 The Algorithms That Control Our Lives David Sumpter (4.5/5) Free. Data Model Patterns: A Metadata Map David C. Hay (3/5) Free. Data Visualization: a successful design process Andy Kirk (4/5) Free ...", "dateLastCrawled": "2021-10-12T22:30:00.0000000Z", "language": "en", "isNavigational": false}, {"id": "https://api.bing.microsoft.com/api/v7/#WebPages.9", "name": "<b>Spark 2018 e Book</b> | Apache Spark | Map Reduce", "url": "https://www.scribd.com/document/435442431/Spark2018eBook-pdf", "isFamilyFriendly": true, "displayUrl": "https://www.scribd.com/document/435442431/<b>Spark2018eBook</b>-pdf", "snippet": "<b>Machine</b> <b>learning</b> has the advantage that it learns from the data, and it can give finer grained data-driven probabilistic predictions. According to Ted Dunning, it is better to use precise terminology, like <b>machine</b> <b>learning</b> or deep <b>learning</b>, instead of the word AI, because before we get something to work well, we call it AI; afterwards, we always call it something else. AI is better used as a word for the next frontier. How Has Analytics Changed in the Last 10 Years? According to Thomas ...", "dateLastCrawled": "2021-11-02T21:51:00.0000000Z", "language": "en", "isNavigational": false}], [], [], []], "all_bing_queries": ["+(bucketing)  is like +(sorting a deck of cards)", "+(bucketing) is similar to +(sorting a deck of cards)", "+(bucketing) can be thought of as +(sorting a deck of cards)", "+(bucketing) can be compared to +(sorting a deck of cards)", "machine learning +(bucketing AND analogy)", "machine learning +(\"bucketing is like\")", "machine learning +(\"bucketing is similar\")", "machine learning +(\"just as bucketing\")", "machine learning +(\"bucketing can be thought of as\")", "machine learning +(\"bucketing can be compared to\")"]}